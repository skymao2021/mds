import { ComponentOptionsMixin } from 'vue';
import { ComponentProvideOptions } from 'vue';
import { ComputedRef } from 'vue';
import { CSSProperties } from 'vue';
import { DefineComponent } from 'vue';
import { ExtractPropTypes } from 'vue';
import { Globals } from 'csstype';
import { Placement } from '@popperjs/core';
import { PositioningStrategy } from '@popperjs/core';
import { Property } from 'csstype';
import { PropType } from 'vue';
import { PublicProps } from 'vue';
import { Ref } from 'vue';

export declare const ALPHA_FORMAT_MAP: {
    rgb: string;
    hex: string;
    hsl: string;
    hsv: string;
};

declare const _default: DefineComponent<ExtractPropTypes<    {
value: {
type: PropType<string | string[]>;
};
theme: {
type: PropType<Theme>;
default: string;
};
size: {
type: (NumberConstructor | StringConstructor)[];
default: number;
};
width: {
type: (NumberConstructor | StringConstructor)[];
};
height: {
type: (NumberConstructor | StringConstructor)[];
};
format: {
type: PropType<Format>;
};
showPicker: {
type: BooleanConstructor;
default: any;
};
showAlpha: {
type: BooleanConstructor;
default: boolean;
};
addColor: {
type: BooleanConstructor;
default: boolean;
};
deleteColor: {
type: BooleanConstructor;
default: boolean;
};
max: {
type: NumberConstructor;
default: number;
};
popupContainer: {
type: PropType<string | boolean | HTMLElement>;
default: string;
};
zIndex: {
type: NumberConstructor;
default: number;
};
colors: {
type: PropType<string[]>;
default: () => string[];
};
position: {
type: PropType<PositioningStrategy>;
};
placement: {
type: PropType<Placement>;
};
formatOptions: {
type: PropType<Boolean | Format[]>;
default: boolean;
};
}>, {
valueList: Ref<string[], string[]>;
colorItemSelected: (index: any) => boolean;
selectedColor: ComputedRef<string>;
selectedIndex: Ref<number, number>;
isShowPicker: Ref<boolean, boolean>;
addColorItemShow: Ref<boolean, boolean>;
onPickerChange: (color: string) => void;
colorPicker: Ref<HTMLElement, HTMLElement>;
onColorClick: (e: Event) => Promise<void>;
pickerRef: Ref<any, any>;
onColorItemDragStart: (e: DragEvent) => void;
onColorItemDragOver: (e: DragEvent) => void;
onColorItemDrop: (e: DragEvent) => void;
colorItemsRef: Ref<any[], any[]>;
pickerStyle: Ref<    {
[x: `--${string}`]: string | number;
accentColor?: Property.AccentColor;
alignContent?: Property.AlignContent;
alignItems?: Property.AlignItems;
alignSelf?: Property.AlignSelf;
alignTracks?: Property.AlignTracks;
animationComposition?: Property.AnimationComposition;
animationDelay?: Property.AnimationDelay<string & {}>;
animationDirection?: Property.AnimationDirection;
animationDuration?: Property.AnimationDuration<string & {}>;
animationFillMode?: Property.AnimationFillMode;
animationIterationCount?: Property.AnimationIterationCount;
animationName?: Property.AnimationName;
animationPlayState?: Property.AnimationPlayState;
animationRangeEnd?: Property.AnimationRangeEnd<string | number>;
animationRangeStart?: Property.AnimationRangeStart<string | number>;
animationTimeline?: Property.AnimationTimeline;
animationTimingFunction?: Property.AnimationTimingFunction;
appearance?: Property.Appearance;
aspectRatio?: Property.AspectRatio;
backdropFilter?: Property.BackdropFilter;
backfaceVisibility?: Property.BackfaceVisibility;
backgroundAttachment?: Property.BackgroundAttachment;
backgroundBlendMode?: Property.BackgroundBlendMode;
backgroundClip?: Property.BackgroundClip;
backgroundColor?: Property.BackgroundColor;
backgroundImage?: Property.BackgroundImage;
backgroundOrigin?: Property.BackgroundOrigin;
backgroundPositionX?: Property.BackgroundPositionX<string | number>;
backgroundPositionY?: Property.BackgroundPositionY<string | number>;
backgroundRepeat?: Property.BackgroundRepeat;
backgroundSize?: Property.BackgroundSize<string | number>;
blockOverflow?: Property.BlockOverflow;
blockSize?: Property.BlockSize<string | number>;
borderBlockColor?: Property.BorderBlockColor;
borderBlockEndColor?: Property.BorderBlockEndColor;
borderBlockEndStyle?: Property.BorderBlockEndStyle;
borderBlockEndWidth?: Property.BorderBlockEndWidth<string | number>;
borderBlockStartColor?: Property.BorderBlockStartColor;
borderBlockStartStyle?: Property.BorderBlockStartStyle;
borderBlockStartWidth?: Property.BorderBlockStartWidth<string | number>;
borderBlockStyle?: Property.BorderBlockStyle;
borderBlockWidth?: Property.BorderBlockWidth<string | number>;
borderBottomColor?: Property.BorderBottomColor;
borderBottomLeftRadius?: Property.BorderBottomLeftRadius<string | number>;
borderBottomRightRadius?: Property.BorderBottomRightRadius<string | number>;
borderBottomStyle?: Property.BorderBottomStyle;
borderBottomWidth?: Property.BorderBottomWidth<string | number>;
borderCollapse?: Property.BorderCollapse;
borderEndEndRadius?: Property.BorderEndEndRadius<string | number>;
borderEndStartRadius?: Property.BorderEndStartRadius<string | number>;
borderImageOutset?: Property.BorderImageOutset<string | number>;
borderImageRepeat?: Property.BorderImageRepeat;
borderImageSlice?: Property.BorderImageSlice;
borderImageSource?: Property.BorderImageSource;
borderImageWidth?: Property.BorderImageWidth<string | number>;
borderInlineColor?: Property.BorderInlineColor;
borderInlineEndColor?: Property.BorderInlineEndColor;
borderInlineEndStyle?: Property.BorderInlineEndStyle;
borderInlineEndWidth?: Property.BorderInlineEndWidth<string | number>;
borderInlineStartColor?: Property.BorderInlineStartColor;
borderInlineStartStyle?: Property.BorderInlineStartStyle;
borderInlineStartWidth?: Property.BorderInlineStartWidth<string | number>;
borderInlineStyle?: Property.BorderInlineStyle;
borderInlineWidth?: Property.BorderInlineWidth<string | number>;
borderLeftColor?: Property.BorderLeftColor;
borderLeftStyle?: Property.BorderLeftStyle;
borderLeftWidth?: Property.BorderLeftWidth<string | number>;
borderRightColor?: Property.BorderRightColor;
borderRightStyle?: Property.BorderRightStyle;
borderRightWidth?: Property.BorderRightWidth<string | number>;
borderSpacing?: Property.BorderSpacing<string | number>;
borderStartEndRadius?: Property.BorderStartEndRadius<string | number>;
borderStartStartRadius?: Property.BorderStartStartRadius<string | number>;
borderTopColor?: Property.BorderTopColor;
borderTopLeftRadius?: Property.BorderTopLeftRadius<string | number>;
borderTopRightRadius?: Property.BorderTopRightRadius<string | number>;
borderTopStyle?: Property.BorderTopStyle;
borderTopWidth?: Property.BorderTopWidth<string | number>;
bottom?: Property.Bottom<string | number>;
boxDecorationBreak?: Property.BoxDecorationBreak;
boxShadow?: Property.BoxShadow;
boxSizing?: Property.BoxSizing;
breakAfter?: Property.BreakAfter;
breakBefore?: Property.BreakBefore;
breakInside?: Property.BreakInside;
captionSide?: Property.CaptionSide;
caretColor?: Property.CaretColor;
caretShape?: Property.CaretShape;
clear?: Property.Clear;
clipPath?: Property.ClipPath;
color?: Property.Color;
colorAdjust?: Property.PrintColorAdjust;
colorScheme?: Property.ColorScheme;
columnCount?: Property.ColumnCount;
columnFill?: Property.ColumnFill;
columnGap?: Property.ColumnGap<string | number>;
columnRuleColor?: Property.ColumnRuleColor;
columnRuleStyle?: Property.ColumnRuleStyle;
columnRuleWidth?: Property.ColumnRuleWidth<string | number>;
columnSpan?: Property.ColumnSpan;
columnWidth?: Property.ColumnWidth<string | number>;
contain?: Property.Contain;
containIntrinsicBlockSize?: Property.ContainIntrinsicBlockSize<string | number>;
containIntrinsicHeight?: Property.ContainIntrinsicHeight<string | number>;
containIntrinsicInlineSize?: Property.ContainIntrinsicInlineSize<string | number>;
containIntrinsicWidth?: Property.ContainIntrinsicWidth<string | number>;
containerName?: Property.ContainerName;
containerType?: Property.ContainerType;
content?: Property.Content;
contentVisibility?: Property.ContentVisibility;
counterIncrement?: Property.CounterIncrement;
counterReset?: Property.CounterReset;
counterSet?: Property.CounterSet;
cursor?: Property.Cursor;
direction?: Property.Direction;
display?: Property.Display;
emptyCells?: Property.EmptyCells;
filter?: Property.Filter;
flexBasis?: Property.FlexBasis<string | number>;
flexDirection?: Property.FlexDirection;
flexGrow?: Property.FlexGrow;
flexShrink?: Property.FlexShrink;
flexWrap?: Property.FlexWrap;
float?: Property.Float;
fontFamily?: Property.FontFamily;
fontFeatureSettings?: Property.FontFeatureSettings;
fontKerning?: Property.FontKerning;
fontLanguageOverride?: Property.FontLanguageOverride;
fontOpticalSizing?: Property.FontOpticalSizing;
fontPalette?: Property.FontPalette;
fontSize?: Property.FontSize<string | number>;
fontSizeAdjust?: Property.FontSizeAdjust;
fontSmooth?: Property.FontSmooth<string | number>;
fontStretch?: Property.FontStretch;
fontStyle?: Property.FontStyle;
fontSynthesis?: Property.FontSynthesis;
fontSynthesisPosition?: Property.FontSynthesisPosition;
fontSynthesisSmallCaps?: Property.FontSynthesisSmallCaps;
fontSynthesisStyle?: Property.FontSynthesisStyle;
fontSynthesisWeight?: Property.FontSynthesisWeight;
fontVariant?: Property.FontVariant;
fontVariantAlternates?: Property.FontVariantAlternates;
fontVariantCaps?: Property.FontVariantCaps;
fontVariantEastAsian?: Property.FontVariantEastAsian;
fontVariantEmoji?: Property.FontVariantEmoji;
fontVariantLigatures?: Property.FontVariantLigatures;
fontVariantNumeric?: Property.FontVariantNumeric;
fontVariantPosition?: Property.FontVariantPosition;
fontVariationSettings?: Property.FontVariationSettings;
fontWeight?: Property.FontWeight;
forcedColorAdjust?: Property.ForcedColorAdjust;
gridAutoColumns?: Property.GridAutoColumns<string | number>;
gridAutoFlow?: Property.GridAutoFlow;
gridAutoRows?: Property.GridAutoRows<string | number>;
gridColumnEnd?: Property.GridColumnEnd;
gridColumnStart?: Property.GridColumnStart;
gridRowEnd?: Property.GridRowEnd;
gridRowStart?: Property.GridRowStart;
gridTemplateAreas?: Property.GridTemplateAreas;
gridTemplateColumns?: Property.GridTemplateColumns<string | number>;
gridTemplateRows?: Property.GridTemplateRows<string | number>;
hangingPunctuation?: Property.HangingPunctuation;
height?: Property.Height<string | number>;
hyphenateCharacter?: Property.HyphenateCharacter;
hyphenateLimitChars?: Property.HyphenateLimitChars;
hyphens?: Property.Hyphens;
imageOrientation?: Property.ImageOrientation;
imageRendering?: Property.ImageRendering;
imageResolution?: Property.ImageResolution;
initialLetter?: Property.InitialLetter;
inlineSize?: Property.InlineSize<string | number>;
inputSecurity?: Property.InputSecurity;
insetBlockEnd?: Property.InsetBlockEnd<string | number>;
insetBlockStart?: Property.InsetBlockStart<string | number>;
insetInlineEnd?: Property.InsetInlineEnd<string | number>;
insetInlineStart?: Property.InsetInlineStart<string | number>;
isolation?: Property.Isolation;
justifyContent?: Property.JustifyContent;
justifyItems?: Property.JustifyItems;
justifySelf?: Property.JustifySelf;
justifyTracks?: Property.JustifyTracks;
left?: Property.Left<string | number>;
letterSpacing?: Property.LetterSpacing<string | number>;
lineBreak?: Property.LineBreak;
lineHeight?: Property.LineHeight<string | number>;
lineHeightStep?: Property.LineHeightStep<string | number>;
listStyleImage?: Property.ListStyleImage;
listStylePosition?: Property.ListStylePosition;
listStyleType?: Property.ListStyleType;
marginBlockEnd?: Property.MarginBlockEnd<string | number>;
marginBlockStart?: Property.MarginBlockStart<string | number>;
marginBottom?: Property.MarginBottom<string | number>;
marginInlineEnd?: Property.MarginInlineEnd<string | number>;
marginInlineStart?: Property.MarginInlineStart<string | number>;
marginLeft?: Property.MarginLeft<string | number>;
marginRight?: Property.MarginRight<string | number>;
marginTop?: Property.MarginTop<string | number>;
marginTrim?: Property.MarginTrim;
maskBorderMode?: Property.MaskBorderMode;
maskBorderOutset?: Property.MaskBorderOutset<string | number>;
maskBorderRepeat?: Property.MaskBorderRepeat;
maskBorderSlice?: Property.MaskBorderSlice;
maskBorderSource?: Property.MaskBorderSource;
maskBorderWidth?: Property.MaskBorderWidth<string | number>;
maskClip?: Property.MaskClip;
maskComposite?: Property.MaskComposite;
maskImage?: Property.MaskImage;
maskMode?: Property.MaskMode;
maskOrigin?: Property.MaskOrigin;
maskPosition?: Property.MaskPosition<string | number>;
maskRepeat?: Property.MaskRepeat;
maskSize?: Property.MaskSize<string | number>;
maskType?: Property.MaskType;
masonryAutoFlow?: Property.MasonryAutoFlow;
mathDepth?: Property.MathDepth;
mathShift?: Property.MathShift;
mathStyle?: Property.MathStyle;
maxBlockSize?: Property.MaxBlockSize<string | number>;
maxHeight?: Property.MaxHeight<string | number>;
maxInlineSize?: Property.MaxInlineSize<string | number>;
maxLines?: Property.MaxLines;
maxWidth?: Property.MaxWidth<string | number>;
minBlockSize?: Property.MinBlockSize<string | number>;
minHeight?: Property.MinHeight<string | number>;
minInlineSize?: Property.MinInlineSize<string | number>;
minWidth?: Property.MinWidth<string | number>;
mixBlendMode?: Property.MixBlendMode;
motionDistance?: Property.OffsetDistance<string | number>;
motionPath?: Property.OffsetPath;
motionRotation?: Property.OffsetRotate;
objectFit?: Property.ObjectFit;
objectPosition?: Property.ObjectPosition<string | number>;
offsetAnchor?: Property.OffsetAnchor<string | number>;
offsetDistance?: Property.OffsetDistance<string | number>;
offsetPath?: Property.OffsetPath;
offsetPosition?: Property.OffsetPosition<string | number>;
offsetRotate?: Property.OffsetRotate;
offsetRotation?: Property.OffsetRotate;
opacity?: Property.Opacity;
order?: Property.Order;
orphans?: Property.Orphans;
outlineColor?: Property.OutlineColor;
outlineOffset?: Property.OutlineOffset<string | number>;
outlineStyle?: Property.OutlineStyle;
outlineWidth?: Property.OutlineWidth<string | number>;
overflowAnchor?: Property.OverflowAnchor;
overflowBlock?: Property.OverflowBlock;
overflowClipBox?: Property.OverflowClipBox;
overflowClipMargin?: Property.OverflowClipMargin<string | number>;
overflowInline?: Property.OverflowInline;
overflowWrap?: Property.OverflowWrap;
overflowX?: Property.OverflowX;
overflowY?: Property.OverflowY;
overlay?: Property.Overlay;
overscrollBehaviorBlock?: Property.OverscrollBehaviorBlock;
overscrollBehaviorInline?: Property.OverscrollBehaviorInline;
overscrollBehaviorX?: Property.OverscrollBehaviorX;
overscrollBehaviorY?: Property.OverscrollBehaviorY;
paddingBlockEnd?: Property.PaddingBlockEnd<string | number>;
paddingBlockStart?: Property.PaddingBlockStart<string | number>;
paddingBottom?: Property.PaddingBottom<string | number>;
paddingInlineEnd?: Property.PaddingInlineEnd<string | number>;
paddingInlineStart?: Property.PaddingInlineStart<string | number>;
paddingLeft?: Property.PaddingLeft<string | number>;
paddingRight?: Property.PaddingRight<string | number>;
paddingTop?: Property.PaddingTop<string | number>;
page?: Property.Page;
pageBreakAfter?: Property.PageBreakAfter;
pageBreakBefore?: Property.PageBreakBefore;
pageBreakInside?: Property.PageBreakInside;
paintOrder?: Property.PaintOrder;
perspective?: Property.Perspective<string | number>;
perspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
pointerEvents?: Property.PointerEvents;
position?: Property.Position;
printColorAdjust?: Property.PrintColorAdjust;
quotes?: Property.Quotes;
resize?: Property.Resize;
right?: Property.Right<string | number>;
rotate?: Property.Rotate;
rowGap?: Property.RowGap<string | number>;
rubyAlign?: Property.RubyAlign;
rubyMerge?: Property.RubyMerge;
rubyPosition?: Property.RubyPosition;
scale?: Property.Scale;
scrollBehavior?: Property.ScrollBehavior;
scrollMarginBlockEnd?: Property.ScrollMarginBlockEnd<string | number>;
scrollMarginBlockStart?: Property.ScrollMarginBlockStart<string | number>;
scrollMarginBottom?: Property.ScrollMarginBottom<string | number>;
scrollMarginInlineEnd?: Property.ScrollMarginInlineEnd<string | number>;
scrollMarginInlineStart?: Property.ScrollMarginInlineStart<string | number>;
scrollMarginLeft?: Property.ScrollMarginLeft<string | number>;
scrollMarginRight?: Property.ScrollMarginRight<string | number>;
scrollMarginTop?: Property.ScrollMarginTop<string | number>;
scrollPaddingBlockEnd?: Property.ScrollPaddingBlockEnd<string | number>;
scrollPaddingBlockStart?: Property.ScrollPaddingBlockStart<string | number>;
scrollPaddingBottom?: Property.ScrollPaddingBottom<string | number>;
scrollPaddingInlineEnd?: Property.ScrollPaddingInlineEnd<string | number>;
scrollPaddingInlineStart?: Property.ScrollPaddingInlineStart<string | number>;
scrollPaddingLeft?: Property.ScrollPaddingLeft<string | number>;
scrollPaddingRight?: Property.ScrollPaddingRight<string | number>;
scrollPaddingTop?: Property.ScrollPaddingTop<string | number>;
scrollSnapAlign?: Property.ScrollSnapAlign;
scrollSnapMarginBottom?: Property.ScrollMarginBottom<string | number>;
scrollSnapMarginLeft?: Property.ScrollMarginLeft<string | number>;
scrollSnapMarginRight?: Property.ScrollMarginRight<string | number>;
scrollSnapMarginTop?: Property.ScrollMarginTop<string | number>;
scrollSnapStop?: Property.ScrollSnapStop;
scrollSnapType?: Property.ScrollSnapType;
scrollTimelineAxis?: Property.ScrollTimelineAxis;
scrollTimelineName?: Property.ScrollTimelineName;
scrollbarColor?: Property.ScrollbarColor;
scrollbarGutter?: Property.ScrollbarGutter;
scrollbarWidth?: Property.ScrollbarWidth;
shapeImageThreshold?: Property.ShapeImageThreshold;
shapeMargin?: Property.ShapeMargin<string | number>;
shapeOutside?: Property.ShapeOutside;
tabSize?: Property.TabSize<string | number>;
tableLayout?: Property.TableLayout;
textAlign?: Property.TextAlign;
textAlignLast?: Property.TextAlignLast;
textCombineUpright?: Property.TextCombineUpright;
textDecorationColor?: Property.TextDecorationColor;
textDecorationLine?: Property.TextDecorationLine;
textDecorationSkip?: Property.TextDecorationSkip;
textDecorationSkipInk?: Property.TextDecorationSkipInk;
textDecorationStyle?: Property.TextDecorationStyle;
textDecorationThickness?: Property.TextDecorationThickness<string | number>;
textEmphasisColor?: Property.TextEmphasisColor;
textEmphasisPosition?: Property.TextEmphasisPosition;
textEmphasisStyle?: Property.TextEmphasisStyle;
textIndent?: Property.TextIndent<string | number>;
textJustify?: Property.TextJustify;
textOrientation?: Property.TextOrientation;
textOverflow?: Property.TextOverflow;
textRendering?: Property.TextRendering;
textShadow?: Property.TextShadow;
textSizeAdjust?: Property.TextSizeAdjust;
textTransform?: Property.TextTransform;
textUnderlineOffset?: Property.TextUnderlineOffset<string | number>;
textUnderlinePosition?: Property.TextUnderlinePosition;
textWrap?: Property.TextWrap;
timelineScope?: Property.TimelineScope;
top?: Property.Top<string | number>;
touchAction?: Property.TouchAction;
transform?: Property.Transform;
transformBox?: Property.TransformBox;
transformOrigin?: Property.TransformOrigin<string | number>;
transformStyle?: Property.TransformStyle;
transitionBehavior?: Property.TransitionBehavior;
transitionDelay?: Property.TransitionDelay<string & {}>;
transitionDuration?: Property.TransitionDuration<string & {}>;
transitionProperty?: Property.TransitionProperty;
transitionTimingFunction?: Property.TransitionTimingFunction;
translate?: Property.Translate<string | number>;
unicodeBidi?: Property.UnicodeBidi;
userSelect?: Property.UserSelect;
verticalAlign?: Property.VerticalAlign<string | number>;
viewTimelineAxis?: Property.ViewTimelineAxis;
viewTimelineInset?: Property.ViewTimelineInset<string | number>;
viewTimelineName?: Property.ViewTimelineName;
viewTransitionName?: Property.ViewTransitionName;
visibility?: Property.Visibility;
whiteSpace?: Property.WhiteSpace;
whiteSpaceCollapse?: Property.WhiteSpaceCollapse;
whiteSpaceTrim?: Property.WhiteSpaceTrim;
widows?: Property.Widows;
width?: Property.Width<string | number>;
willChange?: Property.WillChange;
wordBreak?: Property.WordBreak;
wordSpacing?: Property.WordSpacing<string | number>;
wordWrap?: Property.WordWrap;
writingMode?: Property.WritingMode;
zIndex?: Property.ZIndex;
zoom?: Property.Zoom;
all?: Globals;
animation?: Property.Animation<string & {}>;
animationRange?: Property.AnimationRange<string | number>;
background?: Property.Background<string | number>;
backgroundPosition?: Property.BackgroundPosition<string | number>;
border?: Property.Border<string | number>;
borderBlock?: Property.BorderBlock<string | number>;
borderBlockEnd?: Property.BorderBlockEnd<string | number>;
borderBlockStart?: Property.BorderBlockStart<string | number>;
borderBottom?: Property.BorderBottom<string | number>;
borderColor?: Property.BorderColor;
borderImage?: Property.BorderImage;
borderInline?: Property.BorderInline<string | number>;
borderInlineEnd?: Property.BorderInlineEnd<string | number>;
borderInlineStart?: Property.BorderInlineStart<string | number>;
borderLeft?: Property.BorderLeft<string | number>;
borderRadius?: Property.BorderRadius<string | number>;
borderRight?: Property.BorderRight<string | number>;
borderStyle?: Property.BorderStyle;
borderTop?: Property.BorderTop<string | number>;
borderWidth?: Property.BorderWidth<string | number>;
caret?: Property.Caret;
columnRule?: Property.ColumnRule<string | number>;
columns?: Property.Columns<string | number>;
containIntrinsicSize?: Property.ContainIntrinsicSize<string | number>;
container?: Property.Container;
flex?: Property.Flex<string | number>;
flexFlow?: Property.FlexFlow;
font?: Property.Font;
gap?: Property.Gap<string | number>;
grid?: Property.Grid;
gridArea?: Property.GridArea;
gridColumn?: Property.GridColumn;
gridRow?: Property.GridRow;
gridTemplate?: Property.GridTemplate;
inset?: Property.Inset<string | number>;
insetBlock?: Property.InsetBlock<string | number>;
insetInline?: Property.InsetInline<string | number>;
lineClamp?: Property.LineClamp;
listStyle?: Property.ListStyle;
margin?: Property.Margin<string | number>;
marginBlock?: Property.MarginBlock<string | number>;
marginInline?: Property.MarginInline<string | number>;
mask?: Property.Mask<string | number>;
maskBorder?: Property.MaskBorder;
motion?: Property.Offset<string | number>;
offset?: Property.Offset<string | number>;
outline?: Property.Outline<string | number>;
overflow?: Property.Overflow;
overscrollBehavior?: Property.OverscrollBehavior;
padding?: Property.Padding<string | number>;
paddingBlock?: Property.PaddingBlock<string | number>;
paddingInline?: Property.PaddingInline<string | number>;
placeContent?: Property.PlaceContent;
placeItems?: Property.PlaceItems;
placeSelf?: Property.PlaceSelf;
scrollMargin?: Property.ScrollMargin<string | number>;
scrollMarginBlock?: Property.ScrollMarginBlock<string | number>;
scrollMarginInline?: Property.ScrollMarginInline<string | number>;
scrollPadding?: Property.ScrollPadding<string | number>;
scrollPaddingBlock?: Property.ScrollPaddingBlock<string | number>;
scrollPaddingInline?: Property.ScrollPaddingInline<string | number>;
scrollSnapMargin?: Property.ScrollMargin<string | number>;
scrollTimeline?: Property.ScrollTimeline;
textDecoration?: Property.TextDecoration<string | number>;
textEmphasis?: Property.TextEmphasis;
transition?: Property.Transition<string & {}>;
viewTimeline?: Property.ViewTimeline;
MozAnimationDelay?: Property.AnimationDelay<string & {}>;
MozAnimationDirection?: Property.AnimationDirection;
MozAnimationDuration?: Property.AnimationDuration<string & {}>;
MozAnimationFillMode?: Property.AnimationFillMode;
MozAnimationIterationCount?: Property.AnimationIterationCount;
MozAnimationName?: Property.AnimationName;
MozAnimationPlayState?: Property.AnimationPlayState;
MozAnimationTimingFunction?: Property.AnimationTimingFunction;
MozAppearance?: Property.MozAppearance;
MozBinding?: Property.MozBinding;
MozBorderBottomColors?: Property.MozBorderBottomColors;
MozBorderEndColor?: Property.BorderInlineEndColor;
MozBorderEndStyle?: Property.BorderInlineEndStyle;
MozBorderEndWidth?: Property.BorderInlineEndWidth<string | number>;
MozBorderLeftColors?: Property.MozBorderLeftColors;
MozBorderRightColors?: Property.MozBorderRightColors;
MozBorderStartColor?: Property.BorderInlineStartColor;
MozBorderStartStyle?: Property.BorderInlineStartStyle;
MozBorderTopColors?: Property.MozBorderTopColors;
MozBoxSizing?: Property.BoxSizing;
MozColumnCount?: Property.ColumnCount;
MozColumnFill?: Property.ColumnFill;
MozColumnRuleColor?: Property.ColumnRuleColor;
MozColumnRuleStyle?: Property.ColumnRuleStyle;
MozColumnRuleWidth?: Property.ColumnRuleWidth<string | number>;
MozColumnWidth?: Property.ColumnWidth<string | number>;
MozContextProperties?: Property.MozContextProperties;
MozFontFeatureSettings?: Property.FontFeatureSettings;
MozFontLanguageOverride?: Property.FontLanguageOverride;
MozHyphens?: Property.Hyphens;
MozImageRegion?: Property.MozImageRegion;
MozMarginEnd?: Property.MarginInlineEnd<string | number>;
MozMarginStart?: Property.MarginInlineStart<string | number>;
MozOrient?: Property.MozOrient;
MozOsxFontSmoothing?: Property.FontSmooth<string | number>;
MozOutlineRadiusBottomleft?: Property.MozOutlineRadiusBottomleft<string | number>;
MozOutlineRadiusBottomright?: Property.MozOutlineRadiusBottomright<string | number>;
MozOutlineRadiusTopleft?: Property.MozOutlineRadiusTopleft<string | number>;
MozOutlineRadiusTopright?: Property.MozOutlineRadiusTopright<string | number>;
MozPaddingEnd?: Property.PaddingInlineEnd<string | number>;
MozPaddingStart?: Property.PaddingInlineStart<string | number>;
MozStackSizing?: Property.MozStackSizing;
MozTabSize?: Property.TabSize<string | number>;
MozTextBlink?: Property.MozTextBlink;
MozTextSizeAdjust?: Property.TextSizeAdjust;
MozUserFocus?: Property.MozUserFocus;
MozUserModify?: Property.MozUserModify;
MozUserSelect?: Property.UserSelect;
MozWindowDragging?: Property.MozWindowDragging;
MozWindowShadow?: Property.MozWindowShadow;
msAccelerator?: Property.MsAccelerator;
msBlockProgression?: Property.MsBlockProgression;
msContentZoomChaining?: Property.MsContentZoomChaining;
msContentZoomLimitMax?: Property.MsContentZoomLimitMax;
msContentZoomLimitMin?: Property.MsContentZoomLimitMin;
msContentZoomSnapPoints?: Property.MsContentZoomSnapPoints;
msContentZoomSnapType?: Property.MsContentZoomSnapType;
msContentZooming?: Property.MsContentZooming;
msFilter?: Property.MsFilter;
msFlexDirection?: Property.FlexDirection;
msFlexPositive?: Property.FlexGrow;
msFlowFrom?: Property.MsFlowFrom;
msFlowInto?: Property.MsFlowInto;
msGridColumns?: Property.MsGridColumns<string | number>;
msGridRows?: Property.MsGridRows<string | number>;
msHighContrastAdjust?: Property.MsHighContrastAdjust;
msHyphenateLimitChars?: Property.MsHyphenateLimitChars;
msHyphenateLimitLines?: Property.MsHyphenateLimitLines;
msHyphenateLimitZone?: Property.MsHyphenateLimitZone<string | number>;
msHyphens?: Property.Hyphens;
msImeAlign?: Property.MsImeAlign;
msLineBreak?: Property.LineBreak;
msOrder?: Property.Order;
msOverflowStyle?: Property.MsOverflowStyle;
msOverflowX?: Property.OverflowX;
msOverflowY?: Property.OverflowY;
msScrollChaining?: Property.MsScrollChaining;
msScrollLimitXMax?: Property.MsScrollLimitXMax<string | number>;
msScrollLimitXMin?: Property.MsScrollLimitXMin<string | number>;
msScrollLimitYMax?: Property.MsScrollLimitYMax<string | number>;
msScrollLimitYMin?: Property.MsScrollLimitYMin<string | number>;
msScrollRails?: Property.MsScrollRails;
msScrollSnapPointsX?: Property.MsScrollSnapPointsX;
msScrollSnapPointsY?: Property.MsScrollSnapPointsY;
msScrollSnapType?: Property.MsScrollSnapType;
msScrollTranslation?: Property.MsScrollTranslation;
msScrollbar3dlightColor?: Property.MsScrollbar3dlightColor;
msScrollbarArrowColor?: Property.MsScrollbarArrowColor;
msScrollbarBaseColor?: Property.MsScrollbarBaseColor;
msScrollbarDarkshadowColor?: Property.MsScrollbarDarkshadowColor;
msScrollbarFaceColor?: Property.MsScrollbarFaceColor;
msScrollbarHighlightColor?: Property.MsScrollbarHighlightColor;
msScrollbarShadowColor?: Property.MsScrollbarShadowColor;
msScrollbarTrackColor?: Property.MsScrollbarTrackColor;
msTextAutospace?: Property.MsTextAutospace;
msTextCombineHorizontal?: Property.TextCombineUpright;
msTextOverflow?: Property.TextOverflow;
msTouchAction?: Property.TouchAction;
msTouchSelect?: Property.MsTouchSelect;
msTransform?: Property.Transform;
msTransformOrigin?: Property.TransformOrigin<string | number>;
msTransitionDelay?: Property.TransitionDelay<string & {}>;
msTransitionDuration?: Property.TransitionDuration<string & {}>;
msTransitionProperty?: Property.TransitionProperty;
msTransitionTimingFunction?: Property.TransitionTimingFunction;
msUserSelect?: Property.MsUserSelect;
msWordBreak?: Property.WordBreak;
msWrapFlow?: Property.MsWrapFlow;
msWrapMargin?: Property.MsWrapMargin<string | number>;
msWrapThrough?: Property.MsWrapThrough;
msWritingMode?: Property.WritingMode;
WebkitAlignContent?: Property.AlignContent;
WebkitAlignItems?: Property.AlignItems;
WebkitAlignSelf?: Property.AlignSelf;
WebkitAnimationDelay?: Property.AnimationDelay<string & {}>;
WebkitAnimationDirection?: Property.AnimationDirection;
WebkitAnimationDuration?: Property.AnimationDuration<string & {}>;
WebkitAnimationFillMode?: Property.AnimationFillMode;
WebkitAnimationIterationCount?: Property.AnimationIterationCount;
WebkitAnimationName?: Property.AnimationName;
WebkitAnimationPlayState?: Property.AnimationPlayState;
WebkitAnimationTimingFunction?: Property.AnimationTimingFunction;
WebkitAppearance?: Property.WebkitAppearance;
WebkitBackdropFilter?: Property.BackdropFilter;
WebkitBackfaceVisibility?: Property.BackfaceVisibility;
WebkitBackgroundClip?: Property.BackgroundClip;
WebkitBackgroundOrigin?: Property.BackgroundOrigin;
WebkitBackgroundSize?: Property.BackgroundSize<string | number>;
WebkitBorderBeforeColor?: Property.WebkitBorderBeforeColor;
WebkitBorderBeforeStyle?: Property.WebkitBorderBeforeStyle;
WebkitBorderBeforeWidth?: Property.WebkitBorderBeforeWidth<string | number>;
WebkitBorderBottomLeftRadius?: Property.BorderBottomLeftRadius<string | number>;
WebkitBorderBottomRightRadius?: Property.BorderBottomRightRadius<string | number>;
WebkitBorderImageSlice?: Property.BorderImageSlice;
WebkitBorderTopLeftRadius?: Property.BorderTopLeftRadius<string | number>;
WebkitBorderTopRightRadius?: Property.BorderTopRightRadius<string | number>;
WebkitBoxDecorationBreak?: Property.BoxDecorationBreak;
WebkitBoxReflect?: Property.WebkitBoxReflect<string | number>;
WebkitBoxShadow?: Property.BoxShadow;
WebkitBoxSizing?: Property.BoxSizing;
WebkitClipPath?: Property.ClipPath;
WebkitColumnCount?: Property.ColumnCount;
WebkitColumnFill?: Property.ColumnFill;
WebkitColumnRuleColor?: Property.ColumnRuleColor;
WebkitColumnRuleStyle?: Property.ColumnRuleStyle;
WebkitColumnRuleWidth?: Property.ColumnRuleWidth<string | number>;
WebkitColumnSpan?: Property.ColumnSpan;
WebkitColumnWidth?: Property.ColumnWidth<string | number>;
WebkitFilter?: Property.Filter;
WebkitFlexBasis?: Property.FlexBasis<string | number>;
WebkitFlexDirection?: Property.FlexDirection;
WebkitFlexGrow?: Property.FlexGrow;
WebkitFlexShrink?: Property.FlexShrink;
WebkitFlexWrap?: Property.FlexWrap;
WebkitFontFeatureSettings?: Property.FontFeatureSettings;
WebkitFontKerning?: Property.FontKerning;
WebkitFontSmoothing?: Property.FontSmooth<string | number>;
WebkitFontVariantLigatures?: Property.FontVariantLigatures;
WebkitHyphenateCharacter?: Property.HyphenateCharacter;
WebkitHyphens?: Property.Hyphens;
WebkitInitialLetter?: Property.InitialLetter;
WebkitJustifyContent?: Property.JustifyContent;
WebkitLineBreak?: Property.LineBreak;
WebkitLineClamp?: Property.WebkitLineClamp;
WebkitMarginEnd?: Property.MarginInlineEnd<string | number>;
WebkitMarginStart?: Property.MarginInlineStart<string | number>;
WebkitMaskAttachment?: Property.WebkitMaskAttachment;
WebkitMaskBoxImageOutset?: Property.MaskBorderOutset<string | number>;
WebkitMaskBoxImageRepeat?: Property.MaskBorderRepeat;
WebkitMaskBoxImageSlice?: Property.MaskBorderSlice;
WebkitMaskBoxImageSource?: Property.MaskBorderSource;
WebkitMaskBoxImageWidth?: Property.MaskBorderWidth<string | number>;
WebkitMaskClip?: Property.WebkitMaskClip;
WebkitMaskComposite?: Property.WebkitMaskComposite;
WebkitMaskImage?: Property.WebkitMaskImage;
WebkitMaskOrigin?: Property.WebkitMaskOrigin;
WebkitMaskPosition?: Property.WebkitMaskPosition<string | number>;
WebkitMaskPositionX?: Property.WebkitMaskPositionX<string | number>;
WebkitMaskPositionY?: Property.WebkitMaskPositionY<string | number>;
WebkitMaskRepeat?: Property.WebkitMaskRepeat;
WebkitMaskRepeatX?: Property.WebkitMaskRepeatX;
WebkitMaskRepeatY?: Property.WebkitMaskRepeatY;
WebkitMaskSize?: Property.WebkitMaskSize<string | number>;
WebkitMaxInlineSize?: Property.MaxInlineSize<string | number>;
WebkitOrder?: Property.Order;
WebkitOverflowScrolling?: Property.WebkitOverflowScrolling;
WebkitPaddingEnd?: Property.PaddingInlineEnd<string | number>;
WebkitPaddingStart?: Property.PaddingInlineStart<string | number>;
WebkitPerspective?: Property.Perspective<string | number>;
WebkitPerspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
WebkitPrintColorAdjust?: Property.PrintColorAdjust;
WebkitRubyPosition?: Property.RubyPosition;
WebkitScrollSnapType?: Property.ScrollSnapType;
WebkitShapeMargin?: Property.ShapeMargin<string | number>;
WebkitTapHighlightColor?: Property.WebkitTapHighlightColor;
WebkitTextCombine?: Property.TextCombineUpright;
WebkitTextDecorationColor?: Property.TextDecorationColor;
WebkitTextDecorationLine?: Property.TextDecorationLine;
WebkitTextDecorationSkip?: Property.TextDecorationSkip;
WebkitTextDecorationStyle?: Property.TextDecorationStyle;
WebkitTextEmphasisColor?: Property.TextEmphasisColor;
WebkitTextEmphasisPosition?: Property.TextEmphasisPosition;
WebkitTextEmphasisStyle?: Property.TextEmphasisStyle;
WebkitTextFillColor?: Property.WebkitTextFillColor;
WebkitTextOrientation?: Property.TextOrientation;
WebkitTextSizeAdjust?: Property.TextSizeAdjust;
WebkitTextStrokeColor?: Property.WebkitTextStrokeColor;
WebkitTextStrokeWidth?: Property.WebkitTextStrokeWidth<string | number>;
WebkitTextUnderlinePosition?: Property.TextUnderlinePosition;
WebkitTouchCallout?: Property.WebkitTouchCallout;
WebkitTransform?: Property.Transform;
WebkitTransformOrigin?: Property.TransformOrigin<string | number>;
WebkitTransformStyle?: Property.TransformStyle;
WebkitTransitionDelay?: Property.TransitionDelay<string & {}>;
WebkitTransitionDuration?: Property.TransitionDuration<string & {}>;
WebkitTransitionProperty?: Property.TransitionProperty;
WebkitTransitionTimingFunction?: Property.TransitionTimingFunction;
WebkitUserModify?: Property.WebkitUserModify;
WebkitUserSelect?: Property.UserSelect;
WebkitWritingMode?: Property.WritingMode;
MozAnimation?: Property.Animation<string & {}>;
MozBorderImage?: Property.BorderImage;
MozColumnRule?: Property.ColumnRule<string | number>;
MozColumns?: Property.Columns<string | number>;
MozOutlineRadius?: Property.MozOutlineRadius<string | number>;
msContentZoomLimit?: Property.MsContentZoomLimit;
msContentZoomSnap?: Property.MsContentZoomSnap;
msFlex?: Property.Flex<string | number>;
msScrollLimit?: Property.MsScrollLimit;
msScrollSnapX?: Property.MsScrollSnapX;
msScrollSnapY?: Property.MsScrollSnapY;
msTransition?: Property.Transition<string & {}>;
WebkitAnimation?: Property.Animation<string & {}>;
WebkitBorderBefore?: Property.WebkitBorderBefore<string | number>;
WebkitBorderImage?: Property.BorderImage;
WebkitBorderRadius?: Property.BorderRadius<string | number>;
WebkitColumnRule?: Property.ColumnRule<string | number>;
WebkitColumns?: Property.Columns<string | number>;
WebkitFlex?: Property.Flex<string | number>;
WebkitFlexFlow?: Property.FlexFlow;
WebkitMask?: Property.WebkitMask<string | number>;
WebkitMaskBoxImage?: Property.MaskBorder;
WebkitTextEmphasis?: Property.TextEmphasis;
WebkitTextStroke?: Property.WebkitTextStroke<string | number>;
WebkitTransition?: Property.Transition<string & {}>;
azimuth?: Property.Azimuth;
boxAlign?: Property.BoxAlign;
boxDirection?: Property.BoxDirection;
boxFlex?: Property.BoxFlex;
boxFlexGroup?: Property.BoxFlexGroup;
boxLines?: Property.BoxLines;
boxOrdinalGroup?: Property.BoxOrdinalGroup;
boxOrient?: Property.BoxOrient;
boxPack?: Property.BoxPack;
clip?: Property.Clip;
gridColumnGap?: Property.GridColumnGap<string | number>;
gridGap?: Property.GridGap<string | number>;
gridRowGap?: Property.GridRowGap<string | number>;
imeMode?: Property.ImeMode;
offsetBlock?: Property.InsetBlock<string | number>;
offsetBlockEnd?: Property.InsetBlockEnd<string | number>;
offsetBlockStart?: Property.InsetBlockStart<string | number>;
offsetInline?: Property.InsetInline<string | number>;
offsetInlineEnd?: Property.InsetInlineEnd<string | number>;
offsetInlineStart?: Property.InsetInlineStart<string | number>;
scrollSnapCoordinate?: Property.ScrollSnapCoordinate<string | number>;
scrollSnapDestination?: Property.ScrollSnapDestination<string | number>;
scrollSnapPointsX?: Property.ScrollSnapPointsX;
scrollSnapPointsY?: Property.ScrollSnapPointsY;
scrollSnapTypeX?: Property.ScrollSnapTypeX;
scrollSnapTypeY?: Property.ScrollSnapTypeY;
KhtmlBoxAlign?: Property.BoxAlign;
KhtmlBoxDirection?: Property.BoxDirection;
KhtmlBoxFlex?: Property.BoxFlex;
KhtmlBoxFlexGroup?: Property.BoxFlexGroup;
KhtmlBoxLines?: Property.BoxLines;
KhtmlBoxOrdinalGroup?: Property.BoxOrdinalGroup;
KhtmlBoxOrient?: Property.BoxOrient;
KhtmlBoxPack?: Property.BoxPack;
KhtmlLineBreak?: Property.LineBreak;
KhtmlOpacity?: Property.Opacity;
KhtmlUserSelect?: Property.UserSelect;
MozBackfaceVisibility?: Property.BackfaceVisibility;
MozBackgroundClip?: Property.BackgroundClip;
MozBackgroundInlinePolicy?: Property.BoxDecorationBreak;
MozBackgroundOrigin?: Property.BackgroundOrigin;
MozBackgroundSize?: Property.BackgroundSize<string | number>;
MozBorderRadius?: Property.BorderRadius<string | number>;
MozBorderRadiusBottomleft?: Property.BorderBottomLeftRadius<string | number>;
MozBorderRadiusBottomright?: Property.BorderBottomRightRadius<string | number>;
MozBorderRadiusTopleft?: Property.BorderTopLeftRadius<string | number>;
MozBorderRadiusTopright?: Property.BorderTopRightRadius<string | number>;
MozBoxAlign?: Property.BoxAlign;
MozBoxDirection?: Property.BoxDirection;
MozBoxFlex?: Property.BoxFlex;
MozBoxOrdinalGroup?: Property.BoxOrdinalGroup;
MozBoxOrient?: Property.BoxOrient;
MozBoxPack?: Property.BoxPack;
MozBoxShadow?: Property.BoxShadow;
MozFloatEdge?: Property.MozFloatEdge;
MozForceBrokenImageIcon?: Property.MozForceBrokenImageIcon;
MozOpacity?: Property.Opacity;
MozOutline?: Property.Outline<string | number>;
MozOutlineColor?: Property.OutlineColor;
MozOutlineStyle?: Property.OutlineStyle;
MozOutlineWidth?: Property.OutlineWidth<string | number>;
MozPerspective?: Property.Perspective<string | number>;
MozPerspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
MozTextAlignLast?: Property.TextAlignLast;
MozTextDecorationColor?: Property.TextDecorationColor;
MozTextDecorationLine?: Property.TextDecorationLine;
MozTextDecorationStyle?: Property.TextDecorationStyle;
MozTransform?: Property.Transform;
MozTransformOrigin?: Property.TransformOrigin<string | number>;
MozTransformStyle?: Property.TransformStyle;
MozTransition?: Property.Transition<string & {}>;
MozTransitionDelay?: Property.TransitionDelay<string & {}>;
MozTransitionDuration?: Property.TransitionDuration<string & {}>;
MozTransitionProperty?: Property.TransitionProperty;
MozTransitionTimingFunction?: Property.TransitionTimingFunction;
MozUserInput?: Property.MozUserInput;
msImeMode?: Property.ImeMode;
OAnimation?: Property.Animation<string & {}>;
OAnimationDelay?: Property.AnimationDelay<string & {}>;
OAnimationDirection?: Property.AnimationDirection;
OAnimationDuration?: Property.AnimationDuration<string & {}>;
OAnimationFillMode?: Property.AnimationFillMode;
OAnimationIterationCount?: Property.AnimationIterationCount;
OAnimationName?: Property.AnimationName;
OAnimationPlayState?: Property.AnimationPlayState;
OAnimationTimingFunction?: Property.AnimationTimingFunction;
OBackgroundSize?: Property.BackgroundSize<string | number>;
OBorderImage?: Property.BorderImage;
OObjectFit?: Property.ObjectFit;
OObjectPosition?: Property.ObjectPosition<string | number>;
OTabSize?: Property.TabSize<string | number>;
OTextOverflow?: Property.TextOverflow;
OTransform?: Property.Transform;
OTransformOrigin?: Property.TransformOrigin<string | number>;
OTransition?: Property.Transition<string & {}>;
OTransitionDelay?: Property.TransitionDelay<string & {}>;
OTransitionDuration?: Property.TransitionDuration<string & {}>;
OTransitionProperty?: Property.TransitionProperty;
OTransitionTimingFunction?: Property.TransitionTimingFunction;
WebkitBoxAlign?: Property.BoxAlign;
WebkitBoxDirection?: Property.BoxDirection;
WebkitBoxFlex?: Property.BoxFlex;
WebkitBoxFlexGroup?: Property.BoxFlexGroup;
WebkitBoxLines?: Property.BoxLines;
WebkitBoxOrdinalGroup?: Property.BoxOrdinalGroup;
WebkitBoxOrient?: Property.BoxOrient;
WebkitBoxPack?: Property.BoxPack;
alignmentBaseline?: Property.AlignmentBaseline;
baselineShift?: Property.BaselineShift<string | number>;
clipRule?: Property.ClipRule;
colorInterpolation?: Property.ColorInterpolation;
colorRendering?: Property.ColorRendering;
dominantBaseline?: Property.DominantBaseline;
fill?: Property.Fill;
fillOpacity?: Property.FillOpacity;
fillRule?: Property.FillRule;
floodColor?: Property.FloodColor;
floodOpacity?: Property.FloodOpacity;
glyphOrientationVertical?: Property.GlyphOrientationVertical;
lightingColor?: Property.LightingColor;
marker?: Property.Marker;
markerEnd?: Property.MarkerEnd;
markerMid?: Property.MarkerMid;
markerStart?: Property.MarkerStart;
shapeRendering?: Property.ShapeRendering;
stopColor?: Property.StopColor;
stopOpacity?: Property.StopOpacity;
stroke?: Property.Stroke;
strokeDasharray?: Property.StrokeDasharray<string | number>;
strokeDashoffset?: Property.StrokeDashoffset<string | number>;
strokeLinecap?: Property.StrokeLinecap;
strokeLinejoin?: Property.StrokeLinejoin;
strokeMiterlimit?: Property.StrokeMiterlimit;
strokeOpacity?: Property.StrokeOpacity;
strokeWidth?: Property.StrokeWidth<string | number>;
textAnchor?: Property.TextAnchor;
vectorEffect?: Property.VectorEffect;
"accent-color"?: Property.AccentColor;
"align-content"?: Property.AlignContent;
"align-items"?: Property.AlignItems;
"align-self"?: Property.AlignSelf;
"align-tracks"?: Property.AlignTracks;
"animation-composition"?: Property.AnimationComposition;
"animation-delay"?: Property.AnimationDelay<string & {}>;
"animation-direction"?: Property.AnimationDirection;
"animation-duration"?: Property.AnimationDuration<string & {}>;
"animation-fill-mode"?: Property.AnimationFillMode;
"animation-iteration-count"?: Property.AnimationIterationCount;
"animation-name"?: Property.AnimationName;
"animation-play-state"?: Property.AnimationPlayState;
"animation-range-end"?: Property.AnimationRangeEnd<string | number>;
"animation-range-start"?: Property.AnimationRangeStart<string | number>;
"animation-timeline"?: Property.AnimationTimeline;
"animation-timing-function"?: Property.AnimationTimingFunction;
"aspect-ratio"?: Property.AspectRatio;
"backdrop-filter"?: Property.BackdropFilter;
"backface-visibility"?: Property.BackfaceVisibility;
"background-attachment"?: Property.BackgroundAttachment;
"background-blend-mode"?: Property.BackgroundBlendMode;
"background-clip"?: Property.BackgroundClip;
"background-color"?: Property.BackgroundColor;
"background-image"?: Property.BackgroundImage;
"background-origin"?: Property.BackgroundOrigin;
"background-position-x"?: Property.BackgroundPositionX<string | number>;
"background-position-y"?: Property.BackgroundPositionY<string | number>;
"background-repeat"?: Property.BackgroundRepeat;
"background-size"?: Property.BackgroundSize<string | number>;
"block-overflow"?: Property.BlockOverflow;
"block-size"?: Property.BlockSize<string | number>;
"border-block-color"?: Property.BorderBlockColor;
"border-block-end-color"?: Property.BorderBlockEndColor;
"border-block-end-style"?: Property.BorderBlockEndStyle;
"border-block-end-width"?: Property.BorderBlockEndWidth<string | number>;
"border-block-start-color"?: Property.BorderBlockStartColor;
"border-block-start-style"?: Property.BorderBlockStartStyle;
"border-block-start-width"?: Property.BorderBlockStartWidth<string | number>;
"border-block-style"?: Property.BorderBlockStyle;
"border-block-width"?: Property.BorderBlockWidth<string | number>;
"border-bottom-color"?: Property.BorderBottomColor;
"border-bottom-left-radius"?: Property.BorderBottomLeftRadius<string | number>;
"border-bottom-right-radius"?: Property.BorderBottomRightRadius<string | number>;
"border-bottom-style"?: Property.BorderBottomStyle;
"border-bottom-width"?: Property.BorderBottomWidth<string | number>;
"border-collapse"?: Property.BorderCollapse;
"border-end-end-radius"?: Property.BorderEndEndRadius<string | number>;
"border-end-start-radius"?: Property.BorderEndStartRadius<string | number>;
"border-image-outset"?: Property.BorderImageOutset<string | number>;
"border-image-repeat"?: Property.BorderImageRepeat;
"border-image-slice"?: Property.BorderImageSlice;
"border-image-source"?: Property.BorderImageSource;
"border-image-width"?: Property.BorderImageWidth<string | number>;
"border-inline-color"?: Property.BorderInlineColor;
"border-inline-end-color"?: Property.BorderInlineEndColor;
"border-inline-end-style"?: Property.BorderInlineEndStyle;
"border-inline-end-width"?: Property.BorderInlineEndWidth<string | number>;
"border-inline-start-color"?: Property.BorderInlineStartColor;
"border-inline-start-style"?: Property.BorderInlineStartStyle;
"border-inline-start-width"?: Property.BorderInlineStartWidth<string | number>;
"border-inline-style"?: Property.BorderInlineStyle;
"border-inline-width"?: Property.BorderInlineWidth<string | number>;
"border-left-color"?: Property.BorderLeftColor;
"border-left-style"?: Property.BorderLeftStyle;
"border-left-width"?: Property.BorderLeftWidth<string | number>;
"border-right-color"?: Property.BorderRightColor;
"border-right-style"?: Property.BorderRightStyle;
"border-right-width"?: Property.BorderRightWidth<string | number>;
"border-spacing"?: Property.BorderSpacing<string | number>;
"border-start-end-radius"?: Property.BorderStartEndRadius<string | number>;
"border-start-start-radius"?: Property.BorderStartStartRadius<string | number>;
"border-top-color"?: Property.BorderTopColor;
"border-top-left-radius"?: Property.BorderTopLeftRadius<string | number>;
"border-top-right-radius"?: Property.BorderTopRightRadius<string | number>;
"border-top-style"?: Property.BorderTopStyle;
"border-top-width"?: Property.BorderTopWidth<string | number>;
"box-decoration-break"?: Property.BoxDecorationBreak;
"box-shadow"?: Property.BoxShadow;
"box-sizing"?: Property.BoxSizing;
"break-after"?: Property.BreakAfter;
"break-before"?: Property.BreakBefore;
"break-inside"?: Property.BreakInside;
"caption-side"?: Property.CaptionSide;
"caret-color"?: Property.CaretColor;
"caret-shape"?: Property.CaretShape;
"clip-path"?: Property.ClipPath;
"color-adjust"?: Property.PrintColorAdjust;
"color-scheme"?: Property.ColorScheme;
"column-count"?: Property.ColumnCount;
"column-fill"?: Property.ColumnFill;
"column-gap"?: Property.ColumnGap<string | number>;
"column-rule-color"?: Property.ColumnRuleColor;
"column-rule-style"?: Property.ColumnRuleStyle;
"column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"column-span"?: Property.ColumnSpan;
"column-width"?: Property.ColumnWidth<string | number>;
"contain-intrinsic-block-size"?: Property.ContainIntrinsicBlockSize<string | number>;
"contain-intrinsic-height"?: Property.ContainIntrinsicHeight<string | number>;
"contain-intrinsic-inline-size"?: Property.ContainIntrinsicInlineSize<string | number>;
"contain-intrinsic-width"?: Property.ContainIntrinsicWidth<string | number>;
"container-name"?: Property.ContainerName;
"container-type"?: Property.ContainerType;
"content-visibility"?: Property.ContentVisibility;
"counter-increment"?: Property.CounterIncrement;
"counter-reset"?: Property.CounterReset;
"counter-set"?: Property.CounterSet;
"empty-cells"?: Property.EmptyCells;
"flex-basis"?: Property.FlexBasis<string | number>;
"flex-direction"?: Property.FlexDirection;
"flex-grow"?: Property.FlexGrow;
"flex-shrink"?: Property.FlexShrink;
"flex-wrap"?: Property.FlexWrap;
"font-family"?: Property.FontFamily;
"font-feature-settings"?: Property.FontFeatureSettings;
"font-kerning"?: Property.FontKerning;
"font-language-override"?: Property.FontLanguageOverride;
"font-optical-sizing"?: Property.FontOpticalSizing;
"font-palette"?: Property.FontPalette;
"font-size"?: Property.FontSize<string | number>;
"font-size-adjust"?: Property.FontSizeAdjust;
"font-smooth"?: Property.FontSmooth<string | number>;
"font-stretch"?: Property.FontStretch;
"font-style"?: Property.FontStyle;
"font-synthesis"?: Property.FontSynthesis;
"font-synthesis-position"?: Property.FontSynthesisPosition;
"font-synthesis-small-caps"?: Property.FontSynthesisSmallCaps;
"font-synthesis-style"?: Property.FontSynthesisStyle;
"font-synthesis-weight"?: Property.FontSynthesisWeight;
"font-variant"?: Property.FontVariant;
"font-variant-alternates"?: Property.FontVariantAlternates;
"font-variant-caps"?: Property.FontVariantCaps;
"font-variant-east-asian"?: Property.FontVariantEastAsian;
"font-variant-emoji"?: Property.FontVariantEmoji;
"font-variant-ligatures"?: Property.FontVariantLigatures;
"font-variant-numeric"?: Property.FontVariantNumeric;
"font-variant-position"?: Property.FontVariantPosition;
"font-variation-settings"?: Property.FontVariationSettings;
"font-weight"?: Property.FontWeight;
"forced-color-adjust"?: Property.ForcedColorAdjust;
"grid-auto-columns"?: Property.GridAutoColumns<string | number>;
"grid-auto-flow"?: Property.GridAutoFlow;
"grid-auto-rows"?: Property.GridAutoRows<string | number>;
"grid-column-end"?: Property.GridColumnEnd;
"grid-column-start"?: Property.GridColumnStart;
"grid-row-end"?: Property.GridRowEnd;
"grid-row-start"?: Property.GridRowStart;
"grid-template-areas"?: Property.GridTemplateAreas;
"grid-template-columns"?: Property.GridTemplateColumns<string | number>;
"grid-template-rows"?: Property.GridTemplateRows<string | number>;
"hanging-punctuation"?: Property.HangingPunctuation;
"hyphenate-character"?: Property.HyphenateCharacter;
"hyphenate-limit-chars"?: Property.HyphenateLimitChars;
"image-orientation"?: Property.ImageOrientation;
"image-rendering"?: Property.ImageRendering;
"image-resolution"?: Property.ImageResolution;
"initial-letter"?: Property.InitialLetter;
"inline-size"?: Property.InlineSize<string | number>;
"input-security"?: Property.InputSecurity;
"inset-block-end"?: Property.InsetBlockEnd<string | number>;
"inset-block-start"?: Property.InsetBlockStart<string | number>;
"inset-inline-end"?: Property.InsetInlineEnd<string | number>;
"inset-inline-start"?: Property.InsetInlineStart<string | number>;
"justify-content"?: Property.JustifyContent;
"justify-items"?: Property.JustifyItems;
"justify-self"?: Property.JustifySelf;
"justify-tracks"?: Property.JustifyTracks;
"letter-spacing"?: Property.LetterSpacing<string | number>;
"line-break"?: Property.LineBreak;
"line-height"?: Property.LineHeight<string | number>;
"line-height-step"?: Property.LineHeightStep<string | number>;
"list-style-image"?: Property.ListStyleImage;
"list-style-position"?: Property.ListStylePosition;
"list-style-type"?: Property.ListStyleType;
"margin-block-end"?: Property.MarginBlockEnd<string | number>;
"margin-block-start"?: Property.MarginBlockStart<string | number>;
"margin-bottom"?: Property.MarginBottom<string | number>;
"margin-inline-end"?: Property.MarginInlineEnd<string | number>;
"margin-inline-start"?: Property.MarginInlineStart<string | number>;
"margin-left"?: Property.MarginLeft<string | number>;
"margin-right"?: Property.MarginRight<string | number>;
"margin-top"?: Property.MarginTop<string | number>;
"margin-trim"?: Property.MarginTrim;
"mask-border-mode"?: Property.MaskBorderMode;
"mask-border-outset"?: Property.MaskBorderOutset<string | number>;
"mask-border-repeat"?: Property.MaskBorderRepeat;
"mask-border-slice"?: Property.MaskBorderSlice;
"mask-border-source"?: Property.MaskBorderSource;
"mask-border-width"?: Property.MaskBorderWidth<string | number>;
"mask-clip"?: Property.MaskClip;
"mask-composite"?: Property.MaskComposite;
"mask-image"?: Property.MaskImage;
"mask-mode"?: Property.MaskMode;
"mask-origin"?: Property.MaskOrigin;
"mask-position"?: Property.MaskPosition<string | number>;
"mask-repeat"?: Property.MaskRepeat;
"mask-size"?: Property.MaskSize<string | number>;
"mask-type"?: Property.MaskType;
"masonry-auto-flow"?: Property.MasonryAutoFlow;
"math-depth"?: Property.MathDepth;
"math-shift"?: Property.MathShift;
"math-style"?: Property.MathStyle;
"max-block-size"?: Property.MaxBlockSize<string | number>;
"max-height"?: Property.MaxHeight<string | number>;
"max-inline-size"?: Property.MaxInlineSize<string | number>;
"max-lines"?: Property.MaxLines;
"max-width"?: Property.MaxWidth<string | number>;
"min-block-size"?: Property.MinBlockSize<string | number>;
"min-height"?: Property.MinHeight<string | number>;
"min-inline-size"?: Property.MinInlineSize<string | number>;
"min-width"?: Property.MinWidth<string | number>;
"mix-blend-mode"?: Property.MixBlendMode;
"motion-distance"?: Property.OffsetDistance<string | number>;
"motion-path"?: Property.OffsetPath;
"motion-rotation"?: Property.OffsetRotate;
"object-fit"?: Property.ObjectFit;
"object-position"?: Property.ObjectPosition<string | number>;
"offset-anchor"?: Property.OffsetAnchor<string | number>;
"offset-distance"?: Property.OffsetDistance<string | number>;
"offset-path"?: Property.OffsetPath;
"offset-position"?: Property.OffsetPosition<string | number>;
"offset-rotate"?: Property.OffsetRotate;
"offset-rotation"?: Property.OffsetRotate;
"outline-color"?: Property.OutlineColor;
"outline-offset"?: Property.OutlineOffset<string | number>;
"outline-style"?: Property.OutlineStyle;
"outline-width"?: Property.OutlineWidth<string | number>;
"overflow-anchor"?: Property.OverflowAnchor;
"overflow-block"?: Property.OverflowBlock;
"overflow-clip-box"?: Property.OverflowClipBox;
"overflow-clip-margin"?: Property.OverflowClipMargin<string | number>;
"overflow-inline"?: Property.OverflowInline;
"overflow-wrap"?: Property.OverflowWrap;
"overflow-x"?: Property.OverflowX;
"overflow-y"?: Property.OverflowY;
"overscroll-behavior-block"?: Property.OverscrollBehaviorBlock;
"overscroll-behavior-inline"?: Property.OverscrollBehaviorInline;
"overscroll-behavior-x"?: Property.OverscrollBehaviorX;
"overscroll-behavior-y"?: Property.OverscrollBehaviorY;
"padding-block-end"?: Property.PaddingBlockEnd<string | number>;
"padding-block-start"?: Property.PaddingBlockStart<string | number>;
"padding-bottom"?: Property.PaddingBottom<string | number>;
"padding-inline-end"?: Property.PaddingInlineEnd<string | number>;
"padding-inline-start"?: Property.PaddingInlineStart<string | number>;
"padding-left"?: Property.PaddingLeft<string | number>;
"padding-right"?: Property.PaddingRight<string | number>;
"padding-top"?: Property.PaddingTop<string | number>;
"page-break-after"?: Property.PageBreakAfter;
"page-break-before"?: Property.PageBreakBefore;
"page-break-inside"?: Property.PageBreakInside;
"paint-order"?: Property.PaintOrder;
"perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"pointer-events"?: Property.PointerEvents;
"print-color-adjust"?: Property.PrintColorAdjust;
"row-gap"?: Property.RowGap<string | number>;
"ruby-align"?: Property.RubyAlign;
"ruby-merge"?: Property.RubyMerge;
"ruby-position"?: Property.RubyPosition;
"scroll-behavior"?: Property.ScrollBehavior;
"scroll-margin-block-end"?: Property.ScrollMarginBlockEnd<string | number>;
"scroll-margin-block-start"?: Property.ScrollMarginBlockStart<string | number>;
"scroll-margin-bottom"?: Property.ScrollMarginBottom<string | number>;
"scroll-margin-inline-end"?: Property.ScrollMarginInlineEnd<string | number>;
"scroll-margin-inline-start"?: Property.ScrollMarginInlineStart<string | number>;
"scroll-margin-left"?: Property.ScrollMarginLeft<string | number>;
"scroll-margin-right"?: Property.ScrollMarginRight<string | number>;
"scroll-margin-top"?: Property.ScrollMarginTop<string | number>;
"scroll-padding-block-end"?: Property.ScrollPaddingBlockEnd<string | number>;
"scroll-padding-block-start"?: Property.ScrollPaddingBlockStart<string | number>;
"scroll-padding-bottom"?: Property.ScrollPaddingBottom<string | number>;
"scroll-padding-inline-end"?: Property.ScrollPaddingInlineEnd<string | number>;
"scroll-padding-inline-start"?: Property.ScrollPaddingInlineStart<string | number>;
"scroll-padding-left"?: Property.ScrollPaddingLeft<string | number>;
"scroll-padding-right"?: Property.ScrollPaddingRight<string | number>;
"scroll-padding-top"?: Property.ScrollPaddingTop<string | number>;
"scroll-snap-align"?: Property.ScrollSnapAlign;
"scroll-snap-margin-bottom"?: Property.ScrollMarginBottom<string | number>;
"scroll-snap-margin-left"?: Property.ScrollMarginLeft<string | number>;
"scroll-snap-margin-right"?: Property.ScrollMarginRight<string | number>;
"scroll-snap-margin-top"?: Property.ScrollMarginTop<string | number>;
"scroll-snap-stop"?: Property.ScrollSnapStop;
"scroll-snap-type"?: Property.ScrollSnapType;
"scroll-timeline-axis"?: Property.ScrollTimelineAxis;
"scroll-timeline-name"?: Property.ScrollTimelineName;
"scrollbar-color"?: Property.ScrollbarColor;
"scrollbar-gutter"?: Property.ScrollbarGutter;
"scrollbar-width"?: Property.ScrollbarWidth;
"shape-image-threshold"?: Property.ShapeImageThreshold;
"shape-margin"?: Property.ShapeMargin<string | number>;
"shape-outside"?: Property.ShapeOutside;
"tab-size"?: Property.TabSize<string | number>;
"table-layout"?: Property.TableLayout;
"text-align"?: Property.TextAlign;
"text-align-last"?: Property.TextAlignLast;
"text-combine-upright"?: Property.TextCombineUpright;
"text-decoration-color"?: Property.TextDecorationColor;
"text-decoration-line"?: Property.TextDecorationLine;
"text-decoration-skip"?: Property.TextDecorationSkip;
"text-decoration-skip-ink"?: Property.TextDecorationSkipInk;
"text-decoration-style"?: Property.TextDecorationStyle;
"text-decoration-thickness"?: Property.TextDecorationThickness<string | number>;
"text-emphasis-color"?: Property.TextEmphasisColor;
"text-emphasis-position"?: Property.TextEmphasisPosition;
"text-emphasis-style"?: Property.TextEmphasisStyle;
"text-indent"?: Property.TextIndent<string | number>;
"text-justify"?: Property.TextJustify;
"text-orientation"?: Property.TextOrientation;
"text-overflow"?: Property.TextOverflow;
"text-rendering"?: Property.TextRendering;
"text-shadow"?: Property.TextShadow;
"text-size-adjust"?: Property.TextSizeAdjust;
"text-transform"?: Property.TextTransform;
"text-underline-offset"?: Property.TextUnderlineOffset<string | number>;
"text-underline-position"?: Property.TextUnderlinePosition;
"text-wrap"?: Property.TextWrap;
"timeline-scope"?: Property.TimelineScope;
"touch-action"?: Property.TouchAction;
"transform-box"?: Property.TransformBox;
"transform-origin"?: Property.TransformOrigin<string | number>;
"transform-style"?: Property.TransformStyle;
"transition-behavior"?: Property.TransitionBehavior;
"transition-delay"?: Property.TransitionDelay<string & {}>;
"transition-duration"?: Property.TransitionDuration<string & {}>;
"transition-property"?: Property.TransitionProperty;
"transition-timing-function"?: Property.TransitionTimingFunction;
"unicode-bidi"?: Property.UnicodeBidi;
"user-select"?: Property.UserSelect;
"vertical-align"?: Property.VerticalAlign<string | number>;
"view-timeline-axis"?: Property.ViewTimelineAxis;
"view-timeline-inset"?: Property.ViewTimelineInset<string | number>;
"view-timeline-name"?: Property.ViewTimelineName;
"view-transition-name"?: Property.ViewTransitionName;
"white-space"?: Property.WhiteSpace;
"white-space-collapse"?: Property.WhiteSpaceCollapse;
"white-space-trim"?: Property.WhiteSpaceTrim;
"will-change"?: Property.WillChange;
"word-break"?: Property.WordBreak;
"word-spacing"?: Property.WordSpacing<string | number>;
"word-wrap"?: Property.WordWrap;
"writing-mode"?: Property.WritingMode;
"z-index"?: Property.ZIndex;
"animation-range"?: Property.AnimationRange<string | number>;
"background-position"?: Property.BackgroundPosition<string | number>;
"border-block"?: Property.BorderBlock<string | number>;
"border-block-end"?: Property.BorderBlockEnd<string | number>;
"border-block-start"?: Property.BorderBlockStart<string | number>;
"border-bottom"?: Property.BorderBottom<string | number>;
"border-color"?: Property.BorderColor;
"border-image"?: Property.BorderImage;
"border-inline"?: Property.BorderInline<string | number>;
"border-inline-end"?: Property.BorderInlineEnd<string | number>;
"border-inline-start"?: Property.BorderInlineStart<string | number>;
"border-left"?: Property.BorderLeft<string | number>;
"border-radius"?: Property.BorderRadius<string | number>;
"border-right"?: Property.BorderRight<string | number>;
"border-style"?: Property.BorderStyle;
"border-top"?: Property.BorderTop<string | number>;
"border-width"?: Property.BorderWidth<string | number>;
"column-rule"?: Property.ColumnRule<string | number>;
"contain-intrinsic-size"?: Property.ContainIntrinsicSize<string | number>;
"flex-flow"?: Property.FlexFlow;
"grid-area"?: Property.GridArea;
"grid-column"?: Property.GridColumn;
"grid-row"?: Property.GridRow;
"grid-template"?: Property.GridTemplate;
"inset-block"?: Property.InsetBlock<string | number>;
"inset-inline"?: Property.InsetInline<string | number>;
"line-clamp"?: Property.LineClamp;
"list-style"?: Property.ListStyle;
"margin-block"?: Property.MarginBlock<string | number>;
"margin-inline"?: Property.MarginInline<string | number>;
"mask-border"?: Property.MaskBorder;
"overscroll-behavior"?: Property.OverscrollBehavior;
"padding-block"?: Property.PaddingBlock<string | number>;
"padding-inline"?: Property.PaddingInline<string | number>;
"place-content"?: Property.PlaceContent;
"place-items"?: Property.PlaceItems;
"place-self"?: Property.PlaceSelf;
"scroll-margin"?: Property.ScrollMargin<string | number>;
"scroll-margin-block"?: Property.ScrollMarginBlock<string | number>;
"scroll-margin-inline"?: Property.ScrollMarginInline<string | number>;
"scroll-padding"?: Property.ScrollPadding<string | number>;
"scroll-padding-block"?: Property.ScrollPaddingBlock<string | number>;
"scroll-padding-inline"?: Property.ScrollPaddingInline<string | number>;
"scroll-snap-margin"?: Property.ScrollMargin<string | number>;
"scroll-timeline"?: Property.ScrollTimeline;
"text-decoration"?: Property.TextDecoration<string | number>;
"text-emphasis"?: Property.TextEmphasis;
"view-timeline"?: Property.ViewTimeline;
"-moz-animation-delay"?: Property.AnimationDelay<string & {}>;
"-moz-animation-direction"?: Property.AnimationDirection;
"-moz-animation-duration"?: Property.AnimationDuration<string & {}>;
"-moz-animation-fill-mode"?: Property.AnimationFillMode;
"-moz-animation-iteration-count"?: Property.AnimationIterationCount;
"-moz-animation-name"?: Property.AnimationName;
"-moz-animation-play-state"?: Property.AnimationPlayState;
"-moz-animation-timing-function"?: Property.AnimationTimingFunction;
"-moz-appearance"?: Property.MozAppearance;
"-moz-binding"?: Property.MozBinding;
"-moz-border-bottom-colors"?: Property.MozBorderBottomColors;
"-moz-border-end-color"?: Property.BorderInlineEndColor;
"-moz-border-end-style"?: Property.BorderInlineEndStyle;
"-moz-border-end-width"?: Property.BorderInlineEndWidth<string | number>;
"-moz-border-left-colors"?: Property.MozBorderLeftColors;
"-moz-border-right-colors"?: Property.MozBorderRightColors;
"-moz-border-start-color"?: Property.BorderInlineStartColor;
"-moz-border-start-style"?: Property.BorderInlineStartStyle;
"-moz-border-top-colors"?: Property.MozBorderTopColors;
"-moz-box-sizing"?: Property.BoxSizing;
"-moz-column-count"?: Property.ColumnCount;
"-moz-column-fill"?: Property.ColumnFill;
"-moz-column-rule-color"?: Property.ColumnRuleColor;
"-moz-column-rule-style"?: Property.ColumnRuleStyle;
"-moz-column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"-moz-column-width"?: Property.ColumnWidth<string | number>;
"-moz-context-properties"?: Property.MozContextProperties;
"-moz-font-feature-settings"?: Property.FontFeatureSettings;
"-moz-font-language-override"?: Property.FontLanguageOverride;
"-moz-hyphens"?: Property.Hyphens;
"-moz-image-region"?: Property.MozImageRegion;
"-moz-margin-end"?: Property.MarginInlineEnd<string | number>;
"-moz-margin-start"?: Property.MarginInlineStart<string | number>;
"-moz-orient"?: Property.MozOrient;
"-moz-osx-font-smoothing"?: Property.FontSmooth<string | number>;
"-moz-outline-radius-bottomleft"?: Property.MozOutlineRadiusBottomleft<string | number>;
"-moz-outline-radius-bottomright"?: Property.MozOutlineRadiusBottomright<string | number>;
"-moz-outline-radius-topleft"?: Property.MozOutlineRadiusTopleft<string | number>;
"-moz-outline-radius-topright"?: Property.MozOutlineRadiusTopright<string | number>;
"-moz-padding-end"?: Property.PaddingInlineEnd<string | number>;
"-moz-padding-start"?: Property.PaddingInlineStart<string | number>;
"-moz-stack-sizing"?: Property.MozStackSizing;
"-moz-tab-size"?: Property.TabSize<string | number>;
"-moz-text-blink"?: Property.MozTextBlink;
"-moz-text-size-adjust"?: Property.TextSizeAdjust;
"-moz-user-focus"?: Property.MozUserFocus;
"-moz-user-modify"?: Property.MozUserModify;
"-moz-user-select"?: Property.UserSelect;
"-moz-window-dragging"?: Property.MozWindowDragging;
"-moz-window-shadow"?: Property.MozWindowShadow;
"-ms-accelerator"?: Property.MsAccelerator;
"-ms-block-progression"?: Property.MsBlockProgression;
"-ms-content-zoom-chaining"?: Property.MsContentZoomChaining;
"-ms-content-zoom-limit-max"?: Property.MsContentZoomLimitMax;
"-ms-content-zoom-limit-min"?: Property.MsContentZoomLimitMin;
"-ms-content-zoom-snap-points"?: Property.MsContentZoomSnapPoints;
"-ms-content-zoom-snap-type"?: Property.MsContentZoomSnapType;
"-ms-content-zooming"?: Property.MsContentZooming;
"-ms-filter"?: Property.MsFilter;
"-ms-flex-direction"?: Property.FlexDirection;
"-ms-flex-positive"?: Property.FlexGrow;
"-ms-flow-from"?: Property.MsFlowFrom;
"-ms-flow-into"?: Property.MsFlowInto;
"-ms-grid-columns"?: Property.MsGridColumns<string | number>;
"-ms-grid-rows"?: Property.MsGridRows<string | number>;
"-ms-high-contrast-adjust"?: Property.MsHighContrastAdjust;
"-ms-hyphenate-limit-chars"?: Property.MsHyphenateLimitChars;
"-ms-hyphenate-limit-lines"?: Property.MsHyphenateLimitLines;
"-ms-hyphenate-limit-zone"?: Property.MsHyphenateLimitZone<string | number>;
"-ms-hyphens"?: Property.Hyphens;
"-ms-ime-align"?: Property.MsImeAlign;
"-ms-line-break"?: Property.LineBreak;
"-ms-order"?: Property.Order;
"-ms-overflow-style"?: Property.MsOverflowStyle;
"-ms-overflow-x"?: Property.OverflowX;
"-ms-overflow-y"?: Property.OverflowY;
"-ms-scroll-chaining"?: Property.MsScrollChaining;
"-ms-scroll-limit-x-max"?: Property.MsScrollLimitXMax<string | number>;
"-ms-scroll-limit-x-min"?: Property.MsScrollLimitXMin<string | number>;
"-ms-scroll-limit-y-max"?: Property.MsScrollLimitYMax<string | number>;
"-ms-scroll-limit-y-min"?: Property.MsScrollLimitYMin<string | number>;
"-ms-scroll-rails"?: Property.MsScrollRails;
"-ms-scroll-snap-points-x"?: Property.MsScrollSnapPointsX;
"-ms-scroll-snap-points-y"?: Property.MsScrollSnapPointsY;
"-ms-scroll-snap-type"?: Property.MsScrollSnapType;
"-ms-scroll-translation"?: Property.MsScrollTranslation;
"-ms-scrollbar-3dlight-color"?: Property.MsScrollbar3dlightColor;
"-ms-scrollbar-arrow-color"?: Property.MsScrollbarArrowColor;
"-ms-scrollbar-base-color"?: Property.MsScrollbarBaseColor;
"-ms-scrollbar-darkshadow-color"?: Property.MsScrollbarDarkshadowColor;
"-ms-scrollbar-face-color"?: Property.MsScrollbarFaceColor;
"-ms-scrollbar-highlight-color"?: Property.MsScrollbarHighlightColor;
"-ms-scrollbar-shadow-color"?: Property.MsScrollbarShadowColor;
"-ms-scrollbar-track-color"?: Property.MsScrollbarTrackColor;
"-ms-text-autospace"?: Property.MsTextAutospace;
"-ms-text-combine-horizontal"?: Property.TextCombineUpright;
"-ms-text-overflow"?: Property.TextOverflow;
"-ms-touch-action"?: Property.TouchAction;
"-ms-touch-select"?: Property.MsTouchSelect;
"-ms-transform"?: Property.Transform;
"-ms-transform-origin"?: Property.TransformOrigin<string | number>;
"-ms-transition-delay"?: Property.TransitionDelay<string & {}>;
"-ms-transition-duration"?: Property.TransitionDuration<string & {}>;
"-ms-transition-property"?: Property.TransitionProperty;
"-ms-transition-timing-function"?: Property.TransitionTimingFunction;
"-ms-user-select"?: Property.MsUserSelect;
"-ms-word-break"?: Property.WordBreak;
"-ms-wrap-flow"?: Property.MsWrapFlow;
"-ms-wrap-margin"?: Property.MsWrapMargin<string | number>;
"-ms-wrap-through"?: Property.MsWrapThrough;
"-ms-writing-mode"?: Property.WritingMode;
"-webkit-align-content"?: Property.AlignContent;
"-webkit-align-items"?: Property.AlignItems;
"-webkit-align-self"?: Property.AlignSelf;
"-webkit-animation-delay"?: Property.AnimationDelay<string & {}>;
"-webkit-animation-direction"?: Property.AnimationDirection;
"-webkit-animation-duration"?: Property.AnimationDuration<string & {}>;
"-webkit-animation-fill-mode"?: Property.AnimationFillMode;
"-webkit-animation-iteration-count"?: Property.AnimationIterationCount;
"-webkit-animation-name"?: Property.AnimationName;
"-webkit-animation-play-state"?: Property.AnimationPlayState;
"-webkit-animation-timing-function"?: Property.AnimationTimingFunction;
"-webkit-appearance"?: Property.WebkitAppearance;
"-webkit-backdrop-filter"?: Property.BackdropFilter;
"-webkit-backface-visibility"?: Property.BackfaceVisibility;
"-webkit-background-clip"?: Property.BackgroundClip;
"-webkit-background-origin"?: Property.BackgroundOrigin;
"-webkit-background-size"?: Property.BackgroundSize<string | number>;
"-webkit-border-before-color"?: Property.WebkitBorderBeforeColor;
"-webkit-border-before-style"?: Property.WebkitBorderBeforeStyle;
"-webkit-border-before-width"?: Property.WebkitBorderBeforeWidth<string | number>;
"-webkit-border-bottom-left-radius"?: Property.BorderBottomLeftRadius<string | number>;
"-webkit-border-bottom-right-radius"?: Property.BorderBottomRightRadius<string | number>;
"-webkit-border-image-slice"?: Property.BorderImageSlice;
"-webkit-border-top-left-radius"?: Property.BorderTopLeftRadius<string | number>;
"-webkit-border-top-right-radius"?: Property.BorderTopRightRadius<string | number>;
"-webkit-box-decoration-break"?: Property.BoxDecorationBreak;
"-webkit-box-reflect"?: Property.WebkitBoxReflect<string | number>;
"-webkit-box-shadow"?: Property.BoxShadow;
"-webkit-box-sizing"?: Property.BoxSizing;
"-webkit-clip-path"?: Property.ClipPath;
"-webkit-column-count"?: Property.ColumnCount;
"-webkit-column-fill"?: Property.ColumnFill;
"-webkit-column-rule-color"?: Property.ColumnRuleColor;
"-webkit-column-rule-style"?: Property.ColumnRuleStyle;
"-webkit-column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"-webkit-column-span"?: Property.ColumnSpan;
"-webkit-column-width"?: Property.ColumnWidth<string | number>;
"-webkit-filter"?: Property.Filter;
"-webkit-flex-basis"?: Property.FlexBasis<string | number>;
"-webkit-flex-direction"?: Property.FlexDirection;
"-webkit-flex-grow"?: Property.FlexGrow;
"-webkit-flex-shrink"?: Property.FlexShrink;
"-webkit-flex-wrap"?: Property.FlexWrap;
"-webkit-font-feature-settings"?: Property.FontFeatureSettings;
"-webkit-font-kerning"?: Property.FontKerning;
"-webkit-font-smoothing"?: Property.FontSmooth<string | number>;
"-webkit-font-variant-ligatures"?: Property.FontVariantLigatures;
"-webkit-hyphenate-character"?: Property.HyphenateCharacter;
"-webkit-hyphens"?: Property.Hyphens;
"-webkit-initial-letter"?: Property.InitialLetter;
"-webkit-justify-content"?: Property.JustifyContent;
"-webkit-line-break"?: Property.LineBreak;
"-webkit-line-clamp"?: Property.WebkitLineClamp;
"-webkit-margin-end"?: Property.MarginInlineEnd<string | number>;
"-webkit-margin-start"?: Property.MarginInlineStart<string | number>;
"-webkit-mask-attachment"?: Property.WebkitMaskAttachment;
"-webkit-mask-box-image-outset"?: Property.MaskBorderOutset<string | number>;
"-webkit-mask-box-image-repeat"?: Property.MaskBorderRepeat;
"-webkit-mask-box-image-slice"?: Property.MaskBorderSlice;
"-webkit-mask-box-image-source"?: Property.MaskBorderSource;
"-webkit-mask-box-image-width"?: Property.MaskBorderWidth<string | number>;
"-webkit-mask-clip"?: Property.WebkitMaskClip;
"-webkit-mask-composite"?: Property.WebkitMaskComposite;
"-webkit-mask-image"?: Property.WebkitMaskImage;
"-webkit-mask-origin"?: Property.WebkitMaskOrigin;
"-webkit-mask-position"?: Property.WebkitMaskPosition<string | number>;
"-webkit-mask-position-x"?: Property.WebkitMaskPositionX<string | number>;
"-webkit-mask-position-y"?: Property.WebkitMaskPositionY<string | number>;
"-webkit-mask-repeat"?: Property.WebkitMaskRepeat;
"-webkit-mask-repeat-x"?: Property.WebkitMaskRepeatX;
"-webkit-mask-repeat-y"?: Property.WebkitMaskRepeatY;
"-webkit-mask-size"?: Property.WebkitMaskSize<string | number>;
"-webkit-max-inline-size"?: Property.MaxInlineSize<string | number>;
"-webkit-order"?: Property.Order;
"-webkit-overflow-scrolling"?: Property.WebkitOverflowScrolling;
"-webkit-padding-end"?: Property.PaddingInlineEnd<string | number>;
"-webkit-padding-start"?: Property.PaddingInlineStart<string | number>;
"-webkit-perspective"?: Property.Perspective<string | number>;
"-webkit-perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"-webkit-print-color-adjust"?: Property.PrintColorAdjust;
"-webkit-ruby-position"?: Property.RubyPosition;
"-webkit-scroll-snap-type"?: Property.ScrollSnapType;
"-webkit-shape-margin"?: Property.ShapeMargin<string | number>;
"-webkit-tap-highlight-color"?: Property.WebkitTapHighlightColor;
"-webkit-text-combine"?: Property.TextCombineUpright;
"-webkit-text-decoration-color"?: Property.TextDecorationColor;
"-webkit-text-decoration-line"?: Property.TextDecorationLine;
"-webkit-text-decoration-skip"?: Property.TextDecorationSkip;
"-webkit-text-decoration-style"?: Property.TextDecorationStyle;
"-webkit-text-emphasis-color"?: Property.TextEmphasisColor;
"-webkit-text-emphasis-position"?: Property.TextEmphasisPosition;
"-webkit-text-emphasis-style"?: Property.TextEmphasisStyle;
"-webkit-text-fill-color"?: Property.WebkitTextFillColor;
"-webkit-text-orientation"?: Property.TextOrientation;
"-webkit-text-size-adjust"?: Property.TextSizeAdjust;
"-webkit-text-stroke-color"?: Property.WebkitTextStrokeColor;
"-webkit-text-stroke-width"?: Property.WebkitTextStrokeWidth<string | number>;
"-webkit-text-underline-position"?: Property.TextUnderlinePosition;
"-webkit-touch-callout"?: Property.WebkitTouchCallout;
"-webkit-transform"?: Property.Transform;
"-webkit-transform-origin"?: Property.TransformOrigin<string | number>;
"-webkit-transform-style"?: Property.TransformStyle;
"-webkit-transition-delay"?: Property.TransitionDelay<string & {}>;
"-webkit-transition-duration"?: Property.TransitionDuration<string & {}>;
"-webkit-transition-property"?: Property.TransitionProperty;
"-webkit-transition-timing-function"?: Property.TransitionTimingFunction;
"-webkit-user-modify"?: Property.WebkitUserModify;
"-webkit-user-select"?: Property.UserSelect;
"-webkit-writing-mode"?: Property.WritingMode;
"-moz-animation"?: Property.Animation<string & {}>;
"-moz-border-image"?: Property.BorderImage;
"-moz-column-rule"?: Property.ColumnRule<string | number>;
"-moz-columns"?: Property.Columns<string | number>;
"-moz-outline-radius"?: Property.MozOutlineRadius<string | number>;
"-ms-content-zoom-limit"?: Property.MsContentZoomLimit;
"-ms-content-zoom-snap"?: Property.MsContentZoomSnap;
"-ms-flex"?: Property.Flex<string | number>;
"-ms-scroll-limit"?: Property.MsScrollLimit;
"-ms-scroll-snap-x"?: Property.MsScrollSnapX;
"-ms-scroll-snap-y"?: Property.MsScrollSnapY;
"-ms-transition"?: Property.Transition<string & {}>;
"-webkit-animation"?: Property.Animation<string & {}>;
"-webkit-border-before"?: Property.WebkitBorderBefore<string | number>;
"-webkit-border-image"?: Property.BorderImage;
"-webkit-border-radius"?: Property.BorderRadius<string | number>;
"-webkit-column-rule"?: Property.ColumnRule<string | number>;
"-webkit-columns"?: Property.Columns<string | number>;
"-webkit-flex"?: Property.Flex<string | number>;
"-webkit-flex-flow"?: Property.FlexFlow;
"-webkit-mask"?: Property.WebkitMask<string | number>;
"-webkit-mask-box-image"?: Property.MaskBorder;
"-webkit-text-emphasis"?: Property.TextEmphasis;
"-webkit-text-stroke"?: Property.WebkitTextStroke<string | number>;
"-webkit-transition"?: Property.Transition<string & {}>;
"box-align"?: Property.BoxAlign;
"box-direction"?: Property.BoxDirection;
"box-flex"?: Property.BoxFlex;
"box-flex-group"?: Property.BoxFlexGroup;
"box-lines"?: Property.BoxLines;
"box-ordinal-group"?: Property.BoxOrdinalGroup;
"box-orient"?: Property.BoxOrient;
"box-pack"?: Property.BoxPack;
"grid-column-gap"?: Property.GridColumnGap<string | number>;
"grid-gap"?: Property.GridGap<string | number>;
"grid-row-gap"?: Property.GridRowGap<string | number>;
"ime-mode"?: Property.ImeMode;
"offset-block"?: Property.InsetBlock<string | number>;
"offset-block-end"?: Property.InsetBlockEnd<string | number>;
"offset-block-start"?: Property.InsetBlockStart<string | number>;
"offset-inline"?: Property.InsetInline<string | number>;
"offset-inline-end"?: Property.InsetInlineEnd<string | number>;
"offset-inline-start"?: Property.InsetInlineStart<string | number>;
"scroll-snap-coordinate"?: Property.ScrollSnapCoordinate<string | number>;
"scroll-snap-destination"?: Property.ScrollSnapDestination<string | number>;
"scroll-snap-points-x"?: Property.ScrollSnapPointsX;
"scroll-snap-points-y"?: Property.ScrollSnapPointsY;
"scroll-snap-type-x"?: Property.ScrollSnapTypeX;
"scroll-snap-type-y"?: Property.ScrollSnapTypeY;
"-khtml-box-align"?: Property.BoxAlign;
"-khtml-box-direction"?: Property.BoxDirection;
"-khtml-box-flex"?: Property.BoxFlex;
"-khtml-box-flex-group"?: Property.BoxFlexGroup;
"-khtml-box-lines"?: Property.BoxLines;
"-khtml-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-khtml-box-orient"?: Property.BoxOrient;
"-khtml-box-pack"?: Property.BoxPack;
"-khtml-line-break"?: Property.LineBreak;
"-khtml-opacity"?: Property.Opacity;
"-khtml-user-select"?: Property.UserSelect;
"-moz-backface-visibility"?: Property.BackfaceVisibility;
"-moz-background-clip"?: Property.BackgroundClip;
"-moz-background-inline-policy"?: Property.BoxDecorationBreak;
"-moz-background-origin"?: Property.BackgroundOrigin;
"-moz-background-size"?: Property.BackgroundSize<string | number>;
"-moz-border-radius"?: Property.BorderRadius<string | number>;
"-moz-border-radius-bottomleft"?: Property.BorderBottomLeftRadius<string | number>;
"-moz-border-radius-bottomright"?: Property.BorderBottomRightRadius<string | number>;
"-moz-border-radius-topleft"?: Property.BorderTopLeftRadius<string | number>;
"-moz-border-radius-topright"?: Property.BorderTopRightRadius<string | number>;
"-moz-box-align"?: Property.BoxAlign;
"-moz-box-direction"?: Property.BoxDirection;
"-moz-box-flex"?: Property.BoxFlex;
"-moz-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-moz-box-orient"?: Property.BoxOrient;
"-moz-box-pack"?: Property.BoxPack;
"-moz-box-shadow"?: Property.BoxShadow;
"-moz-float-edge"?: Property.MozFloatEdge;
"-moz-force-broken-image-icon"?: Property.MozForceBrokenImageIcon;
"-moz-opacity"?: Property.Opacity;
"-moz-outline"?: Property.Outline<string | number>;
"-moz-outline-color"?: Property.OutlineColor;
"-moz-outline-style"?: Property.OutlineStyle;
"-moz-outline-width"?: Property.OutlineWidth<string | number>;
"-moz-perspective"?: Property.Perspective<string | number>;
"-moz-perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"-moz-text-align-last"?: Property.TextAlignLast;
"-moz-text-decoration-color"?: Property.TextDecorationColor;
"-moz-text-decoration-line"?: Property.TextDecorationLine;
"-moz-text-decoration-style"?: Property.TextDecorationStyle;
"-moz-transform"?: Property.Transform;
"-moz-transform-origin"?: Property.TransformOrigin<string | number>;
"-moz-transform-style"?: Property.TransformStyle;
"-moz-transition"?: Property.Transition<string & {}>;
"-moz-transition-delay"?: Property.TransitionDelay<string & {}>;
"-moz-transition-duration"?: Property.TransitionDuration<string & {}>;
"-moz-transition-property"?: Property.TransitionProperty;
"-moz-transition-timing-function"?: Property.TransitionTimingFunction;
"-moz-user-input"?: Property.MozUserInput;
"-ms-ime-mode"?: Property.ImeMode;
"-o-animation"?: Property.Animation<string & {}>;
"-o-animation-delay"?: Property.AnimationDelay<string & {}>;
"-o-animation-direction"?: Property.AnimationDirection;
"-o-animation-duration"?: Property.AnimationDuration<string & {}>;
"-o-animation-fill-mode"?: Property.AnimationFillMode;
"-o-animation-iteration-count"?: Property.AnimationIterationCount;
"-o-animation-name"?: Property.AnimationName;
"-o-animation-play-state"?: Property.AnimationPlayState;
"-o-animation-timing-function"?: Property.AnimationTimingFunction;
"-o-background-size"?: Property.BackgroundSize<string | number>;
"-o-border-image"?: Property.BorderImage;
"-o-object-fit"?: Property.ObjectFit;
"-o-object-position"?: Property.ObjectPosition<string | number>;
"-o-tab-size"?: Property.TabSize<string | number>;
"-o-text-overflow"?: Property.TextOverflow;
"-o-transform"?: Property.Transform;
"-o-transform-origin"?: Property.TransformOrigin<string | number>;
"-o-transition"?: Property.Transition<string & {}>;
"-o-transition-delay"?: Property.TransitionDelay<string & {}>;
"-o-transition-duration"?: Property.TransitionDuration<string & {}>;
"-o-transition-property"?: Property.TransitionProperty;
"-o-transition-timing-function"?: Property.TransitionTimingFunction;
"-webkit-box-align"?: Property.BoxAlign;
"-webkit-box-direction"?: Property.BoxDirection;
"-webkit-box-flex"?: Property.BoxFlex;
"-webkit-box-flex-group"?: Property.BoxFlexGroup;
"-webkit-box-lines"?: Property.BoxLines;
"-webkit-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-webkit-box-orient"?: Property.BoxOrient;
"-webkit-box-pack"?: Property.BoxPack;
"alignment-baseline"?: Property.AlignmentBaseline;
"baseline-shift"?: Property.BaselineShift<string | number>;
"clip-rule"?: Property.ClipRule;
"color-interpolation"?: Property.ColorInterpolation;
"color-rendering"?: Property.ColorRendering;
"dominant-baseline"?: Property.DominantBaseline;
"fill-opacity"?: Property.FillOpacity;
"fill-rule"?: Property.FillRule;
"flood-color"?: Property.FloodColor;
"flood-opacity"?: Property.FloodOpacity;
"glyph-orientation-vertical"?: Property.GlyphOrientationVertical;
"lighting-color"?: Property.LightingColor;
"marker-end"?: Property.MarkerEnd;
"marker-mid"?: Property.MarkerMid;
"marker-start"?: Property.MarkerStart;
"shape-rendering"?: Property.ShapeRendering;
"stop-color"?: Property.StopColor;
"stop-opacity"?: Property.StopOpacity;
"stroke-dasharray"?: Property.StrokeDasharray<string | number>;
"stroke-dashoffset"?: Property.StrokeDashoffset<string | number>;
"stroke-linecap"?: Property.StrokeLinecap;
"stroke-linejoin"?: Property.StrokeLinejoin;
"stroke-miterlimit"?: Property.StrokeMiterlimit;
"stroke-opacity"?: Property.StrokeOpacity;
"stroke-width"?: Property.StrokeWidth<string | number>;
"text-anchor"?: Property.TextAnchor;
"vector-effect"?: Property.VectorEffect;
}, Partial<CSSProperties> | {
[x: `--${string}`]: string | number;
accentColor?: Property.AccentColor;
alignContent?: Property.AlignContent;
alignItems?: Property.AlignItems;
alignSelf?: Property.AlignSelf;
alignTracks?: Property.AlignTracks;
animationComposition?: Property.AnimationComposition;
animationDelay?: Property.AnimationDelay<string & {}>;
animationDirection?: Property.AnimationDirection;
animationDuration?: Property.AnimationDuration<string & {}>;
animationFillMode?: Property.AnimationFillMode;
animationIterationCount?: Property.AnimationIterationCount;
animationName?: Property.AnimationName;
animationPlayState?: Property.AnimationPlayState;
animationRangeEnd?: Property.AnimationRangeEnd<string | number>;
animationRangeStart?: Property.AnimationRangeStart<string | number>;
animationTimeline?: Property.AnimationTimeline;
animationTimingFunction?: Property.AnimationTimingFunction;
appearance?: Property.Appearance;
aspectRatio?: Property.AspectRatio;
backdropFilter?: Property.BackdropFilter;
backfaceVisibility?: Property.BackfaceVisibility;
backgroundAttachment?: Property.BackgroundAttachment;
backgroundBlendMode?: Property.BackgroundBlendMode;
backgroundClip?: Property.BackgroundClip;
backgroundColor?: Property.BackgroundColor;
backgroundImage?: Property.BackgroundImage;
backgroundOrigin?: Property.BackgroundOrigin;
backgroundPositionX?: Property.BackgroundPositionX<string | number>;
backgroundPositionY?: Property.BackgroundPositionY<string | number>;
backgroundRepeat?: Property.BackgroundRepeat;
backgroundSize?: Property.BackgroundSize<string | number>;
blockOverflow?: Property.BlockOverflow;
blockSize?: Property.BlockSize<string | number>;
borderBlockColor?: Property.BorderBlockColor;
borderBlockEndColor?: Property.BorderBlockEndColor;
borderBlockEndStyle?: Property.BorderBlockEndStyle;
borderBlockEndWidth?: Property.BorderBlockEndWidth<string | number>;
borderBlockStartColor?: Property.BorderBlockStartColor;
borderBlockStartStyle?: Property.BorderBlockStartStyle;
borderBlockStartWidth?: Property.BorderBlockStartWidth<string | number>;
borderBlockStyle?: Property.BorderBlockStyle;
borderBlockWidth?: Property.BorderBlockWidth<string | number>;
borderBottomColor?: Property.BorderBottomColor;
borderBottomLeftRadius?: Property.BorderBottomLeftRadius<string | number>;
borderBottomRightRadius?: Property.BorderBottomRightRadius<string | number>;
borderBottomStyle?: Property.BorderBottomStyle;
borderBottomWidth?: Property.BorderBottomWidth<string | number>;
borderCollapse?: Property.BorderCollapse;
borderEndEndRadius?: Property.BorderEndEndRadius<string | number>;
borderEndStartRadius?: Property.BorderEndStartRadius<string | number>;
borderImageOutset?: Property.BorderImageOutset<string | number>;
borderImageRepeat?: Property.BorderImageRepeat;
borderImageSlice?: Property.BorderImageSlice;
borderImageSource?: Property.BorderImageSource;
borderImageWidth?: Property.BorderImageWidth<string | number>;
borderInlineColor?: Property.BorderInlineColor;
borderInlineEndColor?: Property.BorderInlineEndColor;
borderInlineEndStyle?: Property.BorderInlineEndStyle;
borderInlineEndWidth?: Property.BorderInlineEndWidth<string | number>;
borderInlineStartColor?: Property.BorderInlineStartColor;
borderInlineStartStyle?: Property.BorderInlineStartStyle;
borderInlineStartWidth?: Property.BorderInlineStartWidth<string | number>;
borderInlineStyle?: Property.BorderInlineStyle;
borderInlineWidth?: Property.BorderInlineWidth<string | number>;
borderLeftColor?: Property.BorderLeftColor;
borderLeftStyle?: Property.BorderLeftStyle;
borderLeftWidth?: Property.BorderLeftWidth<string | number>;
borderRightColor?: Property.BorderRightColor;
borderRightStyle?: Property.BorderRightStyle;
borderRightWidth?: Property.BorderRightWidth<string | number>;
borderSpacing?: Property.BorderSpacing<string | number>;
borderStartEndRadius?: Property.BorderStartEndRadius<string | number>;
borderStartStartRadius?: Property.BorderStartStartRadius<string | number>;
borderTopColor?: Property.BorderTopColor;
borderTopLeftRadius?: Property.BorderTopLeftRadius<string | number>;
borderTopRightRadius?: Property.BorderTopRightRadius<string | number>;
borderTopStyle?: Property.BorderTopStyle;
borderTopWidth?: Property.BorderTopWidth<string | number>;
bottom?: Property.Bottom<string | number>;
boxDecorationBreak?: Property.BoxDecorationBreak;
boxShadow?: Property.BoxShadow;
boxSizing?: Property.BoxSizing;
breakAfter?: Property.BreakAfter;
breakBefore?: Property.BreakBefore;
breakInside?: Property.BreakInside;
captionSide?: Property.CaptionSide;
caretColor?: Property.CaretColor;
caretShape?: Property.CaretShape;
clear?: Property.Clear;
clipPath?: Property.ClipPath;
color?: Property.Color;
colorAdjust?: Property.PrintColorAdjust;
colorScheme?: Property.ColorScheme;
columnCount?: Property.ColumnCount;
columnFill?: Property.ColumnFill;
columnGap?: Property.ColumnGap<string | number>;
columnRuleColor?: Property.ColumnRuleColor;
columnRuleStyle?: Property.ColumnRuleStyle;
columnRuleWidth?: Property.ColumnRuleWidth<string | number>;
columnSpan?: Property.ColumnSpan;
columnWidth?: Property.ColumnWidth<string | number>;
contain?: Property.Contain;
containIntrinsicBlockSize?: Property.ContainIntrinsicBlockSize<string | number>;
containIntrinsicHeight?: Property.ContainIntrinsicHeight<string | number>;
containIntrinsicInlineSize?: Property.ContainIntrinsicInlineSize<string | number>;
containIntrinsicWidth?: Property.ContainIntrinsicWidth<string | number>;
containerName?: Property.ContainerName;
containerType?: Property.ContainerType;
content?: Property.Content;
contentVisibility?: Property.ContentVisibility;
counterIncrement?: Property.CounterIncrement;
counterReset?: Property.CounterReset;
counterSet?: Property.CounterSet;
cursor?: Property.Cursor;
direction?: Property.Direction;
display?: Property.Display;
emptyCells?: Property.EmptyCells;
filter?: Property.Filter;
flexBasis?: Property.FlexBasis<string | number>;
flexDirection?: Property.FlexDirection;
flexGrow?: Property.FlexGrow;
flexShrink?: Property.FlexShrink;
flexWrap?: Property.FlexWrap;
float?: Property.Float;
fontFamily?: Property.FontFamily;
fontFeatureSettings?: Property.FontFeatureSettings;
fontKerning?: Property.FontKerning;
fontLanguageOverride?: Property.FontLanguageOverride;
fontOpticalSizing?: Property.FontOpticalSizing;
fontPalette?: Property.FontPalette;
fontSize?: Property.FontSize<string | number>;
fontSizeAdjust?: Property.FontSizeAdjust;
fontSmooth?: Property.FontSmooth<string | number>;
fontStretch?: Property.FontStretch;
fontStyle?: Property.FontStyle;
fontSynthesis?: Property.FontSynthesis;
fontSynthesisPosition?: Property.FontSynthesisPosition;
fontSynthesisSmallCaps?: Property.FontSynthesisSmallCaps;
fontSynthesisStyle?: Property.FontSynthesisStyle;
fontSynthesisWeight?: Property.FontSynthesisWeight;
fontVariant?: Property.FontVariant;
fontVariantAlternates?: Property.FontVariantAlternates;
fontVariantCaps?: Property.FontVariantCaps;
fontVariantEastAsian?: Property.FontVariantEastAsian;
fontVariantEmoji?: Property.FontVariantEmoji;
fontVariantLigatures?: Property.FontVariantLigatures;
fontVariantNumeric?: Property.FontVariantNumeric;
fontVariantPosition?: Property.FontVariantPosition;
fontVariationSettings?: Property.FontVariationSettings;
fontWeight?: Property.FontWeight;
forcedColorAdjust?: Property.ForcedColorAdjust;
gridAutoColumns?: Property.GridAutoColumns<string | number>;
gridAutoFlow?: Property.GridAutoFlow;
gridAutoRows?: Property.GridAutoRows<string | number>;
gridColumnEnd?: Property.GridColumnEnd;
gridColumnStart?: Property.GridColumnStart;
gridRowEnd?: Property.GridRowEnd;
gridRowStart?: Property.GridRowStart;
gridTemplateAreas?: Property.GridTemplateAreas;
gridTemplateColumns?: Property.GridTemplateColumns<string | number>;
gridTemplateRows?: Property.GridTemplateRows<string | number>;
hangingPunctuation?: Property.HangingPunctuation;
height?: Property.Height<string | number>;
hyphenateCharacter?: Property.HyphenateCharacter;
hyphenateLimitChars?: Property.HyphenateLimitChars;
hyphens?: Property.Hyphens;
imageOrientation?: Property.ImageOrientation;
imageRendering?: Property.ImageRendering;
imageResolution?: Property.ImageResolution;
initialLetter?: Property.InitialLetter;
inlineSize?: Property.InlineSize<string | number>;
inputSecurity?: Property.InputSecurity;
insetBlockEnd?: Property.InsetBlockEnd<string | number>;
insetBlockStart?: Property.InsetBlockStart<string | number>;
insetInlineEnd?: Property.InsetInlineEnd<string | number>;
insetInlineStart?: Property.InsetInlineStart<string | number>;
isolation?: Property.Isolation;
justifyContent?: Property.JustifyContent;
justifyItems?: Property.JustifyItems;
justifySelf?: Property.JustifySelf;
justifyTracks?: Property.JustifyTracks;
left?: Property.Left<string | number>;
letterSpacing?: Property.LetterSpacing<string | number>;
lineBreak?: Property.LineBreak;
lineHeight?: Property.LineHeight<string | number>;
lineHeightStep?: Property.LineHeightStep<string | number>;
listStyleImage?: Property.ListStyleImage;
listStylePosition?: Property.ListStylePosition;
listStyleType?: Property.ListStyleType;
marginBlockEnd?: Property.MarginBlockEnd<string | number>;
marginBlockStart?: Property.MarginBlockStart<string | number>;
marginBottom?: Property.MarginBottom<string | number>;
marginInlineEnd?: Property.MarginInlineEnd<string | number>;
marginInlineStart?: Property.MarginInlineStart<string | number>;
marginLeft?: Property.MarginLeft<string | number>;
marginRight?: Property.MarginRight<string | number>;
marginTop?: Property.MarginTop<string | number>;
marginTrim?: Property.MarginTrim;
maskBorderMode?: Property.MaskBorderMode;
maskBorderOutset?: Property.MaskBorderOutset<string | number>;
maskBorderRepeat?: Property.MaskBorderRepeat;
maskBorderSlice?: Property.MaskBorderSlice;
maskBorderSource?: Property.MaskBorderSource;
maskBorderWidth?: Property.MaskBorderWidth<string | number>;
maskClip?: Property.MaskClip;
maskComposite?: Property.MaskComposite;
maskImage?: Property.MaskImage;
maskMode?: Property.MaskMode;
maskOrigin?: Property.MaskOrigin;
maskPosition?: Property.MaskPosition<string | number>;
maskRepeat?: Property.MaskRepeat;
maskSize?: Property.MaskSize<string | number>;
maskType?: Property.MaskType;
masonryAutoFlow?: Property.MasonryAutoFlow;
mathDepth?: Property.MathDepth;
mathShift?: Property.MathShift;
mathStyle?: Property.MathStyle;
maxBlockSize?: Property.MaxBlockSize<string | number>;
maxHeight?: Property.MaxHeight<string | number>;
maxInlineSize?: Property.MaxInlineSize<string | number>;
maxLines?: Property.MaxLines;
maxWidth?: Property.MaxWidth<string | number>;
minBlockSize?: Property.MinBlockSize<string | number>;
minHeight?: Property.MinHeight<string | number>;
minInlineSize?: Property.MinInlineSize<string | number>;
minWidth?: Property.MinWidth<string | number>;
mixBlendMode?: Property.MixBlendMode;
motionDistance?: Property.OffsetDistance<string | number>;
motionPath?: Property.OffsetPath;
motionRotation?: Property.OffsetRotate;
objectFit?: Property.ObjectFit;
objectPosition?: Property.ObjectPosition<string | number>;
offsetAnchor?: Property.OffsetAnchor<string | number>;
offsetDistance?: Property.OffsetDistance<string | number>;
offsetPath?: Property.OffsetPath;
offsetPosition?: Property.OffsetPosition<string | number>;
offsetRotate?: Property.OffsetRotate;
offsetRotation?: Property.OffsetRotate;
opacity?: Property.Opacity;
order?: Property.Order;
orphans?: Property.Orphans;
outlineColor?: Property.OutlineColor;
outlineOffset?: Property.OutlineOffset<string | number>;
outlineStyle?: Property.OutlineStyle;
outlineWidth?: Property.OutlineWidth<string | number>;
overflowAnchor?: Property.OverflowAnchor;
overflowBlock?: Property.OverflowBlock;
overflowClipBox?: Property.OverflowClipBox;
overflowClipMargin?: Property.OverflowClipMargin<string | number>;
overflowInline?: Property.OverflowInline;
overflowWrap?: Property.OverflowWrap;
overflowX?: Property.OverflowX;
overflowY?: Property.OverflowY;
overlay?: Property.Overlay;
overscrollBehaviorBlock?: Property.OverscrollBehaviorBlock;
overscrollBehaviorInline?: Property.OverscrollBehaviorInline;
overscrollBehaviorX?: Property.OverscrollBehaviorX;
overscrollBehaviorY?: Property.OverscrollBehaviorY;
paddingBlockEnd?: Property.PaddingBlockEnd<string | number>;
paddingBlockStart?: Property.PaddingBlockStart<string | number>;
paddingBottom?: Property.PaddingBottom<string | number>;
paddingInlineEnd?: Property.PaddingInlineEnd<string | number>;
paddingInlineStart?: Property.PaddingInlineStart<string | number>;
paddingLeft?: Property.PaddingLeft<string | number>;
paddingRight?: Property.PaddingRight<string | number>;
paddingTop?: Property.PaddingTop<string | number>;
page?: Property.Page;
pageBreakAfter?: Property.PageBreakAfter;
pageBreakBefore?: Property.PageBreakBefore;
pageBreakInside?: Property.PageBreakInside;
paintOrder?: Property.PaintOrder;
perspective?: Property.Perspective<string | number>;
perspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
pointerEvents?: Property.PointerEvents;
position?: Property.Position;
printColorAdjust?: Property.PrintColorAdjust;
quotes?: Property.Quotes;
resize?: Property.Resize;
right?: Property.Right<string | number>;
rotate?: Property.Rotate;
rowGap?: Property.RowGap<string | number>;
rubyAlign?: Property.RubyAlign;
rubyMerge?: Property.RubyMerge;
rubyPosition?: Property.RubyPosition;
scale?: Property.Scale;
scrollBehavior?: Property.ScrollBehavior;
scrollMarginBlockEnd?: Property.ScrollMarginBlockEnd<string | number>;
scrollMarginBlockStart?: Property.ScrollMarginBlockStart<string | number>;
scrollMarginBottom?: Property.ScrollMarginBottom<string | number>;
scrollMarginInlineEnd?: Property.ScrollMarginInlineEnd<string | number>;
scrollMarginInlineStart?: Property.ScrollMarginInlineStart<string | number>;
scrollMarginLeft?: Property.ScrollMarginLeft<string | number>;
scrollMarginRight?: Property.ScrollMarginRight<string | number>;
scrollMarginTop?: Property.ScrollMarginTop<string | number>;
scrollPaddingBlockEnd?: Property.ScrollPaddingBlockEnd<string | number>;
scrollPaddingBlockStart?: Property.ScrollPaddingBlockStart<string | number>;
scrollPaddingBottom?: Property.ScrollPaddingBottom<string | number>;
scrollPaddingInlineEnd?: Property.ScrollPaddingInlineEnd<string | number>;
scrollPaddingInlineStart?: Property.ScrollPaddingInlineStart<string | number>;
scrollPaddingLeft?: Property.ScrollPaddingLeft<string | number>;
scrollPaddingRight?: Property.ScrollPaddingRight<string | number>;
scrollPaddingTop?: Property.ScrollPaddingTop<string | number>;
scrollSnapAlign?: Property.ScrollSnapAlign;
scrollSnapMarginBottom?: Property.ScrollMarginBottom<string | number>;
scrollSnapMarginLeft?: Property.ScrollMarginLeft<string | number>;
scrollSnapMarginRight?: Property.ScrollMarginRight<string | number>;
scrollSnapMarginTop?: Property.ScrollMarginTop<string | number>;
scrollSnapStop?: Property.ScrollSnapStop;
scrollSnapType?: Property.ScrollSnapType;
scrollTimelineAxis?: Property.ScrollTimelineAxis;
scrollTimelineName?: Property.ScrollTimelineName;
scrollbarColor?: Property.ScrollbarColor;
scrollbarGutter?: Property.ScrollbarGutter;
scrollbarWidth?: Property.ScrollbarWidth;
shapeImageThreshold?: Property.ShapeImageThreshold;
shapeMargin?: Property.ShapeMargin<string | number>;
shapeOutside?: Property.ShapeOutside;
tabSize?: Property.TabSize<string | number>;
tableLayout?: Property.TableLayout;
textAlign?: Property.TextAlign;
textAlignLast?: Property.TextAlignLast;
textCombineUpright?: Property.TextCombineUpright;
textDecorationColor?: Property.TextDecorationColor;
textDecorationLine?: Property.TextDecorationLine;
textDecorationSkip?: Property.TextDecorationSkip;
textDecorationSkipInk?: Property.TextDecorationSkipInk;
textDecorationStyle?: Property.TextDecorationStyle;
textDecorationThickness?: Property.TextDecorationThickness<string | number>;
textEmphasisColor?: Property.TextEmphasisColor;
textEmphasisPosition?: Property.TextEmphasisPosition;
textEmphasisStyle?: Property.TextEmphasisStyle;
textIndent?: Property.TextIndent<string | number>;
textJustify?: Property.TextJustify;
textOrientation?: Property.TextOrientation;
textOverflow?: Property.TextOverflow;
textRendering?: Property.TextRendering;
textShadow?: Property.TextShadow;
textSizeAdjust?: Property.TextSizeAdjust;
textTransform?: Property.TextTransform;
textUnderlineOffset?: Property.TextUnderlineOffset<string | number>;
textUnderlinePosition?: Property.TextUnderlinePosition;
textWrap?: Property.TextWrap;
timelineScope?: Property.TimelineScope;
top?: Property.Top<string | number>;
touchAction?: Property.TouchAction;
transform?: Property.Transform;
transformBox?: Property.TransformBox;
transformOrigin?: Property.TransformOrigin<string | number>;
transformStyle?: Property.TransformStyle;
transitionBehavior?: Property.TransitionBehavior;
transitionDelay?: Property.TransitionDelay<string & {}>;
transitionDuration?: Property.TransitionDuration<string & {}>;
transitionProperty?: Property.TransitionProperty;
transitionTimingFunction?: Property.TransitionTimingFunction;
translate?: Property.Translate<string | number>;
unicodeBidi?: Property.UnicodeBidi;
userSelect?: Property.UserSelect;
verticalAlign?: Property.VerticalAlign<string | number>;
viewTimelineAxis?: Property.ViewTimelineAxis;
viewTimelineInset?: Property.ViewTimelineInset<string | number>;
viewTimelineName?: Property.ViewTimelineName;
viewTransitionName?: Property.ViewTransitionName;
visibility?: Property.Visibility;
whiteSpace?: Property.WhiteSpace;
whiteSpaceCollapse?: Property.WhiteSpaceCollapse;
whiteSpaceTrim?: Property.WhiteSpaceTrim;
widows?: Property.Widows;
width?: Property.Width<string | number>;
willChange?: Property.WillChange;
wordBreak?: Property.WordBreak;
wordSpacing?: Property.WordSpacing<string | number>;
wordWrap?: Property.WordWrap;
writingMode?: Property.WritingMode;
zIndex?: Property.ZIndex;
zoom?: Property.Zoom;
all?: Globals;
animation?: Property.Animation<string & {}>;
animationRange?: Property.AnimationRange<string | number>;
background?: Property.Background<string | number>;
backgroundPosition?: Property.BackgroundPosition<string | number>;
border?: Property.Border<string | number>;
borderBlock?: Property.BorderBlock<string | number>;
borderBlockEnd?: Property.BorderBlockEnd<string | number>;
borderBlockStart?: Property.BorderBlockStart<string | number>;
borderBottom?: Property.BorderBottom<string | number>;
borderColor?: Property.BorderColor;
borderImage?: Property.BorderImage;
borderInline?: Property.BorderInline<string | number>;
borderInlineEnd?: Property.BorderInlineEnd<string | number>;
borderInlineStart?: Property.BorderInlineStart<string | number>;
borderLeft?: Property.BorderLeft<string | number>;
borderRadius?: Property.BorderRadius<string | number>;
borderRight?: Property.BorderRight<string | number>;
borderStyle?: Property.BorderStyle;
borderTop?: Property.BorderTop<string | number>;
borderWidth?: Property.BorderWidth<string | number>;
caret?: Property.Caret;
columnRule?: Property.ColumnRule<string | number>;
columns?: Property.Columns<string | number>;
containIntrinsicSize?: Property.ContainIntrinsicSize<string | number>;
container?: Property.Container;
flex?: Property.Flex<string | number>;
flexFlow?: Property.FlexFlow;
font?: Property.Font;
gap?: Property.Gap<string | number>;
grid?: Property.Grid;
gridArea?: Property.GridArea;
gridColumn?: Property.GridColumn;
gridRow?: Property.GridRow;
gridTemplate?: Property.GridTemplate;
inset?: Property.Inset<string | number>;
insetBlock?: Property.InsetBlock<string | number>;
insetInline?: Property.InsetInline<string | number>;
lineClamp?: Property.LineClamp;
listStyle?: Property.ListStyle;
margin?: Property.Margin<string | number>;
marginBlock?: Property.MarginBlock<string | number>;
marginInline?: Property.MarginInline<string | number>;
mask?: Property.Mask<string | number>;
maskBorder?: Property.MaskBorder;
motion?: Property.Offset<string | number>;
offset?: Property.Offset<string | number>;
outline?: Property.Outline<string | number>;
overflow?: Property.Overflow;
overscrollBehavior?: Property.OverscrollBehavior;
padding?: Property.Padding<string | number>;
paddingBlock?: Property.PaddingBlock<string | number>;
paddingInline?: Property.PaddingInline<string | number>;
placeContent?: Property.PlaceContent;
placeItems?: Property.PlaceItems;
placeSelf?: Property.PlaceSelf;
scrollMargin?: Property.ScrollMargin<string | number>;
scrollMarginBlock?: Property.ScrollMarginBlock<string | number>;
scrollMarginInline?: Property.ScrollMarginInline<string | number>;
scrollPadding?: Property.ScrollPadding<string | number>;
scrollPaddingBlock?: Property.ScrollPaddingBlock<string | number>;
scrollPaddingInline?: Property.ScrollPaddingInline<string | number>;
scrollSnapMargin?: Property.ScrollMargin<string | number>;
scrollTimeline?: Property.ScrollTimeline;
textDecoration?: Property.TextDecoration<string | number>;
textEmphasis?: Property.TextEmphasis;
transition?: Property.Transition<string & {}>;
viewTimeline?: Property.ViewTimeline;
MozAnimationDelay?: Property.AnimationDelay<string & {}>;
MozAnimationDirection?: Property.AnimationDirection;
MozAnimationDuration?: Property.AnimationDuration<string & {}>;
MozAnimationFillMode?: Property.AnimationFillMode;
MozAnimationIterationCount?: Property.AnimationIterationCount;
MozAnimationName?: Property.AnimationName;
MozAnimationPlayState?: Property.AnimationPlayState;
MozAnimationTimingFunction?: Property.AnimationTimingFunction;
MozAppearance?: Property.MozAppearance;
MozBinding?: Property.MozBinding;
MozBorderBottomColors?: Property.MozBorderBottomColors;
MozBorderEndColor?: Property.BorderInlineEndColor;
MozBorderEndStyle?: Property.BorderInlineEndStyle;
MozBorderEndWidth?: Property.BorderInlineEndWidth<string | number>;
MozBorderLeftColors?: Property.MozBorderLeftColors;
MozBorderRightColors?: Property.MozBorderRightColors;
MozBorderStartColor?: Property.BorderInlineStartColor;
MozBorderStartStyle?: Property.BorderInlineStartStyle;
MozBorderTopColors?: Property.MozBorderTopColors;
MozBoxSizing?: Property.BoxSizing;
MozColumnCount?: Property.ColumnCount;
MozColumnFill?: Property.ColumnFill;
MozColumnRuleColor?: Property.ColumnRuleColor;
MozColumnRuleStyle?: Property.ColumnRuleStyle;
MozColumnRuleWidth?: Property.ColumnRuleWidth<string | number>;
MozColumnWidth?: Property.ColumnWidth<string | number>;
MozContextProperties?: Property.MozContextProperties;
MozFontFeatureSettings?: Property.FontFeatureSettings;
MozFontLanguageOverride?: Property.FontLanguageOverride;
MozHyphens?: Property.Hyphens;
MozImageRegion?: Property.MozImageRegion;
MozMarginEnd?: Property.MarginInlineEnd<string | number>;
MozMarginStart?: Property.MarginInlineStart<string | number>;
MozOrient?: Property.MozOrient;
MozOsxFontSmoothing?: Property.FontSmooth<string | number>;
MozOutlineRadiusBottomleft?: Property.MozOutlineRadiusBottomleft<string | number>;
MozOutlineRadiusBottomright?: Property.MozOutlineRadiusBottomright<string | number>;
MozOutlineRadiusTopleft?: Property.MozOutlineRadiusTopleft<string | number>;
MozOutlineRadiusTopright?: Property.MozOutlineRadiusTopright<string | number>;
MozPaddingEnd?: Property.PaddingInlineEnd<string | number>;
MozPaddingStart?: Property.PaddingInlineStart<string | number>;
MozStackSizing?: Property.MozStackSizing;
MozTabSize?: Property.TabSize<string | number>;
MozTextBlink?: Property.MozTextBlink;
MozTextSizeAdjust?: Property.TextSizeAdjust;
MozUserFocus?: Property.MozUserFocus;
MozUserModify?: Property.MozUserModify;
MozUserSelect?: Property.UserSelect;
MozWindowDragging?: Property.MozWindowDragging;
MozWindowShadow?: Property.MozWindowShadow;
msAccelerator?: Property.MsAccelerator;
msBlockProgression?: Property.MsBlockProgression;
msContentZoomChaining?: Property.MsContentZoomChaining;
msContentZoomLimitMax?: Property.MsContentZoomLimitMax;
msContentZoomLimitMin?: Property.MsContentZoomLimitMin;
msContentZoomSnapPoints?: Property.MsContentZoomSnapPoints;
msContentZoomSnapType?: Property.MsContentZoomSnapType;
msContentZooming?: Property.MsContentZooming;
msFilter?: Property.MsFilter;
msFlexDirection?: Property.FlexDirection;
msFlexPositive?: Property.FlexGrow;
msFlowFrom?: Property.MsFlowFrom;
msFlowInto?: Property.MsFlowInto;
msGridColumns?: Property.MsGridColumns<string | number>;
msGridRows?: Property.MsGridRows<string | number>;
msHighContrastAdjust?: Property.MsHighContrastAdjust;
msHyphenateLimitChars?: Property.MsHyphenateLimitChars;
msHyphenateLimitLines?: Property.MsHyphenateLimitLines;
msHyphenateLimitZone?: Property.MsHyphenateLimitZone<string | number>;
msHyphens?: Property.Hyphens;
msImeAlign?: Property.MsImeAlign;
msLineBreak?: Property.LineBreak;
msOrder?: Property.Order;
msOverflowStyle?: Property.MsOverflowStyle;
msOverflowX?: Property.OverflowX;
msOverflowY?: Property.OverflowY;
msScrollChaining?: Property.MsScrollChaining;
msScrollLimitXMax?: Property.MsScrollLimitXMax<string | number>;
msScrollLimitXMin?: Property.MsScrollLimitXMin<string | number>;
msScrollLimitYMax?: Property.MsScrollLimitYMax<string | number>;
msScrollLimitYMin?: Property.MsScrollLimitYMin<string | number>;
msScrollRails?: Property.MsScrollRails;
msScrollSnapPointsX?: Property.MsScrollSnapPointsX;
msScrollSnapPointsY?: Property.MsScrollSnapPointsY;
msScrollSnapType?: Property.MsScrollSnapType;
msScrollTranslation?: Property.MsScrollTranslation;
msScrollbar3dlightColor?: Property.MsScrollbar3dlightColor;
msScrollbarArrowColor?: Property.MsScrollbarArrowColor;
msScrollbarBaseColor?: Property.MsScrollbarBaseColor;
msScrollbarDarkshadowColor?: Property.MsScrollbarDarkshadowColor;
msScrollbarFaceColor?: Property.MsScrollbarFaceColor;
msScrollbarHighlightColor?: Property.MsScrollbarHighlightColor;
msScrollbarShadowColor?: Property.MsScrollbarShadowColor;
msScrollbarTrackColor?: Property.MsScrollbarTrackColor;
msTextAutospace?: Property.MsTextAutospace;
msTextCombineHorizontal?: Property.TextCombineUpright;
msTextOverflow?: Property.TextOverflow;
msTouchAction?: Property.TouchAction;
msTouchSelect?: Property.MsTouchSelect;
msTransform?: Property.Transform;
msTransformOrigin?: Property.TransformOrigin<string | number>;
msTransitionDelay?: Property.TransitionDelay<string & {}>;
msTransitionDuration?: Property.TransitionDuration<string & {}>;
msTransitionProperty?: Property.TransitionProperty;
msTransitionTimingFunction?: Property.TransitionTimingFunction;
msUserSelect?: Property.MsUserSelect;
msWordBreak?: Property.WordBreak;
msWrapFlow?: Property.MsWrapFlow;
msWrapMargin?: Property.MsWrapMargin<string | number>;
msWrapThrough?: Property.MsWrapThrough;
msWritingMode?: Property.WritingMode;
WebkitAlignContent?: Property.AlignContent;
WebkitAlignItems?: Property.AlignItems;
WebkitAlignSelf?: Property.AlignSelf;
WebkitAnimationDelay?: Property.AnimationDelay<string & {}>;
WebkitAnimationDirection?: Property.AnimationDirection;
WebkitAnimationDuration?: Property.AnimationDuration<string & {}>;
WebkitAnimationFillMode?: Property.AnimationFillMode;
WebkitAnimationIterationCount?: Property.AnimationIterationCount;
WebkitAnimationName?: Property.AnimationName;
WebkitAnimationPlayState?: Property.AnimationPlayState;
WebkitAnimationTimingFunction?: Property.AnimationTimingFunction;
WebkitAppearance?: Property.WebkitAppearance;
WebkitBackdropFilter?: Property.BackdropFilter;
WebkitBackfaceVisibility?: Property.BackfaceVisibility;
WebkitBackgroundClip?: Property.BackgroundClip;
WebkitBackgroundOrigin?: Property.BackgroundOrigin;
WebkitBackgroundSize?: Property.BackgroundSize<string | number>;
WebkitBorderBeforeColor?: Property.WebkitBorderBeforeColor;
WebkitBorderBeforeStyle?: Property.WebkitBorderBeforeStyle;
WebkitBorderBeforeWidth?: Property.WebkitBorderBeforeWidth<string | number>;
WebkitBorderBottomLeftRadius?: Property.BorderBottomLeftRadius<string | number>;
WebkitBorderBottomRightRadius?: Property.BorderBottomRightRadius<string | number>;
WebkitBorderImageSlice?: Property.BorderImageSlice;
WebkitBorderTopLeftRadius?: Property.BorderTopLeftRadius<string | number>;
WebkitBorderTopRightRadius?: Property.BorderTopRightRadius<string | number>;
WebkitBoxDecorationBreak?: Property.BoxDecorationBreak;
WebkitBoxReflect?: Property.WebkitBoxReflect<string | number>;
WebkitBoxShadow?: Property.BoxShadow;
WebkitBoxSizing?: Property.BoxSizing;
WebkitClipPath?: Property.ClipPath;
WebkitColumnCount?: Property.ColumnCount;
WebkitColumnFill?: Property.ColumnFill;
WebkitColumnRuleColor?: Property.ColumnRuleColor;
WebkitColumnRuleStyle?: Property.ColumnRuleStyle;
WebkitColumnRuleWidth?: Property.ColumnRuleWidth<string | number>;
WebkitColumnSpan?: Property.ColumnSpan;
WebkitColumnWidth?: Property.ColumnWidth<string | number>;
WebkitFilter?: Property.Filter;
WebkitFlexBasis?: Property.FlexBasis<string | number>;
WebkitFlexDirection?: Property.FlexDirection;
WebkitFlexGrow?: Property.FlexGrow;
WebkitFlexShrink?: Property.FlexShrink;
WebkitFlexWrap?: Property.FlexWrap;
WebkitFontFeatureSettings?: Property.FontFeatureSettings;
WebkitFontKerning?: Property.FontKerning;
WebkitFontSmoothing?: Property.FontSmooth<string | number>;
WebkitFontVariantLigatures?: Property.FontVariantLigatures;
WebkitHyphenateCharacter?: Property.HyphenateCharacter;
WebkitHyphens?: Property.Hyphens;
WebkitInitialLetter?: Property.InitialLetter;
WebkitJustifyContent?: Property.JustifyContent;
WebkitLineBreak?: Property.LineBreak;
WebkitLineClamp?: Property.WebkitLineClamp;
WebkitMarginEnd?: Property.MarginInlineEnd<string | number>;
WebkitMarginStart?: Property.MarginInlineStart<string | number>;
WebkitMaskAttachment?: Property.WebkitMaskAttachment;
WebkitMaskBoxImageOutset?: Property.MaskBorderOutset<string | number>;
WebkitMaskBoxImageRepeat?: Property.MaskBorderRepeat;
WebkitMaskBoxImageSlice?: Property.MaskBorderSlice;
WebkitMaskBoxImageSource?: Property.MaskBorderSource;
WebkitMaskBoxImageWidth?: Property.MaskBorderWidth<string | number>;
WebkitMaskClip?: Property.WebkitMaskClip;
WebkitMaskComposite?: Property.WebkitMaskComposite;
WebkitMaskImage?: Property.WebkitMaskImage;
WebkitMaskOrigin?: Property.WebkitMaskOrigin;
WebkitMaskPosition?: Property.WebkitMaskPosition<string | number>;
WebkitMaskPositionX?: Property.WebkitMaskPositionX<string | number>;
WebkitMaskPositionY?: Property.WebkitMaskPositionY<string | number>;
WebkitMaskRepeat?: Property.WebkitMaskRepeat;
WebkitMaskRepeatX?: Property.WebkitMaskRepeatX;
WebkitMaskRepeatY?: Property.WebkitMaskRepeatY;
WebkitMaskSize?: Property.WebkitMaskSize<string | number>;
WebkitMaxInlineSize?: Property.MaxInlineSize<string | number>;
WebkitOrder?: Property.Order;
WebkitOverflowScrolling?: Property.WebkitOverflowScrolling;
WebkitPaddingEnd?: Property.PaddingInlineEnd<string | number>;
WebkitPaddingStart?: Property.PaddingInlineStart<string | number>;
WebkitPerspective?: Property.Perspective<string | number>;
WebkitPerspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
WebkitPrintColorAdjust?: Property.PrintColorAdjust;
WebkitRubyPosition?: Property.RubyPosition;
WebkitScrollSnapType?: Property.ScrollSnapType;
WebkitShapeMargin?: Property.ShapeMargin<string | number>;
WebkitTapHighlightColor?: Property.WebkitTapHighlightColor;
WebkitTextCombine?: Property.TextCombineUpright;
WebkitTextDecorationColor?: Property.TextDecorationColor;
WebkitTextDecorationLine?: Property.TextDecorationLine;
WebkitTextDecorationSkip?: Property.TextDecorationSkip;
WebkitTextDecorationStyle?: Property.TextDecorationStyle;
WebkitTextEmphasisColor?: Property.TextEmphasisColor;
WebkitTextEmphasisPosition?: Property.TextEmphasisPosition;
WebkitTextEmphasisStyle?: Property.TextEmphasisStyle;
WebkitTextFillColor?: Property.WebkitTextFillColor;
WebkitTextOrientation?: Property.TextOrientation;
WebkitTextSizeAdjust?: Property.TextSizeAdjust;
WebkitTextStrokeColor?: Property.WebkitTextStrokeColor;
WebkitTextStrokeWidth?: Property.WebkitTextStrokeWidth<string | number>;
WebkitTextUnderlinePosition?: Property.TextUnderlinePosition;
WebkitTouchCallout?: Property.WebkitTouchCallout;
WebkitTransform?: Property.Transform;
WebkitTransformOrigin?: Property.TransformOrigin<string | number>;
WebkitTransformStyle?: Property.TransformStyle;
WebkitTransitionDelay?: Property.TransitionDelay<string & {}>;
WebkitTransitionDuration?: Property.TransitionDuration<string & {}>;
WebkitTransitionProperty?: Property.TransitionProperty;
WebkitTransitionTimingFunction?: Property.TransitionTimingFunction;
WebkitUserModify?: Property.WebkitUserModify;
WebkitUserSelect?: Property.UserSelect;
WebkitWritingMode?: Property.WritingMode;
MozAnimation?: Property.Animation<string & {}>;
MozBorderImage?: Property.BorderImage;
MozColumnRule?: Property.ColumnRule<string | number>;
MozColumns?: Property.Columns<string | number>;
MozOutlineRadius?: Property.MozOutlineRadius<string | number>;
msContentZoomLimit?: Property.MsContentZoomLimit;
msContentZoomSnap?: Property.MsContentZoomSnap;
msFlex?: Property.Flex<string | number>;
msScrollLimit?: Property.MsScrollLimit;
msScrollSnapX?: Property.MsScrollSnapX;
msScrollSnapY?: Property.MsScrollSnapY;
msTransition?: Property.Transition<string & {}>;
WebkitAnimation?: Property.Animation<string & {}>;
WebkitBorderBefore?: Property.WebkitBorderBefore<string | number>;
WebkitBorderImage?: Property.BorderImage;
WebkitBorderRadius?: Property.BorderRadius<string | number>;
WebkitColumnRule?: Property.ColumnRule<string | number>;
WebkitColumns?: Property.Columns<string | number>;
WebkitFlex?: Property.Flex<string | number>;
WebkitFlexFlow?: Property.FlexFlow;
WebkitMask?: Property.WebkitMask<string | number>;
WebkitMaskBoxImage?: Property.MaskBorder;
WebkitTextEmphasis?: Property.TextEmphasis;
WebkitTextStroke?: Property.WebkitTextStroke<string | number>;
WebkitTransition?: Property.Transition<string & {}>;
azimuth?: Property.Azimuth;
boxAlign?: Property.BoxAlign;
boxDirection?: Property.BoxDirection;
boxFlex?: Property.BoxFlex;
boxFlexGroup?: Property.BoxFlexGroup;
boxLines?: Property.BoxLines;
boxOrdinalGroup?: Property.BoxOrdinalGroup;
boxOrient?: Property.BoxOrient;
boxPack?: Property.BoxPack;
clip?: Property.Clip;
gridColumnGap?: Property.GridColumnGap<string | number>;
gridGap?: Property.GridGap<string | number>;
gridRowGap?: Property.GridRowGap<string | number>;
imeMode?: Property.ImeMode;
offsetBlock?: Property.InsetBlock<string | number>;
offsetBlockEnd?: Property.InsetBlockEnd<string | number>;
offsetBlockStart?: Property.InsetBlockStart<string | number>;
offsetInline?: Property.InsetInline<string | number>;
offsetInlineEnd?: Property.InsetInlineEnd<string | number>;
offsetInlineStart?: Property.InsetInlineStart<string | number>;
scrollSnapCoordinate?: Property.ScrollSnapCoordinate<string | number>;
scrollSnapDestination?: Property.ScrollSnapDestination<string | number>;
scrollSnapPointsX?: Property.ScrollSnapPointsX;
scrollSnapPointsY?: Property.ScrollSnapPointsY;
scrollSnapTypeX?: Property.ScrollSnapTypeX;
scrollSnapTypeY?: Property.ScrollSnapTypeY;
KhtmlBoxAlign?: Property.BoxAlign;
KhtmlBoxDirection?: Property.BoxDirection;
KhtmlBoxFlex?: Property.BoxFlex;
KhtmlBoxFlexGroup?: Property.BoxFlexGroup;
KhtmlBoxLines?: Property.BoxLines;
KhtmlBoxOrdinalGroup?: Property.BoxOrdinalGroup;
KhtmlBoxOrient?: Property.BoxOrient;
KhtmlBoxPack?: Property.BoxPack;
KhtmlLineBreak?: Property.LineBreak;
KhtmlOpacity?: Property.Opacity;
KhtmlUserSelect?: Property.UserSelect;
MozBackfaceVisibility?: Property.BackfaceVisibility;
MozBackgroundClip?: Property.BackgroundClip;
MozBackgroundInlinePolicy?: Property.BoxDecorationBreak;
MozBackgroundOrigin?: Property.BackgroundOrigin;
MozBackgroundSize?: Property.BackgroundSize<string | number>;
MozBorderRadius?: Property.BorderRadius<string | number>;
MozBorderRadiusBottomleft?: Property.BorderBottomLeftRadius<string | number>;
MozBorderRadiusBottomright?: Property.BorderBottomRightRadius<string | number>;
MozBorderRadiusTopleft?: Property.BorderTopLeftRadius<string | number>;
MozBorderRadiusTopright?: Property.BorderTopRightRadius<string | number>;
MozBoxAlign?: Property.BoxAlign;
MozBoxDirection?: Property.BoxDirection;
MozBoxFlex?: Property.BoxFlex;
MozBoxOrdinalGroup?: Property.BoxOrdinalGroup;
MozBoxOrient?: Property.BoxOrient;
MozBoxPack?: Property.BoxPack;
MozBoxShadow?: Property.BoxShadow;
MozFloatEdge?: Property.MozFloatEdge;
MozForceBrokenImageIcon?: Property.MozForceBrokenImageIcon;
MozOpacity?: Property.Opacity;
MozOutline?: Property.Outline<string | number>;
MozOutlineColor?: Property.OutlineColor;
MozOutlineStyle?: Property.OutlineStyle;
MozOutlineWidth?: Property.OutlineWidth<string | number>;
MozPerspective?: Property.Perspective<string | number>;
MozPerspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
MozTextAlignLast?: Property.TextAlignLast;
MozTextDecorationColor?: Property.TextDecorationColor;
MozTextDecorationLine?: Property.TextDecorationLine;
MozTextDecorationStyle?: Property.TextDecorationStyle;
MozTransform?: Property.Transform;
MozTransformOrigin?: Property.TransformOrigin<string | number>;
MozTransformStyle?: Property.TransformStyle;
MozTransition?: Property.Transition<string & {}>;
MozTransitionDelay?: Property.TransitionDelay<string & {}>;
MozTransitionDuration?: Property.TransitionDuration<string & {}>;
MozTransitionProperty?: Property.TransitionProperty;
MozTransitionTimingFunction?: Property.TransitionTimingFunction;
MozUserInput?: Property.MozUserInput;
msImeMode?: Property.ImeMode;
OAnimation?: Property.Animation<string & {}>;
OAnimationDelay?: Property.AnimationDelay<string & {}>;
OAnimationDirection?: Property.AnimationDirection;
OAnimationDuration?: Property.AnimationDuration<string & {}>;
OAnimationFillMode?: Property.AnimationFillMode;
OAnimationIterationCount?: Property.AnimationIterationCount;
OAnimationName?: Property.AnimationName;
OAnimationPlayState?: Property.AnimationPlayState;
OAnimationTimingFunction?: Property.AnimationTimingFunction;
OBackgroundSize?: Property.BackgroundSize<string | number>;
OBorderImage?: Property.BorderImage;
OObjectFit?: Property.ObjectFit;
OObjectPosition?: Property.ObjectPosition<string | number>;
OTabSize?: Property.TabSize<string | number>;
OTextOverflow?: Property.TextOverflow;
OTransform?: Property.Transform;
OTransformOrigin?: Property.TransformOrigin<string | number>;
OTransition?: Property.Transition<string & {}>;
OTransitionDelay?: Property.TransitionDelay<string & {}>;
OTransitionDuration?: Property.TransitionDuration<string & {}>;
OTransitionProperty?: Property.TransitionProperty;
OTransitionTimingFunction?: Property.TransitionTimingFunction;
WebkitBoxAlign?: Property.BoxAlign;
WebkitBoxDirection?: Property.BoxDirection;
WebkitBoxFlex?: Property.BoxFlex;
WebkitBoxFlexGroup?: Property.BoxFlexGroup;
WebkitBoxLines?: Property.BoxLines;
WebkitBoxOrdinalGroup?: Property.BoxOrdinalGroup;
WebkitBoxOrient?: Property.BoxOrient;
WebkitBoxPack?: Property.BoxPack;
alignmentBaseline?: Property.AlignmentBaseline;
baselineShift?: Property.BaselineShift<string | number>;
clipRule?: Property.ClipRule;
colorInterpolation?: Property.ColorInterpolation;
colorRendering?: Property.ColorRendering;
dominantBaseline?: Property.DominantBaseline;
fill?: Property.Fill;
fillOpacity?: Property.FillOpacity;
fillRule?: Property.FillRule;
floodColor?: Property.FloodColor;
floodOpacity?: Property.FloodOpacity;
glyphOrientationVertical?: Property.GlyphOrientationVertical;
lightingColor?: Property.LightingColor;
marker?: Property.Marker;
markerEnd?: Property.MarkerEnd;
markerMid?: Property.MarkerMid;
markerStart?: Property.MarkerStart;
shapeRendering?: Property.ShapeRendering;
stopColor?: Property.StopColor;
stopOpacity?: Property.StopOpacity;
stroke?: Property.Stroke;
strokeDasharray?: Property.StrokeDasharray<string | number>;
strokeDashoffset?: Property.StrokeDashoffset<string | number>;
strokeLinecap?: Property.StrokeLinecap;
strokeLinejoin?: Property.StrokeLinejoin;
strokeMiterlimit?: Property.StrokeMiterlimit;
strokeOpacity?: Property.StrokeOpacity;
strokeWidth?: Property.StrokeWidth<string | number>;
textAnchor?: Property.TextAnchor;
vectorEffect?: Property.VectorEffect;
"accent-color"?: Property.AccentColor;
"align-content"?: Property.AlignContent;
"align-items"?: Property.AlignItems;
"align-self"?: Property.AlignSelf;
"align-tracks"?: Property.AlignTracks;
"animation-composition"?: Property.AnimationComposition;
"animation-delay"?: Property.AnimationDelay<string & {}>;
"animation-direction"?: Property.AnimationDirection;
"animation-duration"?: Property.AnimationDuration<string & {}>;
"animation-fill-mode"?: Property.AnimationFillMode;
"animation-iteration-count"?: Property.AnimationIterationCount;
"animation-name"?: Property.AnimationName;
"animation-play-state"?: Property.AnimationPlayState;
"animation-range-end"?: Property.AnimationRangeEnd<string | number>;
"animation-range-start"?: Property.AnimationRangeStart<string | number>;
"animation-timeline"?: Property.AnimationTimeline;
"animation-timing-function"?: Property.AnimationTimingFunction;
"aspect-ratio"?: Property.AspectRatio;
"backdrop-filter"?: Property.BackdropFilter;
"backface-visibility"?: Property.BackfaceVisibility;
"background-attachment"?: Property.BackgroundAttachment;
"background-blend-mode"?: Property.BackgroundBlendMode;
"background-clip"?: Property.BackgroundClip;
"background-color"?: Property.BackgroundColor;
"background-image"?: Property.BackgroundImage;
"background-origin"?: Property.BackgroundOrigin;
"background-position-x"?: Property.BackgroundPositionX<string | number>;
"background-position-y"?: Property.BackgroundPositionY<string | number>;
"background-repeat"?: Property.BackgroundRepeat;
"background-size"?: Property.BackgroundSize<string | number>;
"block-overflow"?: Property.BlockOverflow;
"block-size"?: Property.BlockSize<string | number>;
"border-block-color"?: Property.BorderBlockColor;
"border-block-end-color"?: Property.BorderBlockEndColor;
"border-block-end-style"?: Property.BorderBlockEndStyle;
"border-block-end-width"?: Property.BorderBlockEndWidth<string | number>;
"border-block-start-color"?: Property.BorderBlockStartColor;
"border-block-start-style"?: Property.BorderBlockStartStyle;
"border-block-start-width"?: Property.BorderBlockStartWidth<string | number>;
"border-block-style"?: Property.BorderBlockStyle;
"border-block-width"?: Property.BorderBlockWidth<string | number>;
"border-bottom-color"?: Property.BorderBottomColor;
"border-bottom-left-radius"?: Property.BorderBottomLeftRadius<string | number>;
"border-bottom-right-radius"?: Property.BorderBottomRightRadius<string | number>;
"border-bottom-style"?: Property.BorderBottomStyle;
"border-bottom-width"?: Property.BorderBottomWidth<string | number>;
"border-collapse"?: Property.BorderCollapse;
"border-end-end-radius"?: Property.BorderEndEndRadius<string | number>;
"border-end-start-radius"?: Property.BorderEndStartRadius<string | number>;
"border-image-outset"?: Property.BorderImageOutset<string | number>;
"border-image-repeat"?: Property.BorderImageRepeat;
"border-image-slice"?: Property.BorderImageSlice;
"border-image-source"?: Property.BorderImageSource;
"border-image-width"?: Property.BorderImageWidth<string | number>;
"border-inline-color"?: Property.BorderInlineColor;
"border-inline-end-color"?: Property.BorderInlineEndColor;
"border-inline-end-style"?: Property.BorderInlineEndStyle;
"border-inline-end-width"?: Property.BorderInlineEndWidth<string | number>;
"border-inline-start-color"?: Property.BorderInlineStartColor;
"border-inline-start-style"?: Property.BorderInlineStartStyle;
"border-inline-start-width"?: Property.BorderInlineStartWidth<string | number>;
"border-inline-style"?: Property.BorderInlineStyle;
"border-inline-width"?: Property.BorderInlineWidth<string | number>;
"border-left-color"?: Property.BorderLeftColor;
"border-left-style"?: Property.BorderLeftStyle;
"border-left-width"?: Property.BorderLeftWidth<string | number>;
"border-right-color"?: Property.BorderRightColor;
"border-right-style"?: Property.BorderRightStyle;
"border-right-width"?: Property.BorderRightWidth<string | number>;
"border-spacing"?: Property.BorderSpacing<string | number>;
"border-start-end-radius"?: Property.BorderStartEndRadius<string | number>;
"border-start-start-radius"?: Property.BorderStartStartRadius<string | number>;
"border-top-color"?: Property.BorderTopColor;
"border-top-left-radius"?: Property.BorderTopLeftRadius<string | number>;
"border-top-right-radius"?: Property.BorderTopRightRadius<string | number>;
"border-top-style"?: Property.BorderTopStyle;
"border-top-width"?: Property.BorderTopWidth<string | number>;
"box-decoration-break"?: Property.BoxDecorationBreak;
"box-shadow"?: Property.BoxShadow;
"box-sizing"?: Property.BoxSizing;
"break-after"?: Property.BreakAfter;
"break-before"?: Property.BreakBefore;
"break-inside"?: Property.BreakInside;
"caption-side"?: Property.CaptionSide;
"caret-color"?: Property.CaretColor;
"caret-shape"?: Property.CaretShape;
"clip-path"?: Property.ClipPath;
"color-adjust"?: Property.PrintColorAdjust;
"color-scheme"?: Property.ColorScheme;
"column-count"?: Property.ColumnCount;
"column-fill"?: Property.ColumnFill;
"column-gap"?: Property.ColumnGap<string | number>;
"column-rule-color"?: Property.ColumnRuleColor;
"column-rule-style"?: Property.ColumnRuleStyle;
"column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"column-span"?: Property.ColumnSpan;
"column-width"?: Property.ColumnWidth<string | number>;
"contain-intrinsic-block-size"?: Property.ContainIntrinsicBlockSize<string | number>;
"contain-intrinsic-height"?: Property.ContainIntrinsicHeight<string | number>;
"contain-intrinsic-inline-size"?: Property.ContainIntrinsicInlineSize<string | number>;
"contain-intrinsic-width"?: Property.ContainIntrinsicWidth<string | number>;
"container-name"?: Property.ContainerName;
"container-type"?: Property.ContainerType;
"content-visibility"?: Property.ContentVisibility;
"counter-increment"?: Property.CounterIncrement;
"counter-reset"?: Property.CounterReset;
"counter-set"?: Property.CounterSet;
"empty-cells"?: Property.EmptyCells;
"flex-basis"?: Property.FlexBasis<string | number>;
"flex-direction"?: Property.FlexDirection;
"flex-grow"?: Property.FlexGrow;
"flex-shrink"?: Property.FlexShrink;
"flex-wrap"?: Property.FlexWrap;
"font-family"?: Property.FontFamily;
"font-feature-settings"?: Property.FontFeatureSettings;
"font-kerning"?: Property.FontKerning;
"font-language-override"?: Property.FontLanguageOverride;
"font-optical-sizing"?: Property.FontOpticalSizing;
"font-palette"?: Property.FontPalette;
"font-size"?: Property.FontSize<string | number>;
"font-size-adjust"?: Property.FontSizeAdjust;
"font-smooth"?: Property.FontSmooth<string | number>;
"font-stretch"?: Property.FontStretch;
"font-style"?: Property.FontStyle;
"font-synthesis"?: Property.FontSynthesis;
"font-synthesis-position"?: Property.FontSynthesisPosition;
"font-synthesis-small-caps"?: Property.FontSynthesisSmallCaps;
"font-synthesis-style"?: Property.FontSynthesisStyle;
"font-synthesis-weight"?: Property.FontSynthesisWeight;
"font-variant"?: Property.FontVariant;
"font-variant-alternates"?: Property.FontVariantAlternates;
"font-variant-caps"?: Property.FontVariantCaps;
"font-variant-east-asian"?: Property.FontVariantEastAsian;
"font-variant-emoji"?: Property.FontVariantEmoji;
"font-variant-ligatures"?: Property.FontVariantLigatures;
"font-variant-numeric"?: Property.FontVariantNumeric;
"font-variant-position"?: Property.FontVariantPosition;
"font-variation-settings"?: Property.FontVariationSettings;
"font-weight"?: Property.FontWeight;
"forced-color-adjust"?: Property.ForcedColorAdjust;
"grid-auto-columns"?: Property.GridAutoColumns<string | number>;
"grid-auto-flow"?: Property.GridAutoFlow;
"grid-auto-rows"?: Property.GridAutoRows<string | number>;
"grid-column-end"?: Property.GridColumnEnd;
"grid-column-start"?: Property.GridColumnStart;
"grid-row-end"?: Property.GridRowEnd;
"grid-row-start"?: Property.GridRowStart;
"grid-template-areas"?: Property.GridTemplateAreas;
"grid-template-columns"?: Property.GridTemplateColumns<string | number>;
"grid-template-rows"?: Property.GridTemplateRows<string | number>;
"hanging-punctuation"?: Property.HangingPunctuation;
"hyphenate-character"?: Property.HyphenateCharacter;
"hyphenate-limit-chars"?: Property.HyphenateLimitChars;
"image-orientation"?: Property.ImageOrientation;
"image-rendering"?: Property.ImageRendering;
"image-resolution"?: Property.ImageResolution;
"initial-letter"?: Property.InitialLetter;
"inline-size"?: Property.InlineSize<string | number>;
"input-security"?: Property.InputSecurity;
"inset-block-end"?: Property.InsetBlockEnd<string | number>;
"inset-block-start"?: Property.InsetBlockStart<string | number>;
"inset-inline-end"?: Property.InsetInlineEnd<string | number>;
"inset-inline-start"?: Property.InsetInlineStart<string | number>;
"justify-content"?: Property.JustifyContent;
"justify-items"?: Property.JustifyItems;
"justify-self"?: Property.JustifySelf;
"justify-tracks"?: Property.JustifyTracks;
"letter-spacing"?: Property.LetterSpacing<string | number>;
"line-break"?: Property.LineBreak;
"line-height"?: Property.LineHeight<string | number>;
"line-height-step"?: Property.LineHeightStep<string | number>;
"list-style-image"?: Property.ListStyleImage;
"list-style-position"?: Property.ListStylePosition;
"list-style-type"?: Property.ListStyleType;
"margin-block-end"?: Property.MarginBlockEnd<string | number>;
"margin-block-start"?: Property.MarginBlockStart<string | number>;
"margin-bottom"?: Property.MarginBottom<string | number>;
"margin-inline-end"?: Property.MarginInlineEnd<string | number>;
"margin-inline-start"?: Property.MarginInlineStart<string | number>;
"margin-left"?: Property.MarginLeft<string | number>;
"margin-right"?: Property.MarginRight<string | number>;
"margin-top"?: Property.MarginTop<string | number>;
"margin-trim"?: Property.MarginTrim;
"mask-border-mode"?: Property.MaskBorderMode;
"mask-border-outset"?: Property.MaskBorderOutset<string | number>;
"mask-border-repeat"?: Property.MaskBorderRepeat;
"mask-border-slice"?: Property.MaskBorderSlice;
"mask-border-source"?: Property.MaskBorderSource;
"mask-border-width"?: Property.MaskBorderWidth<string | number>;
"mask-clip"?: Property.MaskClip;
"mask-composite"?: Property.MaskComposite;
"mask-image"?: Property.MaskImage;
"mask-mode"?: Property.MaskMode;
"mask-origin"?: Property.MaskOrigin;
"mask-position"?: Property.MaskPosition<string | number>;
"mask-repeat"?: Property.MaskRepeat;
"mask-size"?: Property.MaskSize<string | number>;
"mask-type"?: Property.MaskType;
"masonry-auto-flow"?: Property.MasonryAutoFlow;
"math-depth"?: Property.MathDepth;
"math-shift"?: Property.MathShift;
"math-style"?: Property.MathStyle;
"max-block-size"?: Property.MaxBlockSize<string | number>;
"max-height"?: Property.MaxHeight<string | number>;
"max-inline-size"?: Property.MaxInlineSize<string | number>;
"max-lines"?: Property.MaxLines;
"max-width"?: Property.MaxWidth<string | number>;
"min-block-size"?: Property.MinBlockSize<string | number>;
"min-height"?: Property.MinHeight<string | number>;
"min-inline-size"?: Property.MinInlineSize<string | number>;
"min-width"?: Property.MinWidth<string | number>;
"mix-blend-mode"?: Property.MixBlendMode;
"motion-distance"?: Property.OffsetDistance<string | number>;
"motion-path"?: Property.OffsetPath;
"motion-rotation"?: Property.OffsetRotate;
"object-fit"?: Property.ObjectFit;
"object-position"?: Property.ObjectPosition<string | number>;
"offset-anchor"?: Property.OffsetAnchor<string | number>;
"offset-distance"?: Property.OffsetDistance<string | number>;
"offset-path"?: Property.OffsetPath;
"offset-position"?: Property.OffsetPosition<string | number>;
"offset-rotate"?: Property.OffsetRotate;
"offset-rotation"?: Property.OffsetRotate;
"outline-color"?: Property.OutlineColor;
"outline-offset"?: Property.OutlineOffset<string | number>;
"outline-style"?: Property.OutlineStyle;
"outline-width"?: Property.OutlineWidth<string | number>;
"overflow-anchor"?: Property.OverflowAnchor;
"overflow-block"?: Property.OverflowBlock;
"overflow-clip-box"?: Property.OverflowClipBox;
"overflow-clip-margin"?: Property.OverflowClipMargin<string | number>;
"overflow-inline"?: Property.OverflowInline;
"overflow-wrap"?: Property.OverflowWrap;
"overflow-x"?: Property.OverflowX;
"overflow-y"?: Property.OverflowY;
"overscroll-behavior-block"?: Property.OverscrollBehaviorBlock;
"overscroll-behavior-inline"?: Property.OverscrollBehaviorInline;
"overscroll-behavior-x"?: Property.OverscrollBehaviorX;
"overscroll-behavior-y"?: Property.OverscrollBehaviorY;
"padding-block-end"?: Property.PaddingBlockEnd<string | number>;
"padding-block-start"?: Property.PaddingBlockStart<string | number>;
"padding-bottom"?: Property.PaddingBottom<string | number>;
"padding-inline-end"?: Property.PaddingInlineEnd<string | number>;
"padding-inline-start"?: Property.PaddingInlineStart<string | number>;
"padding-left"?: Property.PaddingLeft<string | number>;
"padding-right"?: Property.PaddingRight<string | number>;
"padding-top"?: Property.PaddingTop<string | number>;
"page-break-after"?: Property.PageBreakAfter;
"page-break-before"?: Property.PageBreakBefore;
"page-break-inside"?: Property.PageBreakInside;
"paint-order"?: Property.PaintOrder;
"perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"pointer-events"?: Property.PointerEvents;
"print-color-adjust"?: Property.PrintColorAdjust;
"row-gap"?: Property.RowGap<string | number>;
"ruby-align"?: Property.RubyAlign;
"ruby-merge"?: Property.RubyMerge;
"ruby-position"?: Property.RubyPosition;
"scroll-behavior"?: Property.ScrollBehavior;
"scroll-margin-block-end"?: Property.ScrollMarginBlockEnd<string | number>;
"scroll-margin-block-start"?: Property.ScrollMarginBlockStart<string | number>;
"scroll-margin-bottom"?: Property.ScrollMarginBottom<string | number>;
"scroll-margin-inline-end"?: Property.ScrollMarginInlineEnd<string | number>;
"scroll-margin-inline-start"?: Property.ScrollMarginInlineStart<string | number>;
"scroll-margin-left"?: Property.ScrollMarginLeft<string | number>;
"scroll-margin-right"?: Property.ScrollMarginRight<string | number>;
"scroll-margin-top"?: Property.ScrollMarginTop<string | number>;
"scroll-padding-block-end"?: Property.ScrollPaddingBlockEnd<string | number>;
"scroll-padding-block-start"?: Property.ScrollPaddingBlockStart<string | number>;
"scroll-padding-bottom"?: Property.ScrollPaddingBottom<string | number>;
"scroll-padding-inline-end"?: Property.ScrollPaddingInlineEnd<string | number>;
"scroll-padding-inline-start"?: Property.ScrollPaddingInlineStart<string | number>;
"scroll-padding-left"?: Property.ScrollPaddingLeft<string | number>;
"scroll-padding-right"?: Property.ScrollPaddingRight<string | number>;
"scroll-padding-top"?: Property.ScrollPaddingTop<string | number>;
"scroll-snap-align"?: Property.ScrollSnapAlign;
"scroll-snap-margin-bottom"?: Property.ScrollMarginBottom<string | number>;
"scroll-snap-margin-left"?: Property.ScrollMarginLeft<string | number>;
"scroll-snap-margin-right"?: Property.ScrollMarginRight<string | number>;
"scroll-snap-margin-top"?: Property.ScrollMarginTop<string | number>;
"scroll-snap-stop"?: Property.ScrollSnapStop;
"scroll-snap-type"?: Property.ScrollSnapType;
"scroll-timeline-axis"?: Property.ScrollTimelineAxis;
"scroll-timeline-name"?: Property.ScrollTimelineName;
"scrollbar-color"?: Property.ScrollbarColor;
"scrollbar-gutter"?: Property.ScrollbarGutter;
"scrollbar-width"?: Property.ScrollbarWidth;
"shape-image-threshold"?: Property.ShapeImageThreshold;
"shape-margin"?: Property.ShapeMargin<string | number>;
"shape-outside"?: Property.ShapeOutside;
"tab-size"?: Property.TabSize<string | number>;
"table-layout"?: Property.TableLayout;
"text-align"?: Property.TextAlign;
"text-align-last"?: Property.TextAlignLast;
"text-combine-upright"?: Property.TextCombineUpright;
"text-decoration-color"?: Property.TextDecorationColor;
"text-decoration-line"?: Property.TextDecorationLine;
"text-decoration-skip"?: Property.TextDecorationSkip;
"text-decoration-skip-ink"?: Property.TextDecorationSkipInk;
"text-decoration-style"?: Property.TextDecorationStyle;
"text-decoration-thickness"?: Property.TextDecorationThickness<string | number>;
"text-emphasis-color"?: Property.TextEmphasisColor;
"text-emphasis-position"?: Property.TextEmphasisPosition;
"text-emphasis-style"?: Property.TextEmphasisStyle;
"text-indent"?: Property.TextIndent<string | number>;
"text-justify"?: Property.TextJustify;
"text-orientation"?: Property.TextOrientation;
"text-overflow"?: Property.TextOverflow;
"text-rendering"?: Property.TextRendering;
"text-shadow"?: Property.TextShadow;
"text-size-adjust"?: Property.TextSizeAdjust;
"text-transform"?: Property.TextTransform;
"text-underline-offset"?: Property.TextUnderlineOffset<string | number>;
"text-underline-position"?: Property.TextUnderlinePosition;
"text-wrap"?: Property.TextWrap;
"timeline-scope"?: Property.TimelineScope;
"touch-action"?: Property.TouchAction;
"transform-box"?: Property.TransformBox;
"transform-origin"?: Property.TransformOrigin<string | number>;
"transform-style"?: Property.TransformStyle;
"transition-behavior"?: Property.TransitionBehavior;
"transition-delay"?: Property.TransitionDelay<string & {}>;
"transition-duration"?: Property.TransitionDuration<string & {}>;
"transition-property"?: Property.TransitionProperty;
"transition-timing-function"?: Property.TransitionTimingFunction;
"unicode-bidi"?: Property.UnicodeBidi;
"user-select"?: Property.UserSelect;
"vertical-align"?: Property.VerticalAlign<string | number>;
"view-timeline-axis"?: Property.ViewTimelineAxis;
"view-timeline-inset"?: Property.ViewTimelineInset<string | number>;
"view-timeline-name"?: Property.ViewTimelineName;
"view-transition-name"?: Property.ViewTransitionName;
"white-space"?: Property.WhiteSpace;
"white-space-collapse"?: Property.WhiteSpaceCollapse;
"white-space-trim"?: Property.WhiteSpaceTrim;
"will-change"?: Property.WillChange;
"word-break"?: Property.WordBreak;
"word-spacing"?: Property.WordSpacing<string | number>;
"word-wrap"?: Property.WordWrap;
"writing-mode"?: Property.WritingMode;
"z-index"?: Property.ZIndex;
"animation-range"?: Property.AnimationRange<string | number>;
"background-position"?: Property.BackgroundPosition<string | number>;
"border-block"?: Property.BorderBlock<string | number>;
"border-block-end"?: Property.BorderBlockEnd<string | number>;
"border-block-start"?: Property.BorderBlockStart<string | number>;
"border-bottom"?: Property.BorderBottom<string | number>;
"border-color"?: Property.BorderColor;
"border-image"?: Property.BorderImage;
"border-inline"?: Property.BorderInline<string | number>;
"border-inline-end"?: Property.BorderInlineEnd<string | number>;
"border-inline-start"?: Property.BorderInlineStart<string | number>;
"border-left"?: Property.BorderLeft<string | number>;
"border-radius"?: Property.BorderRadius<string | number>;
"border-right"?: Property.BorderRight<string | number>;
"border-style"?: Property.BorderStyle;
"border-top"?: Property.BorderTop<string | number>;
"border-width"?: Property.BorderWidth<string | number>;
"column-rule"?: Property.ColumnRule<string | number>;
"contain-intrinsic-size"?: Property.ContainIntrinsicSize<string | number>;
"flex-flow"?: Property.FlexFlow;
"grid-area"?: Property.GridArea;
"grid-column"?: Property.GridColumn;
"grid-row"?: Property.GridRow;
"grid-template"?: Property.GridTemplate;
"inset-block"?: Property.InsetBlock<string | number>;
"inset-inline"?: Property.InsetInline<string | number>;
"line-clamp"?: Property.LineClamp;
"list-style"?: Property.ListStyle;
"margin-block"?: Property.MarginBlock<string | number>;
"margin-inline"?: Property.MarginInline<string | number>;
"mask-border"?: Property.MaskBorder;
"overscroll-behavior"?: Property.OverscrollBehavior;
"padding-block"?: Property.PaddingBlock<string | number>;
"padding-inline"?: Property.PaddingInline<string | number>;
"place-content"?: Property.PlaceContent;
"place-items"?: Property.PlaceItems;
"place-self"?: Property.PlaceSelf;
"scroll-margin"?: Property.ScrollMargin<string | number>;
"scroll-margin-block"?: Property.ScrollMarginBlock<string | number>;
"scroll-margin-inline"?: Property.ScrollMarginInline<string | number>;
"scroll-padding"?: Property.ScrollPadding<string | number>;
"scroll-padding-block"?: Property.ScrollPaddingBlock<string | number>;
"scroll-padding-inline"?: Property.ScrollPaddingInline<string | number>;
"scroll-snap-margin"?: Property.ScrollMargin<string | number>;
"scroll-timeline"?: Property.ScrollTimeline;
"text-decoration"?: Property.TextDecoration<string | number>;
"text-emphasis"?: Property.TextEmphasis;
"view-timeline"?: Property.ViewTimeline;
"-moz-animation-delay"?: Property.AnimationDelay<string & {}>;
"-moz-animation-direction"?: Property.AnimationDirection;
"-moz-animation-duration"?: Property.AnimationDuration<string & {}>;
"-moz-animation-fill-mode"?: Property.AnimationFillMode;
"-moz-animation-iteration-count"?: Property.AnimationIterationCount;
"-moz-animation-name"?: Property.AnimationName;
"-moz-animation-play-state"?: Property.AnimationPlayState;
"-moz-animation-timing-function"?: Property.AnimationTimingFunction;
"-moz-appearance"?: Property.MozAppearance;
"-moz-binding"?: Property.MozBinding;
"-moz-border-bottom-colors"?: Property.MozBorderBottomColors;
"-moz-border-end-color"?: Property.BorderInlineEndColor;
"-moz-border-end-style"?: Property.BorderInlineEndStyle;
"-moz-border-end-width"?: Property.BorderInlineEndWidth<string | number>;
"-moz-border-left-colors"?: Property.MozBorderLeftColors;
"-moz-border-right-colors"?: Property.MozBorderRightColors;
"-moz-border-start-color"?: Property.BorderInlineStartColor;
"-moz-border-start-style"?: Property.BorderInlineStartStyle;
"-moz-border-top-colors"?: Property.MozBorderTopColors;
"-moz-box-sizing"?: Property.BoxSizing;
"-moz-column-count"?: Property.ColumnCount;
"-moz-column-fill"?: Property.ColumnFill;
"-moz-column-rule-color"?: Property.ColumnRuleColor;
"-moz-column-rule-style"?: Property.ColumnRuleStyle;
"-moz-column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"-moz-column-width"?: Property.ColumnWidth<string | number>;
"-moz-context-properties"?: Property.MozContextProperties;
"-moz-font-feature-settings"?: Property.FontFeatureSettings;
"-moz-font-language-override"?: Property.FontLanguageOverride;
"-moz-hyphens"?: Property.Hyphens;
"-moz-image-region"?: Property.MozImageRegion;
"-moz-margin-end"?: Property.MarginInlineEnd<string | number>;
"-moz-margin-start"?: Property.MarginInlineStart<string | number>;
"-moz-orient"?: Property.MozOrient;
"-moz-osx-font-smoothing"?: Property.FontSmooth<string | number>;
"-moz-outline-radius-bottomleft"?: Property.MozOutlineRadiusBottomleft<string | number>;
"-moz-outline-radius-bottomright"?: Property.MozOutlineRadiusBottomright<string | number>;
"-moz-outline-radius-topleft"?: Property.MozOutlineRadiusTopleft<string | number>;
"-moz-outline-radius-topright"?: Property.MozOutlineRadiusTopright<string | number>;
"-moz-padding-end"?: Property.PaddingInlineEnd<string | number>;
"-moz-padding-start"?: Property.PaddingInlineStart<string | number>;
"-moz-stack-sizing"?: Property.MozStackSizing;
"-moz-tab-size"?: Property.TabSize<string | number>;
"-moz-text-blink"?: Property.MozTextBlink;
"-moz-text-size-adjust"?: Property.TextSizeAdjust;
"-moz-user-focus"?: Property.MozUserFocus;
"-moz-user-modify"?: Property.MozUserModify;
"-moz-user-select"?: Property.UserSelect;
"-moz-window-dragging"?: Property.MozWindowDragging;
"-moz-window-shadow"?: Property.MozWindowShadow;
"-ms-accelerator"?: Property.MsAccelerator;
"-ms-block-progression"?: Property.MsBlockProgression;
"-ms-content-zoom-chaining"?: Property.MsContentZoomChaining;
"-ms-content-zoom-limit-max"?: Property.MsContentZoomLimitMax;
"-ms-content-zoom-limit-min"?: Property.MsContentZoomLimitMin;
"-ms-content-zoom-snap-points"?: Property.MsContentZoomSnapPoints;
"-ms-content-zoom-snap-type"?: Property.MsContentZoomSnapType;
"-ms-content-zooming"?: Property.MsContentZooming;
"-ms-filter"?: Property.MsFilter;
"-ms-flex-direction"?: Property.FlexDirection;
"-ms-flex-positive"?: Property.FlexGrow;
"-ms-flow-from"?: Property.MsFlowFrom;
"-ms-flow-into"?: Property.MsFlowInto;
"-ms-grid-columns"?: Property.MsGridColumns<string | number>;
"-ms-grid-rows"?: Property.MsGridRows<string | number>;
"-ms-high-contrast-adjust"?: Property.MsHighContrastAdjust;
"-ms-hyphenate-limit-chars"?: Property.MsHyphenateLimitChars;
"-ms-hyphenate-limit-lines"?: Property.MsHyphenateLimitLines;
"-ms-hyphenate-limit-zone"?: Property.MsHyphenateLimitZone<string | number>;
"-ms-hyphens"?: Property.Hyphens;
"-ms-ime-align"?: Property.MsImeAlign;
"-ms-line-break"?: Property.LineBreak;
"-ms-order"?: Property.Order;
"-ms-overflow-style"?: Property.MsOverflowStyle;
"-ms-overflow-x"?: Property.OverflowX;
"-ms-overflow-y"?: Property.OverflowY;
"-ms-scroll-chaining"?: Property.MsScrollChaining;
"-ms-scroll-limit-x-max"?: Property.MsScrollLimitXMax<string | number>;
"-ms-scroll-limit-x-min"?: Property.MsScrollLimitXMin<string | number>;
"-ms-scroll-limit-y-max"?: Property.MsScrollLimitYMax<string | number>;
"-ms-scroll-limit-y-min"?: Property.MsScrollLimitYMin<string | number>;
"-ms-scroll-rails"?: Property.MsScrollRails;
"-ms-scroll-snap-points-x"?: Property.MsScrollSnapPointsX;
"-ms-scroll-snap-points-y"?: Property.MsScrollSnapPointsY;
"-ms-scroll-snap-type"?: Property.MsScrollSnapType;
"-ms-scroll-translation"?: Property.MsScrollTranslation;
"-ms-scrollbar-3dlight-color"?: Property.MsScrollbar3dlightColor;
"-ms-scrollbar-arrow-color"?: Property.MsScrollbarArrowColor;
"-ms-scrollbar-base-color"?: Property.MsScrollbarBaseColor;
"-ms-scrollbar-darkshadow-color"?: Property.MsScrollbarDarkshadowColor;
"-ms-scrollbar-face-color"?: Property.MsScrollbarFaceColor;
"-ms-scrollbar-highlight-color"?: Property.MsScrollbarHighlightColor;
"-ms-scrollbar-shadow-color"?: Property.MsScrollbarShadowColor;
"-ms-scrollbar-track-color"?: Property.MsScrollbarTrackColor;
"-ms-text-autospace"?: Property.MsTextAutospace;
"-ms-text-combine-horizontal"?: Property.TextCombineUpright;
"-ms-text-overflow"?: Property.TextOverflow;
"-ms-touch-action"?: Property.TouchAction;
"-ms-touch-select"?: Property.MsTouchSelect;
"-ms-transform"?: Property.Transform;
"-ms-transform-origin"?: Property.TransformOrigin<string | number>;
"-ms-transition-delay"?: Property.TransitionDelay<string & {}>;
"-ms-transition-duration"?: Property.TransitionDuration<string & {}>;
"-ms-transition-property"?: Property.TransitionProperty;
"-ms-transition-timing-function"?: Property.TransitionTimingFunction;
"-ms-user-select"?: Property.MsUserSelect;
"-ms-word-break"?: Property.WordBreak;
"-ms-wrap-flow"?: Property.MsWrapFlow;
"-ms-wrap-margin"?: Property.MsWrapMargin<string | number>;
"-ms-wrap-through"?: Property.MsWrapThrough;
"-ms-writing-mode"?: Property.WritingMode;
"-webkit-align-content"?: Property.AlignContent;
"-webkit-align-items"?: Property.AlignItems;
"-webkit-align-self"?: Property.AlignSelf;
"-webkit-animation-delay"?: Property.AnimationDelay<string & {}>;
"-webkit-animation-direction"?: Property.AnimationDirection;
"-webkit-animation-duration"?: Property.AnimationDuration<string & {}>;
"-webkit-animation-fill-mode"?: Property.AnimationFillMode;
"-webkit-animation-iteration-count"?: Property.AnimationIterationCount;
"-webkit-animation-name"?: Property.AnimationName;
"-webkit-animation-play-state"?: Property.AnimationPlayState;
"-webkit-animation-timing-function"?: Property.AnimationTimingFunction;
"-webkit-appearance"?: Property.WebkitAppearance;
"-webkit-backdrop-filter"?: Property.BackdropFilter;
"-webkit-backface-visibility"?: Property.BackfaceVisibility;
"-webkit-background-clip"?: Property.BackgroundClip;
"-webkit-background-origin"?: Property.BackgroundOrigin;
"-webkit-background-size"?: Property.BackgroundSize<string | number>;
"-webkit-border-before-color"?: Property.WebkitBorderBeforeColor;
"-webkit-border-before-style"?: Property.WebkitBorderBeforeStyle;
"-webkit-border-before-width"?: Property.WebkitBorderBeforeWidth<string | number>;
"-webkit-border-bottom-left-radius"?: Property.BorderBottomLeftRadius<string | number>;
"-webkit-border-bottom-right-radius"?: Property.BorderBottomRightRadius<string | number>;
"-webkit-border-image-slice"?: Property.BorderImageSlice;
"-webkit-border-top-left-radius"?: Property.BorderTopLeftRadius<string | number>;
"-webkit-border-top-right-radius"?: Property.BorderTopRightRadius<string | number>;
"-webkit-box-decoration-break"?: Property.BoxDecorationBreak;
"-webkit-box-reflect"?: Property.WebkitBoxReflect<string | number>;
"-webkit-box-shadow"?: Property.BoxShadow;
"-webkit-box-sizing"?: Property.BoxSizing;
"-webkit-clip-path"?: Property.ClipPath;
"-webkit-column-count"?: Property.ColumnCount;
"-webkit-column-fill"?: Property.ColumnFill;
"-webkit-column-rule-color"?: Property.ColumnRuleColor;
"-webkit-column-rule-style"?: Property.ColumnRuleStyle;
"-webkit-column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"-webkit-column-span"?: Property.ColumnSpan;
"-webkit-column-width"?: Property.ColumnWidth<string | number>;
"-webkit-filter"?: Property.Filter;
"-webkit-flex-basis"?: Property.FlexBasis<string | number>;
"-webkit-flex-direction"?: Property.FlexDirection;
"-webkit-flex-grow"?: Property.FlexGrow;
"-webkit-flex-shrink"?: Property.FlexShrink;
"-webkit-flex-wrap"?: Property.FlexWrap;
"-webkit-font-feature-settings"?: Property.FontFeatureSettings;
"-webkit-font-kerning"?: Property.FontKerning;
"-webkit-font-smoothing"?: Property.FontSmooth<string | number>;
"-webkit-font-variant-ligatures"?: Property.FontVariantLigatures;
"-webkit-hyphenate-character"?: Property.HyphenateCharacter;
"-webkit-hyphens"?: Property.Hyphens;
"-webkit-initial-letter"?: Property.InitialLetter;
"-webkit-justify-content"?: Property.JustifyContent;
"-webkit-line-break"?: Property.LineBreak;
"-webkit-line-clamp"?: Property.WebkitLineClamp;
"-webkit-margin-end"?: Property.MarginInlineEnd<string | number>;
"-webkit-margin-start"?: Property.MarginInlineStart<string | number>;
"-webkit-mask-attachment"?: Property.WebkitMaskAttachment;
"-webkit-mask-box-image-outset"?: Property.MaskBorderOutset<string | number>;
"-webkit-mask-box-image-repeat"?: Property.MaskBorderRepeat;
"-webkit-mask-box-image-slice"?: Property.MaskBorderSlice;
"-webkit-mask-box-image-source"?: Property.MaskBorderSource;
"-webkit-mask-box-image-width"?: Property.MaskBorderWidth<string | number>;
"-webkit-mask-clip"?: Property.WebkitMaskClip;
"-webkit-mask-composite"?: Property.WebkitMaskComposite;
"-webkit-mask-image"?: Property.WebkitMaskImage;
"-webkit-mask-origin"?: Property.WebkitMaskOrigin;
"-webkit-mask-position"?: Property.WebkitMaskPosition<string | number>;
"-webkit-mask-position-x"?: Property.WebkitMaskPositionX<string | number>;
"-webkit-mask-position-y"?: Property.WebkitMaskPositionY<string | number>;
"-webkit-mask-repeat"?: Property.WebkitMaskRepeat;
"-webkit-mask-repeat-x"?: Property.WebkitMaskRepeatX;
"-webkit-mask-repeat-y"?: Property.WebkitMaskRepeatY;
"-webkit-mask-size"?: Property.WebkitMaskSize<string | number>;
"-webkit-max-inline-size"?: Property.MaxInlineSize<string | number>;
"-webkit-order"?: Property.Order;
"-webkit-overflow-scrolling"?: Property.WebkitOverflowScrolling;
"-webkit-padding-end"?: Property.PaddingInlineEnd<string | number>;
"-webkit-padding-start"?: Property.PaddingInlineStart<string | number>;
"-webkit-perspective"?: Property.Perspective<string | number>;
"-webkit-perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"-webkit-print-color-adjust"?: Property.PrintColorAdjust;
"-webkit-ruby-position"?: Property.RubyPosition;
"-webkit-scroll-snap-type"?: Property.ScrollSnapType;
"-webkit-shape-margin"?: Property.ShapeMargin<string | number>;
"-webkit-tap-highlight-color"?: Property.WebkitTapHighlightColor;
"-webkit-text-combine"?: Property.TextCombineUpright;
"-webkit-text-decoration-color"?: Property.TextDecorationColor;
"-webkit-text-decoration-line"?: Property.TextDecorationLine;
"-webkit-text-decoration-skip"?: Property.TextDecorationSkip;
"-webkit-text-decoration-style"?: Property.TextDecorationStyle;
"-webkit-text-emphasis-color"?: Property.TextEmphasisColor;
"-webkit-text-emphasis-position"?: Property.TextEmphasisPosition;
"-webkit-text-emphasis-style"?: Property.TextEmphasisStyle;
"-webkit-text-fill-color"?: Property.WebkitTextFillColor;
"-webkit-text-orientation"?: Property.TextOrientation;
"-webkit-text-size-adjust"?: Property.TextSizeAdjust;
"-webkit-text-stroke-color"?: Property.WebkitTextStrokeColor;
"-webkit-text-stroke-width"?: Property.WebkitTextStrokeWidth<string | number>;
"-webkit-text-underline-position"?: Property.TextUnderlinePosition;
"-webkit-touch-callout"?: Property.WebkitTouchCallout;
"-webkit-transform"?: Property.Transform;
"-webkit-transform-origin"?: Property.TransformOrigin<string | number>;
"-webkit-transform-style"?: Property.TransformStyle;
"-webkit-transition-delay"?: Property.TransitionDelay<string & {}>;
"-webkit-transition-duration"?: Property.TransitionDuration<string & {}>;
"-webkit-transition-property"?: Property.TransitionProperty;
"-webkit-transition-timing-function"?: Property.TransitionTimingFunction;
"-webkit-user-modify"?: Property.WebkitUserModify;
"-webkit-user-select"?: Property.UserSelect;
"-webkit-writing-mode"?: Property.WritingMode;
"-moz-animation"?: Property.Animation<string & {}>;
"-moz-border-image"?: Property.BorderImage;
"-moz-column-rule"?: Property.ColumnRule<string | number>;
"-moz-columns"?: Property.Columns<string | number>;
"-moz-outline-radius"?: Property.MozOutlineRadius<string | number>;
"-ms-content-zoom-limit"?: Property.MsContentZoomLimit;
"-ms-content-zoom-snap"?: Property.MsContentZoomSnap;
"-ms-flex"?: Property.Flex<string | number>;
"-ms-scroll-limit"?: Property.MsScrollLimit;
"-ms-scroll-snap-x"?: Property.MsScrollSnapX;
"-ms-scroll-snap-y"?: Property.MsScrollSnapY;
"-ms-transition"?: Property.Transition<string & {}>;
"-webkit-animation"?: Property.Animation<string & {}>;
"-webkit-border-before"?: Property.WebkitBorderBefore<string | number>;
"-webkit-border-image"?: Property.BorderImage;
"-webkit-border-radius"?: Property.BorderRadius<string | number>;
"-webkit-column-rule"?: Property.ColumnRule<string | number>;
"-webkit-columns"?: Property.Columns<string | number>;
"-webkit-flex"?: Property.Flex<string | number>;
"-webkit-flex-flow"?: Property.FlexFlow;
"-webkit-mask"?: Property.WebkitMask<string | number>;
"-webkit-mask-box-image"?: Property.MaskBorder;
"-webkit-text-emphasis"?: Property.TextEmphasis;
"-webkit-text-stroke"?: Property.WebkitTextStroke<string | number>;
"-webkit-transition"?: Property.Transition<string & {}>;
"box-align"?: Property.BoxAlign;
"box-direction"?: Property.BoxDirection;
"box-flex"?: Property.BoxFlex;
"box-flex-group"?: Property.BoxFlexGroup;
"box-lines"?: Property.BoxLines;
"box-ordinal-group"?: Property.BoxOrdinalGroup;
"box-orient"?: Property.BoxOrient;
"box-pack"?: Property.BoxPack;
"grid-column-gap"?: Property.GridColumnGap<string | number>;
"grid-gap"?: Property.GridGap<string | number>;
"grid-row-gap"?: Property.GridRowGap<string | number>;
"ime-mode"?: Property.ImeMode;
"offset-block"?: Property.InsetBlock<string | number>;
"offset-block-end"?: Property.InsetBlockEnd<string | number>;
"offset-block-start"?: Property.InsetBlockStart<string | number>;
"offset-inline"?: Property.InsetInline<string | number>;
"offset-inline-end"?: Property.InsetInlineEnd<string | number>;
"offset-inline-start"?: Property.InsetInlineStart<string | number>;
"scroll-snap-coordinate"?: Property.ScrollSnapCoordinate<string | number>;
"scroll-snap-destination"?: Property.ScrollSnapDestination<string | number>;
"scroll-snap-points-x"?: Property.ScrollSnapPointsX;
"scroll-snap-points-y"?: Property.ScrollSnapPointsY;
"scroll-snap-type-x"?: Property.ScrollSnapTypeX;
"scroll-snap-type-y"?: Property.ScrollSnapTypeY;
"-khtml-box-align"?: Property.BoxAlign;
"-khtml-box-direction"?: Property.BoxDirection;
"-khtml-box-flex"?: Property.BoxFlex;
"-khtml-box-flex-group"?: Property.BoxFlexGroup;
"-khtml-box-lines"?: Property.BoxLines;
"-khtml-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-khtml-box-orient"?: Property.BoxOrient;
"-khtml-box-pack"?: Property.BoxPack;
"-khtml-line-break"?: Property.LineBreak;
"-khtml-opacity"?: Property.Opacity;
"-khtml-user-select"?: Property.UserSelect;
"-moz-backface-visibility"?: Property.BackfaceVisibility;
"-moz-background-clip"?: Property.BackgroundClip;
"-moz-background-inline-policy"?: Property.BoxDecorationBreak;
"-moz-background-origin"?: Property.BackgroundOrigin;
"-moz-background-size"?: Property.BackgroundSize<string | number>;
"-moz-border-radius"?: Property.BorderRadius<string | number>;
"-moz-border-radius-bottomleft"?: Property.BorderBottomLeftRadius<string | number>;
"-moz-border-radius-bottomright"?: Property.BorderBottomRightRadius<string | number>;
"-moz-border-radius-topleft"?: Property.BorderTopLeftRadius<string | number>;
"-moz-border-radius-topright"?: Property.BorderTopRightRadius<string | number>;
"-moz-box-align"?: Property.BoxAlign;
"-moz-box-direction"?: Property.BoxDirection;
"-moz-box-flex"?: Property.BoxFlex;
"-moz-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-moz-box-orient"?: Property.BoxOrient;
"-moz-box-pack"?: Property.BoxPack;
"-moz-box-shadow"?: Property.BoxShadow;
"-moz-float-edge"?: Property.MozFloatEdge;
"-moz-force-broken-image-icon"?: Property.MozForceBrokenImageIcon;
"-moz-opacity"?: Property.Opacity;
"-moz-outline"?: Property.Outline<string | number>;
"-moz-outline-color"?: Property.OutlineColor;
"-moz-outline-style"?: Property.OutlineStyle;
"-moz-outline-width"?: Property.OutlineWidth<string | number>;
"-moz-perspective"?: Property.Perspective<string | number>;
"-moz-perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"-moz-text-align-last"?: Property.TextAlignLast;
"-moz-text-decoration-color"?: Property.TextDecorationColor;
"-moz-text-decoration-line"?: Property.TextDecorationLine;
"-moz-text-decoration-style"?: Property.TextDecorationStyle;
"-moz-transform"?: Property.Transform;
"-moz-transform-origin"?: Property.TransformOrigin<string | number>;
"-moz-transform-style"?: Property.TransformStyle;
"-moz-transition"?: Property.Transition<string & {}>;
"-moz-transition-delay"?: Property.TransitionDelay<string & {}>;
"-moz-transition-duration"?: Property.TransitionDuration<string & {}>;
"-moz-transition-property"?: Property.TransitionProperty;
"-moz-transition-timing-function"?: Property.TransitionTimingFunction;
"-moz-user-input"?: Property.MozUserInput;
"-ms-ime-mode"?: Property.ImeMode;
"-o-animation"?: Property.Animation<string & {}>;
"-o-animation-delay"?: Property.AnimationDelay<string & {}>;
"-o-animation-direction"?: Property.AnimationDirection;
"-o-animation-duration"?: Property.AnimationDuration<string & {}>;
"-o-animation-fill-mode"?: Property.AnimationFillMode;
"-o-animation-iteration-count"?: Property.AnimationIterationCount;
"-o-animation-name"?: Property.AnimationName;
"-o-animation-play-state"?: Property.AnimationPlayState;
"-o-animation-timing-function"?: Property.AnimationTimingFunction;
"-o-background-size"?: Property.BackgroundSize<string | number>;
"-o-border-image"?: Property.BorderImage;
"-o-object-fit"?: Property.ObjectFit;
"-o-object-position"?: Property.ObjectPosition<string | number>;
"-o-tab-size"?: Property.TabSize<string | number>;
"-o-text-overflow"?: Property.TextOverflow;
"-o-transform"?: Property.Transform;
"-o-transform-origin"?: Property.TransformOrigin<string | number>;
"-o-transition"?: Property.Transition<string & {}>;
"-o-transition-delay"?: Property.TransitionDelay<string & {}>;
"-o-transition-duration"?: Property.TransitionDuration<string & {}>;
"-o-transition-property"?: Property.TransitionProperty;
"-o-transition-timing-function"?: Property.TransitionTimingFunction;
"-webkit-box-align"?: Property.BoxAlign;
"-webkit-box-direction"?: Property.BoxDirection;
"-webkit-box-flex"?: Property.BoxFlex;
"-webkit-box-flex-group"?: Property.BoxFlexGroup;
"-webkit-box-lines"?: Property.BoxLines;
"-webkit-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-webkit-box-orient"?: Property.BoxOrient;
"-webkit-box-pack"?: Property.BoxPack;
"alignment-baseline"?: Property.AlignmentBaseline;
"baseline-shift"?: Property.BaselineShift<string | number>;
"clip-rule"?: Property.ClipRule;
"color-interpolation"?: Property.ColorInterpolation;
"color-rendering"?: Property.ColorRendering;
"dominant-baseline"?: Property.DominantBaseline;
"fill-opacity"?: Property.FillOpacity;
"fill-rule"?: Property.FillRule;
"flood-color"?: Property.FloodColor;
"flood-opacity"?: Property.FloodOpacity;
"glyph-orientation-vertical"?: Property.GlyphOrientationVertical;
"lighting-color"?: Property.LightingColor;
"marker-end"?: Property.MarkerEnd;
"marker-mid"?: Property.MarkerMid;
"marker-start"?: Property.MarkerStart;
"shape-rendering"?: Property.ShapeRendering;
"stop-color"?: Property.StopColor;
"stop-opacity"?: Property.StopOpacity;
"stroke-dasharray"?: Property.StrokeDasharray<string | number>;
"stroke-dashoffset"?: Property.StrokeDashoffset<string | number>;
"stroke-linecap"?: Property.StrokeLinecap;
"stroke-linejoin"?: Property.StrokeLinejoin;
"stroke-miterlimit"?: Property.StrokeMiterlimit;
"stroke-opacity"?: Property.StrokeOpacity;
"stroke-width"?: Property.StrokeWidth<string | number>;
"text-anchor"?: Property.TextAnchor;
"vector-effect"?: Property.VectorEffect;
}>;
values: ComputedRef<string[]>;
teleportDisabled: ComputedRef<boolean>;
toPopupContainer: ComputedRef<string | HTMLElement>;
formatValue: Ref<Format, Format>;
onFormatChange: (format: Format) => void;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, ("change" | "formatChange" | "update:value" | "update:showPicker" | "overflowMax" | "closePicker")[], "change" | "formatChange" | "update:value" | "update:showPicker" | "overflowMax" | "closePicker", PublicProps, Readonly<ExtractPropTypes<    {
value: {
type: PropType<string | string[]>;
};
theme: {
type: PropType<Theme>;
default: string;
};
size: {
type: (NumberConstructor | StringConstructor)[];
default: number;
};
width: {
type: (NumberConstructor | StringConstructor)[];
};
height: {
type: (NumberConstructor | StringConstructor)[];
};
format: {
type: PropType<Format>;
};
showPicker: {
type: BooleanConstructor;
default: any;
};
showAlpha: {
type: BooleanConstructor;
default: boolean;
};
addColor: {
type: BooleanConstructor;
default: boolean;
};
deleteColor: {
type: BooleanConstructor;
default: boolean;
};
max: {
type: NumberConstructor;
default: number;
};
popupContainer: {
type: PropType<string | boolean | HTMLElement>;
default: string;
};
zIndex: {
type: NumberConstructor;
default: number;
};
colors: {
type: PropType<string[]>;
default: () => string[];
};
position: {
type: PropType<PositioningStrategy>;
};
placement: {
type: PropType<Placement>;
};
formatOptions: {
type: PropType<Boolean | Format[]>;
default: boolean;
};
}>> & Readonly<{
onChange?: (...args: any[]) => any;
onFormatChange?: (...args: any[]) => any;
"onUpdate:value"?: (...args: any[]) => any;
"onUpdate:showPicker"?: (...args: any[]) => any;
onOverflowMax?: (...args: any[]) => any;
onClosePicker?: (...args: any[]) => any;
}>, {
size: string | number;
zIndex: number;
showAlpha: boolean;
formatOptions: Boolean | Format[];
max: number;
theme: Theme;
colors: string[];
showPicker: boolean;
addColor: boolean;
deleteColor: boolean;
popupContainer: string | boolean | HTMLElement;
}, {}, {
ColorItem: DefineComponent<ExtractPropTypes<    {
size: {
type: (NumberConstructor | StringConstructor)[];
default: number;
};
width: {
type: (NumberConstructor | StringConstructor)[];
};
height: {
type: (NumberConstructor | StringConstructor)[];
};
value: {
type: StringConstructor;
default: string;
};
border: {
type: BooleanConstructor;
default: boolean;
};
borderRadius: {
type: NumberConstructor;
default: number;
};
selected: {
type: BooleanConstructor;
default: boolean;
};
draggable: {
type: BooleanConstructor;
default: boolean;
};
}>, {
canvas: Ref<HTMLCanvasElement, HTMLCanvasElement>;
colorItemStyle: ComputedRef<    {
width: string;
height: string;
border: string;
borderRadius: string;
boxShadow: string;
}>;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, "select"[], "select", PublicProps, Readonly<ExtractPropTypes<    {
size: {
type: (NumberConstructor | StringConstructor)[];
default: number;
};
width: {
type: (NumberConstructor | StringConstructor)[];
};
height: {
type: (NumberConstructor | StringConstructor)[];
};
value: {
type: StringConstructor;
default: string;
};
border: {
type: BooleanConstructor;
default: boolean;
};
borderRadius: {
type: NumberConstructor;
default: number;
};
selected: {
type: BooleanConstructor;
default: boolean;
};
draggable: {
type: BooleanConstructor;
default: boolean;
};
}>> & Readonly<{
onSelect?: (...args: any[]) => any;
}>, {
size: string | number;
value: string;
border: boolean;
borderRadius: number;
selected: boolean;
draggable: boolean;
}, {}, {}, {}, string, ComponentProvideOptions, true, {}, any>;
Picker: DefineComponent<ExtractPropTypes<    {
format: {
type: PropType<Format>;
default: string;
};
showAlpha: {
type: BooleanConstructor;
default: boolean;
};
value: {
type: StringConstructor;
default: string;
};
colors: {
type: PropType<string[]>;
default: () => any[];
};
style: {
type: PropType<Partial<CSSProperties>>;
default: () => {};
};
formatOptions: {
type: PropType<Boolean | Format[]>;
};
}>, {
h: ComputedRef<any>;
s: ComputedRef<any>;
v: ComputedRef<any>;
a: ComputedRef<any>;
rgbStr: ComputedRef<string>;
onSelectSaturation: (saturation: any, value: any) => void;
onSelectHue: (hue: number) => void;
onSelectAlpha: (alpha: any) => void;
handleInputFormat: (format: Format) => string;
colorValue: Ref<any, any>;
pickerStyle: ComputedRef<Partial<CSSProperties>>;
onInputChange: (color: string) => void;
handleChange: () => void;
selectColorIndex: Ref<number, number>;
onSelectColor: (color: string, index: number) => void;
onFormatChange: (format: any) => void;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, ("change" | "formatChange")[], "change" | "formatChange", PublicProps, Readonly<ExtractPropTypes<    {
format: {
type: PropType<Format>;
default: string;
};
showAlpha: {
type: BooleanConstructor;
default: boolean;
};
value: {
type: StringConstructor;
default: string;
};
colors: {
type: PropType<string[]>;
default: () => any[];
};
style: {
type: PropType<Partial<CSSProperties>>;
default: () => {};
};
formatOptions: {
type: PropType<Boolean | Format[]>;
};
}>> & Readonly<{
onChange?: (...args: any[]) => any;
onFormatChange?: (...args: any[]) => any;
}>, {
value: string;
style: Partial<CSSProperties>;
showAlpha: boolean;
format: Format;
colors: string[];
}, {}, {
Colors: DefineComponent<ExtractPropTypes<    {
colors: {
type: PropType<string[]>;
default: () => any[];
};
selectedIndex: {
type: NumberConstructor;
default: number;
};
}>, {
onSelectColor: (color: string, index: number) => void;
useColors: ComputedRef<string[]>;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, "change"[], "change", PublicProps, Readonly<ExtractPropTypes<    {
colors: {
type: PropType<string[]>;
default: () => any[];
};
selectedIndex: {
type: NumberConstructor;
default: number;
};
}>> & Readonly<{
onChange?: (...args: any[]) => any;
}>, {
colors: string[];
selectedIndex: number;
}, {}, {
ColorItem: DefineComponent<ExtractPropTypes<    {
size: {
type: (NumberConstructor | StringConstructor)[];
default: number;
};
width: {
type: (NumberConstructor | StringConstructor)[];
};
height: {
type: (NumberConstructor | StringConstructor)[];
};
value: {
type: StringConstructor;
default: string;
};
border: {
type: BooleanConstructor;
default: boolean;
};
borderRadius: {
type: NumberConstructor;
default: number;
};
selected: {
type: BooleanConstructor;
default: boolean;
};
draggable: {
type: BooleanConstructor;
default: boolean;
};
}>, {
canvas: Ref<HTMLCanvasElement, HTMLCanvasElement>;
colorItemStyle: ComputedRef<    {
width: string;
height: string;
border: string;
borderRadius: string;
boxShadow: string;
}>;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, "select"[], "select", PublicProps, Readonly<ExtractPropTypes<    {
size: {
type: (NumberConstructor | StringConstructor)[];
default: number;
};
width: {
type: (NumberConstructor | StringConstructor)[];
};
height: {
type: (NumberConstructor | StringConstructor)[];
};
value: {
type: StringConstructor;
default: string;
};
border: {
type: BooleanConstructor;
default: boolean;
};
borderRadius: {
type: NumberConstructor;
default: number;
};
selected: {
type: BooleanConstructor;
default: boolean;
};
draggable: {
type: BooleanConstructor;
default: boolean;
};
}>> & Readonly<{
onSelect?: (...args: any[]) => any;
}>, {
size: string | number;
value: string;
border: boolean;
borderRadius: number;
selected: boolean;
draggable: boolean;
}, {}, {}, {}, string, ComponentProvideOptions, true, {}, any>;
}, {}, string, ComponentProvideOptions, true, {}, any>;
Saturation: DefineComponent<ExtractPropTypes<    {
size: {
type: NumberConstructor;
default: number;
};
hue: {
type: NumberConstructor;
default: number;
};
saturation: {
type: NumberConstructor;
default: number;
};
value: {
type: NumberConstructor;
default: number;
};
}>, {
saturationStyle: ComputedRef<    {
width: string;
height: string;
background: string;
}>;
sliderStyle: ComputedRef<    {
top: string;
left: string;
width: string;
height: string;
}>;
onSelect: (e: MouseEvent | TouchEvent) => void;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, "change"[], "change", PublicProps, Readonly<ExtractPropTypes<    {
size: {
type: NumberConstructor;
default: number;
};
hue: {
type: NumberConstructor;
default: number;
};
saturation: {
type: NumberConstructor;
default: number;
};
value: {
type: NumberConstructor;
default: number;
};
}>> & Readonly<{
onChange?: (...args: any[]) => any;
}>, {
size: number;
hue: number;
saturation: number;
value: number;
}, {}, {}, {}, string, ComponentProvideOptions, true, {}, any>;
Hue: DefineComponent<ExtractPropTypes<    {
width: {
type: NumberConstructor;
default: number;
};
height: {
type: NumberConstructor;
default: number;
};
hue: {
type: NumberConstructor;
default: number;
};
}>, {
canvas: Ref<HTMLCanvasElement, HTMLCanvasElement>;
sliderStyle: ComputedRef<    {
top: string;
height: string;
}>;
onSelect: (e: MouseEvent | TouchEvent) => void;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, "change"[], "change", PublicProps, Readonly<ExtractPropTypes<    {
width: {
type: NumberConstructor;
default: number;
};
height: {
type: NumberConstructor;
default: number;
};
hue: {
type: NumberConstructor;
default: number;
};
}>> & Readonly<{
onChange?: (...args: any[]) => any;
}>, {
hue: number;
width: number;
height: number;
}, {}, {}, {}, string, ComponentProvideOptions, true, {}, any>;
Alpha: DefineComponent<ExtractPropTypes<    {
width: {
type: NumberConstructor;
default: number;
};
height: {
type: NumberConstructor;
default: number;
};
color: {
type: StringConstructor;
default: string;
};
alpha: {
type: NumberConstructor;
default: number;
};
}>, {
canvas: Ref<HTMLCanvasElement, HTMLCanvasElement>;
sliderStyle: ComputedRef<    {
top: string;
height: string;
}>;
onSelect: (e: MouseEvent | TouchEvent) => void;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<    {
width: {
type: NumberConstructor;
default: number;
};
height: {
type: NumberConstructor;
default: number;
};
color: {
type: StringConstructor;
default: string;
};
alpha: {
type: NumberConstructor;
default: number;
};
}>> & Readonly<{}>, {
width: number;
height: number;
color: string;
alpha: number;
}, {}, {}, {}, string, ComponentProvideOptions, true, {}, any>;
InputValue: DefineComponent<ExtractPropTypes<    {
format: {
type: StringConstructor;
default: string;
};
value: {
type: StringConstructor;
default: string;
};
width: {
type: NumberConstructor;
};
showAlpha: {
type: BooleanConstructor;
};
formatOptions: {
type: PropType<Boolean | Format[]>;
};
}>, {
onInput: (e: any) => void;
valueStyle: ComputedRef<    {
minWidth: string;
maxWidth: string;
width: string;
}>;
onFocus: () => void;
onBlur: () => void;
onEnter: () => void;
onFormatChange: (format: any) => void;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, ("change" | "blur" | "focus" | "enter" | "formatChange")[], "change" | "blur" | "focus" | "enter" | "formatChange", PublicProps, Readonly<ExtractPropTypes<    {
format: {
type: StringConstructor;
default: string;
};
value: {
type: StringConstructor;
default: string;
};
width: {
type: NumberConstructor;
};
showAlpha: {
type: BooleanConstructor;
};
formatOptions: {
type: PropType<Boolean | Format[]>;
};
}>> & Readonly<{
onChange?: (...args: any[]) => any;
onFocus?: (...args: any[]) => any;
onBlur?: (...args: any[]) => any;
onFormatChange?: (...args: any[]) => any;
onEnter?: (...args: any[]) => any;
}>, {
value: string;
showAlpha: boolean;
format: string;
}, {}, {
FormatValue: DefineComponent<ExtractPropTypes<    {
value: {
type: StringConstructor;
default: string;
};
showAlpha: {
type: BooleanConstructor;
};
options: {
type: PropType<Boolean | Format[]>;
};
}>, {
targetRef: Ref<any, any>;
selectorRef: Ref<any, any>;
selectorStyle: Ref<    {
[x: `--${string}`]: string | number;
accentColor?: Property.AccentColor;
alignContent?: Property.AlignContent;
alignItems?: Property.AlignItems;
alignSelf?: Property.AlignSelf;
alignTracks?: Property.AlignTracks;
animationComposition?: Property.AnimationComposition;
animationDelay?: Property.AnimationDelay<string & {}>;
animationDirection?: Property.AnimationDirection;
animationDuration?: Property.AnimationDuration<string & {}>;
animationFillMode?: Property.AnimationFillMode;
animationIterationCount?: Property.AnimationIterationCount;
animationName?: Property.AnimationName;
animationPlayState?: Property.AnimationPlayState;
animationRangeEnd?: Property.AnimationRangeEnd<string | number>;
animationRangeStart?: Property.AnimationRangeStart<string | number>;
animationTimeline?: Property.AnimationTimeline;
animationTimingFunction?: Property.AnimationTimingFunction;
appearance?: Property.Appearance;
aspectRatio?: Property.AspectRatio;
backdropFilter?: Property.BackdropFilter;
backfaceVisibility?: Property.BackfaceVisibility;
backgroundAttachment?: Property.BackgroundAttachment;
backgroundBlendMode?: Property.BackgroundBlendMode;
backgroundClip?: Property.BackgroundClip;
backgroundColor?: Property.BackgroundColor;
backgroundImage?: Property.BackgroundImage;
backgroundOrigin?: Property.BackgroundOrigin;
backgroundPositionX?: Property.BackgroundPositionX<string | number>;
backgroundPositionY?: Property.BackgroundPositionY<string | number>;
backgroundRepeat?: Property.BackgroundRepeat;
backgroundSize?: Property.BackgroundSize<string | number>;
blockOverflow?: Property.BlockOverflow;
blockSize?: Property.BlockSize<string | number>;
borderBlockColor?: Property.BorderBlockColor;
borderBlockEndColor?: Property.BorderBlockEndColor;
borderBlockEndStyle?: Property.BorderBlockEndStyle;
borderBlockEndWidth?: Property.BorderBlockEndWidth<string | number>;
borderBlockStartColor?: Property.BorderBlockStartColor;
borderBlockStartStyle?: Property.BorderBlockStartStyle;
borderBlockStartWidth?: Property.BorderBlockStartWidth<string | number>;
borderBlockStyle?: Property.BorderBlockStyle;
borderBlockWidth?: Property.BorderBlockWidth<string | number>;
borderBottomColor?: Property.BorderBottomColor;
borderBottomLeftRadius?: Property.BorderBottomLeftRadius<string | number>;
borderBottomRightRadius?: Property.BorderBottomRightRadius<string | number>;
borderBottomStyle?: Property.BorderBottomStyle;
borderBottomWidth?: Property.BorderBottomWidth<string | number>;
borderCollapse?: Property.BorderCollapse;
borderEndEndRadius?: Property.BorderEndEndRadius<string | number>;
borderEndStartRadius?: Property.BorderEndStartRadius<string | number>;
borderImageOutset?: Property.BorderImageOutset<string | number>;
borderImageRepeat?: Property.BorderImageRepeat;
borderImageSlice?: Property.BorderImageSlice;
borderImageSource?: Property.BorderImageSource;
borderImageWidth?: Property.BorderImageWidth<string | number>;
borderInlineColor?: Property.BorderInlineColor;
borderInlineEndColor?: Property.BorderInlineEndColor;
borderInlineEndStyle?: Property.BorderInlineEndStyle;
borderInlineEndWidth?: Property.BorderInlineEndWidth<string | number>;
borderInlineStartColor?: Property.BorderInlineStartColor;
borderInlineStartStyle?: Property.BorderInlineStartStyle;
borderInlineStartWidth?: Property.BorderInlineStartWidth<string | number>;
borderInlineStyle?: Property.BorderInlineStyle;
borderInlineWidth?: Property.BorderInlineWidth<string | number>;
borderLeftColor?: Property.BorderLeftColor;
borderLeftStyle?: Property.BorderLeftStyle;
borderLeftWidth?: Property.BorderLeftWidth<string | number>;
borderRightColor?: Property.BorderRightColor;
borderRightStyle?: Property.BorderRightStyle;
borderRightWidth?: Property.BorderRightWidth<string | number>;
borderSpacing?: Property.BorderSpacing<string | number>;
borderStartEndRadius?: Property.BorderStartEndRadius<string | number>;
borderStartStartRadius?: Property.BorderStartStartRadius<string | number>;
borderTopColor?: Property.BorderTopColor;
borderTopLeftRadius?: Property.BorderTopLeftRadius<string | number>;
borderTopRightRadius?: Property.BorderTopRightRadius<string | number>;
borderTopStyle?: Property.BorderTopStyle;
borderTopWidth?: Property.BorderTopWidth<string | number>;
bottom?: Property.Bottom<string | number>;
boxDecorationBreak?: Property.BoxDecorationBreak;
boxShadow?: Property.BoxShadow;
boxSizing?: Property.BoxSizing;
breakAfter?: Property.BreakAfter;
breakBefore?: Property.BreakBefore;
breakInside?: Property.BreakInside;
captionSide?: Property.CaptionSide;
caretColor?: Property.CaretColor;
caretShape?: Property.CaretShape;
clear?: Property.Clear;
clipPath?: Property.ClipPath;
color?: Property.Color;
colorAdjust?: Property.PrintColorAdjust;
colorScheme?: Property.ColorScheme;
columnCount?: Property.ColumnCount;
columnFill?: Property.ColumnFill;
columnGap?: Property.ColumnGap<string | number>;
columnRuleColor?: Property.ColumnRuleColor;
columnRuleStyle?: Property.ColumnRuleStyle;
columnRuleWidth?: Property.ColumnRuleWidth<string | number>;
columnSpan?: Property.ColumnSpan;
columnWidth?: Property.ColumnWidth<string | number>;
contain?: Property.Contain;
containIntrinsicBlockSize?: Property.ContainIntrinsicBlockSize<string | number>;
containIntrinsicHeight?: Property.ContainIntrinsicHeight<string | number>;
containIntrinsicInlineSize?: Property.ContainIntrinsicInlineSize<string | number>;
containIntrinsicWidth?: Property.ContainIntrinsicWidth<string | number>;
containerName?: Property.ContainerName;
containerType?: Property.ContainerType;
content?: Property.Content;
contentVisibility?: Property.ContentVisibility;
counterIncrement?: Property.CounterIncrement;
counterReset?: Property.CounterReset;
counterSet?: Property.CounterSet;
cursor?: Property.Cursor;
direction?: Property.Direction;
display?: Property.Display;
emptyCells?: Property.EmptyCells;
filter?: Property.Filter;
flexBasis?: Property.FlexBasis<string | number>;
flexDirection?: Property.FlexDirection;
flexGrow?: Property.FlexGrow;
flexShrink?: Property.FlexShrink;
flexWrap?: Property.FlexWrap;
float?: Property.Float;
fontFamily?: Property.FontFamily;
fontFeatureSettings?: Property.FontFeatureSettings;
fontKerning?: Property.FontKerning;
fontLanguageOverride?: Property.FontLanguageOverride;
fontOpticalSizing?: Property.FontOpticalSizing;
fontPalette?: Property.FontPalette;
fontSize?: Property.FontSize<string | number>;
fontSizeAdjust?: Property.FontSizeAdjust;
fontSmooth?: Property.FontSmooth<string | number>;
fontStretch?: Property.FontStretch;
fontStyle?: Property.FontStyle;
fontSynthesis?: Property.FontSynthesis;
fontSynthesisPosition?: Property.FontSynthesisPosition;
fontSynthesisSmallCaps?: Property.FontSynthesisSmallCaps;
fontSynthesisStyle?: Property.FontSynthesisStyle;
fontSynthesisWeight?: Property.FontSynthesisWeight;
fontVariant?: Property.FontVariant;
fontVariantAlternates?: Property.FontVariantAlternates;
fontVariantCaps?: Property.FontVariantCaps;
fontVariantEastAsian?: Property.FontVariantEastAsian;
fontVariantEmoji?: Property.FontVariantEmoji;
fontVariantLigatures?: Property.FontVariantLigatures;
fontVariantNumeric?: Property.FontVariantNumeric;
fontVariantPosition?: Property.FontVariantPosition;
fontVariationSettings?: Property.FontVariationSettings;
fontWeight?: Property.FontWeight;
forcedColorAdjust?: Property.ForcedColorAdjust;
gridAutoColumns?: Property.GridAutoColumns<string | number>;
gridAutoFlow?: Property.GridAutoFlow;
gridAutoRows?: Property.GridAutoRows<string | number>;
gridColumnEnd?: Property.GridColumnEnd;
gridColumnStart?: Property.GridColumnStart;
gridRowEnd?: Property.GridRowEnd;
gridRowStart?: Property.GridRowStart;
gridTemplateAreas?: Property.GridTemplateAreas;
gridTemplateColumns?: Property.GridTemplateColumns<string | number>;
gridTemplateRows?: Property.GridTemplateRows<string | number>;
hangingPunctuation?: Property.HangingPunctuation;
height?: Property.Height<string | number>;
hyphenateCharacter?: Property.HyphenateCharacter;
hyphenateLimitChars?: Property.HyphenateLimitChars;
hyphens?: Property.Hyphens;
imageOrientation?: Property.ImageOrientation;
imageRendering?: Property.ImageRendering;
imageResolution?: Property.ImageResolution;
initialLetter?: Property.InitialLetter;
inlineSize?: Property.InlineSize<string | number>;
inputSecurity?: Property.InputSecurity;
insetBlockEnd?: Property.InsetBlockEnd<string | number>;
insetBlockStart?: Property.InsetBlockStart<string | number>;
insetInlineEnd?: Property.InsetInlineEnd<string | number>;
insetInlineStart?: Property.InsetInlineStart<string | number>;
isolation?: Property.Isolation;
justifyContent?: Property.JustifyContent;
justifyItems?: Property.JustifyItems;
justifySelf?: Property.JustifySelf;
justifyTracks?: Property.JustifyTracks;
left?: Property.Left<string | number>;
letterSpacing?: Property.LetterSpacing<string | number>;
lineBreak?: Property.LineBreak;
lineHeight?: Property.LineHeight<string | number>;
lineHeightStep?: Property.LineHeightStep<string | number>;
listStyleImage?: Property.ListStyleImage;
listStylePosition?: Property.ListStylePosition;
listStyleType?: Property.ListStyleType;
marginBlockEnd?: Property.MarginBlockEnd<string | number>;
marginBlockStart?: Property.MarginBlockStart<string | number>;
marginBottom?: Property.MarginBottom<string | number>;
marginInlineEnd?: Property.MarginInlineEnd<string | number>;
marginInlineStart?: Property.MarginInlineStart<string | number>;
marginLeft?: Property.MarginLeft<string | number>;
marginRight?: Property.MarginRight<string | number>;
marginTop?: Property.MarginTop<string | number>;
marginTrim?: Property.MarginTrim;
maskBorderMode?: Property.MaskBorderMode;
maskBorderOutset?: Property.MaskBorderOutset<string | number>;
maskBorderRepeat?: Property.MaskBorderRepeat;
maskBorderSlice?: Property.MaskBorderSlice;
maskBorderSource?: Property.MaskBorderSource;
maskBorderWidth?: Property.MaskBorderWidth<string | number>;
maskClip?: Property.MaskClip;
maskComposite?: Property.MaskComposite;
maskImage?: Property.MaskImage;
maskMode?: Property.MaskMode;
maskOrigin?: Property.MaskOrigin;
maskPosition?: Property.MaskPosition<string | number>;
maskRepeat?: Property.MaskRepeat;
maskSize?: Property.MaskSize<string | number>;
maskType?: Property.MaskType;
masonryAutoFlow?: Property.MasonryAutoFlow;
mathDepth?: Property.MathDepth;
mathShift?: Property.MathShift;
mathStyle?: Property.MathStyle;
maxBlockSize?: Property.MaxBlockSize<string | number>;
maxHeight?: Property.MaxHeight<string | number>;
maxInlineSize?: Property.MaxInlineSize<string | number>;
maxLines?: Property.MaxLines;
maxWidth?: Property.MaxWidth<string | number>;
minBlockSize?: Property.MinBlockSize<string | number>;
minHeight?: Property.MinHeight<string | number>;
minInlineSize?: Property.MinInlineSize<string | number>;
minWidth?: Property.MinWidth<string | number>;
mixBlendMode?: Property.MixBlendMode;
motionDistance?: Property.OffsetDistance<string | number>;
motionPath?: Property.OffsetPath;
motionRotation?: Property.OffsetRotate;
objectFit?: Property.ObjectFit;
objectPosition?: Property.ObjectPosition<string | number>;
offsetAnchor?: Property.OffsetAnchor<string | number>;
offsetDistance?: Property.OffsetDistance<string | number>;
offsetPath?: Property.OffsetPath;
offsetPosition?: Property.OffsetPosition<string | number>;
offsetRotate?: Property.OffsetRotate;
offsetRotation?: Property.OffsetRotate;
opacity?: Property.Opacity;
order?: Property.Order;
orphans?: Property.Orphans;
outlineColor?: Property.OutlineColor;
outlineOffset?: Property.OutlineOffset<string | number>;
outlineStyle?: Property.OutlineStyle;
outlineWidth?: Property.OutlineWidth<string | number>;
overflowAnchor?: Property.OverflowAnchor;
overflowBlock?: Property.OverflowBlock;
overflowClipBox?: Property.OverflowClipBox;
overflowClipMargin?: Property.OverflowClipMargin<string | number>;
overflowInline?: Property.OverflowInline;
overflowWrap?: Property.OverflowWrap;
overflowX?: Property.OverflowX;
overflowY?: Property.OverflowY;
overlay?: Property.Overlay;
overscrollBehaviorBlock?: Property.OverscrollBehaviorBlock;
overscrollBehaviorInline?: Property.OverscrollBehaviorInline;
overscrollBehaviorX?: Property.OverscrollBehaviorX;
overscrollBehaviorY?: Property.OverscrollBehaviorY;
paddingBlockEnd?: Property.PaddingBlockEnd<string | number>;
paddingBlockStart?: Property.PaddingBlockStart<string | number>;
paddingBottom?: Property.PaddingBottom<string | number>;
paddingInlineEnd?: Property.PaddingInlineEnd<string | number>;
paddingInlineStart?: Property.PaddingInlineStart<string | number>;
paddingLeft?: Property.PaddingLeft<string | number>;
paddingRight?: Property.PaddingRight<string | number>;
paddingTop?: Property.PaddingTop<string | number>;
page?: Property.Page;
pageBreakAfter?: Property.PageBreakAfter;
pageBreakBefore?: Property.PageBreakBefore;
pageBreakInside?: Property.PageBreakInside;
paintOrder?: Property.PaintOrder;
perspective?: Property.Perspective<string | number>;
perspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
pointerEvents?: Property.PointerEvents;
position?: Property.Position;
printColorAdjust?: Property.PrintColorAdjust;
quotes?: Property.Quotes;
resize?: Property.Resize;
right?: Property.Right<string | number>;
rotate?: Property.Rotate;
rowGap?: Property.RowGap<string | number>;
rubyAlign?: Property.RubyAlign;
rubyMerge?: Property.RubyMerge;
rubyPosition?: Property.RubyPosition;
scale?: Property.Scale;
scrollBehavior?: Property.ScrollBehavior;
scrollMarginBlockEnd?: Property.ScrollMarginBlockEnd<string | number>;
scrollMarginBlockStart?: Property.ScrollMarginBlockStart<string | number>;
scrollMarginBottom?: Property.ScrollMarginBottom<string | number>;
scrollMarginInlineEnd?: Property.ScrollMarginInlineEnd<string | number>;
scrollMarginInlineStart?: Property.ScrollMarginInlineStart<string | number>;
scrollMarginLeft?: Property.ScrollMarginLeft<string | number>;
scrollMarginRight?: Property.ScrollMarginRight<string | number>;
scrollMarginTop?: Property.ScrollMarginTop<string | number>;
scrollPaddingBlockEnd?: Property.ScrollPaddingBlockEnd<string | number>;
scrollPaddingBlockStart?: Property.ScrollPaddingBlockStart<string | number>;
scrollPaddingBottom?: Property.ScrollPaddingBottom<string | number>;
scrollPaddingInlineEnd?: Property.ScrollPaddingInlineEnd<string | number>;
scrollPaddingInlineStart?: Property.ScrollPaddingInlineStart<string | number>;
scrollPaddingLeft?: Property.ScrollPaddingLeft<string | number>;
scrollPaddingRight?: Property.ScrollPaddingRight<string | number>;
scrollPaddingTop?: Property.ScrollPaddingTop<string | number>;
scrollSnapAlign?: Property.ScrollSnapAlign;
scrollSnapMarginBottom?: Property.ScrollMarginBottom<string | number>;
scrollSnapMarginLeft?: Property.ScrollMarginLeft<string | number>;
scrollSnapMarginRight?: Property.ScrollMarginRight<string | number>;
scrollSnapMarginTop?: Property.ScrollMarginTop<string | number>;
scrollSnapStop?: Property.ScrollSnapStop;
scrollSnapType?: Property.ScrollSnapType;
scrollTimelineAxis?: Property.ScrollTimelineAxis;
scrollTimelineName?: Property.ScrollTimelineName;
scrollbarColor?: Property.ScrollbarColor;
scrollbarGutter?: Property.ScrollbarGutter;
scrollbarWidth?: Property.ScrollbarWidth;
shapeImageThreshold?: Property.ShapeImageThreshold;
shapeMargin?: Property.ShapeMargin<string | number>;
shapeOutside?: Property.ShapeOutside;
tabSize?: Property.TabSize<string | number>;
tableLayout?: Property.TableLayout;
textAlign?: Property.TextAlign;
textAlignLast?: Property.TextAlignLast;
textCombineUpright?: Property.TextCombineUpright;
textDecorationColor?: Property.TextDecorationColor;
textDecorationLine?: Property.TextDecorationLine;
textDecorationSkip?: Property.TextDecorationSkip;
textDecorationSkipInk?: Property.TextDecorationSkipInk;
textDecorationStyle?: Property.TextDecorationStyle;
textDecorationThickness?: Property.TextDecorationThickness<string | number>;
textEmphasisColor?: Property.TextEmphasisColor;
textEmphasisPosition?: Property.TextEmphasisPosition;
textEmphasisStyle?: Property.TextEmphasisStyle;
textIndent?: Property.TextIndent<string | number>;
textJustify?: Property.TextJustify;
textOrientation?: Property.TextOrientation;
textOverflow?: Property.TextOverflow;
textRendering?: Property.TextRendering;
textShadow?: Property.TextShadow;
textSizeAdjust?: Property.TextSizeAdjust;
textTransform?: Property.TextTransform;
textUnderlineOffset?: Property.TextUnderlineOffset<string | number>;
textUnderlinePosition?: Property.TextUnderlinePosition;
textWrap?: Property.TextWrap;
timelineScope?: Property.TimelineScope;
top?: Property.Top<string | number>;
touchAction?: Property.TouchAction;
transform?: Property.Transform;
transformBox?: Property.TransformBox;
transformOrigin?: Property.TransformOrigin<string | number>;
transformStyle?: Property.TransformStyle;
transitionBehavior?: Property.TransitionBehavior;
transitionDelay?: Property.TransitionDelay<string & {}>;
transitionDuration?: Property.TransitionDuration<string & {}>;
transitionProperty?: Property.TransitionProperty;
transitionTimingFunction?: Property.TransitionTimingFunction;
translate?: Property.Translate<string | number>;
unicodeBidi?: Property.UnicodeBidi;
userSelect?: Property.UserSelect;
verticalAlign?: Property.VerticalAlign<string | number>;
viewTimelineAxis?: Property.ViewTimelineAxis;
viewTimelineInset?: Property.ViewTimelineInset<string | number>;
viewTimelineName?: Property.ViewTimelineName;
viewTransitionName?: Property.ViewTransitionName;
visibility?: Property.Visibility;
whiteSpace?: Property.WhiteSpace;
whiteSpaceCollapse?: Property.WhiteSpaceCollapse;
whiteSpaceTrim?: Property.WhiteSpaceTrim;
widows?: Property.Widows;
width?: Property.Width<string | number>;
willChange?: Property.WillChange;
wordBreak?: Property.WordBreak;
wordSpacing?: Property.WordSpacing<string | number>;
wordWrap?: Property.WordWrap;
writingMode?: Property.WritingMode;
zIndex?: Property.ZIndex;
zoom?: Property.Zoom;
all?: Globals;
animation?: Property.Animation<string & {}>;
animationRange?: Property.AnimationRange<string | number>;
background?: Property.Background<string | number>;
backgroundPosition?: Property.BackgroundPosition<string | number>;
border?: Property.Border<string | number>;
borderBlock?: Property.BorderBlock<string | number>;
borderBlockEnd?: Property.BorderBlockEnd<string | number>;
borderBlockStart?: Property.BorderBlockStart<string | number>;
borderBottom?: Property.BorderBottom<string | number>;
borderColor?: Property.BorderColor;
borderImage?: Property.BorderImage;
borderInline?: Property.BorderInline<string | number>;
borderInlineEnd?: Property.BorderInlineEnd<string | number>;
borderInlineStart?: Property.BorderInlineStart<string | number>;
borderLeft?: Property.BorderLeft<string | number>;
borderRadius?: Property.BorderRadius<string | number>;
borderRight?: Property.BorderRight<string | number>;
borderStyle?: Property.BorderStyle;
borderTop?: Property.BorderTop<string | number>;
borderWidth?: Property.BorderWidth<string | number>;
caret?: Property.Caret;
columnRule?: Property.ColumnRule<string | number>;
columns?: Property.Columns<string | number>;
containIntrinsicSize?: Property.ContainIntrinsicSize<string | number>;
container?: Property.Container;
flex?: Property.Flex<string | number>;
flexFlow?: Property.FlexFlow;
font?: Property.Font;
gap?: Property.Gap<string | number>;
grid?: Property.Grid;
gridArea?: Property.GridArea;
gridColumn?: Property.GridColumn;
gridRow?: Property.GridRow;
gridTemplate?: Property.GridTemplate;
inset?: Property.Inset<string | number>;
insetBlock?: Property.InsetBlock<string | number>;
insetInline?: Property.InsetInline<string | number>;
lineClamp?: Property.LineClamp;
listStyle?: Property.ListStyle;
margin?: Property.Margin<string | number>;
marginBlock?: Property.MarginBlock<string | number>;
marginInline?: Property.MarginInline<string | number>;
mask?: Property.Mask<string | number>;
maskBorder?: Property.MaskBorder;
motion?: Property.Offset<string | number>;
offset?: Property.Offset<string | number>;
outline?: Property.Outline<string | number>;
overflow?: Property.Overflow;
overscrollBehavior?: Property.OverscrollBehavior;
padding?: Property.Padding<string | number>;
paddingBlock?: Property.PaddingBlock<string | number>;
paddingInline?: Property.PaddingInline<string | number>;
placeContent?: Property.PlaceContent;
placeItems?: Property.PlaceItems;
placeSelf?: Property.PlaceSelf;
scrollMargin?: Property.ScrollMargin<string | number>;
scrollMarginBlock?: Property.ScrollMarginBlock<string | number>;
scrollMarginInline?: Property.ScrollMarginInline<string | number>;
scrollPadding?: Property.ScrollPadding<string | number>;
scrollPaddingBlock?: Property.ScrollPaddingBlock<string | number>;
scrollPaddingInline?: Property.ScrollPaddingInline<string | number>;
scrollSnapMargin?: Property.ScrollMargin<string | number>;
scrollTimeline?: Property.ScrollTimeline;
textDecoration?: Property.TextDecoration<string | number>;
textEmphasis?: Property.TextEmphasis;
transition?: Property.Transition<string & {}>;
viewTimeline?: Property.ViewTimeline;
MozAnimationDelay?: Property.AnimationDelay<string & {}>;
MozAnimationDirection?: Property.AnimationDirection;
MozAnimationDuration?: Property.AnimationDuration<string & {}>;
MozAnimationFillMode?: Property.AnimationFillMode;
MozAnimationIterationCount?: Property.AnimationIterationCount;
MozAnimationName?: Property.AnimationName;
MozAnimationPlayState?: Property.AnimationPlayState;
MozAnimationTimingFunction?: Property.AnimationTimingFunction;
MozAppearance?: Property.MozAppearance;
MozBinding?: Property.MozBinding;
MozBorderBottomColors?: Property.MozBorderBottomColors;
MozBorderEndColor?: Property.BorderInlineEndColor;
MozBorderEndStyle?: Property.BorderInlineEndStyle;
MozBorderEndWidth?: Property.BorderInlineEndWidth<string | number>;
MozBorderLeftColors?: Property.MozBorderLeftColors;
MozBorderRightColors?: Property.MozBorderRightColors;
MozBorderStartColor?: Property.BorderInlineStartColor;
MozBorderStartStyle?: Property.BorderInlineStartStyle;
MozBorderTopColors?: Property.MozBorderTopColors;
MozBoxSizing?: Property.BoxSizing;
MozColumnCount?: Property.ColumnCount;
MozColumnFill?: Property.ColumnFill;
MozColumnRuleColor?: Property.ColumnRuleColor;
MozColumnRuleStyle?: Property.ColumnRuleStyle;
MozColumnRuleWidth?: Property.ColumnRuleWidth<string | number>;
MozColumnWidth?: Property.ColumnWidth<string | number>;
MozContextProperties?: Property.MozContextProperties;
MozFontFeatureSettings?: Property.FontFeatureSettings;
MozFontLanguageOverride?: Property.FontLanguageOverride;
MozHyphens?: Property.Hyphens;
MozImageRegion?: Property.MozImageRegion;
MozMarginEnd?: Property.MarginInlineEnd<string | number>;
MozMarginStart?: Property.MarginInlineStart<string | number>;
MozOrient?: Property.MozOrient;
MozOsxFontSmoothing?: Property.FontSmooth<string | number>;
MozOutlineRadiusBottomleft?: Property.MozOutlineRadiusBottomleft<string | number>;
MozOutlineRadiusBottomright?: Property.MozOutlineRadiusBottomright<string | number>;
MozOutlineRadiusTopleft?: Property.MozOutlineRadiusTopleft<string | number>;
MozOutlineRadiusTopright?: Property.MozOutlineRadiusTopright<string | number>;
MozPaddingEnd?: Property.PaddingInlineEnd<string | number>;
MozPaddingStart?: Property.PaddingInlineStart<string | number>;
MozStackSizing?: Property.MozStackSizing;
MozTabSize?: Property.TabSize<string | number>;
MozTextBlink?: Property.MozTextBlink;
MozTextSizeAdjust?: Property.TextSizeAdjust;
MozUserFocus?: Property.MozUserFocus;
MozUserModify?: Property.MozUserModify;
MozUserSelect?: Property.UserSelect;
MozWindowDragging?: Property.MozWindowDragging;
MozWindowShadow?: Property.MozWindowShadow;
msAccelerator?: Property.MsAccelerator;
msBlockProgression?: Property.MsBlockProgression;
msContentZoomChaining?: Property.MsContentZoomChaining;
msContentZoomLimitMax?: Property.MsContentZoomLimitMax;
msContentZoomLimitMin?: Property.MsContentZoomLimitMin;
msContentZoomSnapPoints?: Property.MsContentZoomSnapPoints;
msContentZoomSnapType?: Property.MsContentZoomSnapType;
msContentZooming?: Property.MsContentZooming;
msFilter?: Property.MsFilter;
msFlexDirection?: Property.FlexDirection;
msFlexPositive?: Property.FlexGrow;
msFlowFrom?: Property.MsFlowFrom;
msFlowInto?: Property.MsFlowInto;
msGridColumns?: Property.MsGridColumns<string | number>;
msGridRows?: Property.MsGridRows<string | number>;
msHighContrastAdjust?: Property.MsHighContrastAdjust;
msHyphenateLimitChars?: Property.MsHyphenateLimitChars;
msHyphenateLimitLines?: Property.MsHyphenateLimitLines;
msHyphenateLimitZone?: Property.MsHyphenateLimitZone<string | number>;
msHyphens?: Property.Hyphens;
msImeAlign?: Property.MsImeAlign;
msLineBreak?: Property.LineBreak;
msOrder?: Property.Order;
msOverflowStyle?: Property.MsOverflowStyle;
msOverflowX?: Property.OverflowX;
msOverflowY?: Property.OverflowY;
msScrollChaining?: Property.MsScrollChaining;
msScrollLimitXMax?: Property.MsScrollLimitXMax<string | number>;
msScrollLimitXMin?: Property.MsScrollLimitXMin<string | number>;
msScrollLimitYMax?: Property.MsScrollLimitYMax<string | number>;
msScrollLimitYMin?: Property.MsScrollLimitYMin<string | number>;
msScrollRails?: Property.MsScrollRails;
msScrollSnapPointsX?: Property.MsScrollSnapPointsX;
msScrollSnapPointsY?: Property.MsScrollSnapPointsY;
msScrollSnapType?: Property.MsScrollSnapType;
msScrollTranslation?: Property.MsScrollTranslation;
msScrollbar3dlightColor?: Property.MsScrollbar3dlightColor;
msScrollbarArrowColor?: Property.MsScrollbarArrowColor;
msScrollbarBaseColor?: Property.MsScrollbarBaseColor;
msScrollbarDarkshadowColor?: Property.MsScrollbarDarkshadowColor;
msScrollbarFaceColor?: Property.MsScrollbarFaceColor;
msScrollbarHighlightColor?: Property.MsScrollbarHighlightColor;
msScrollbarShadowColor?: Property.MsScrollbarShadowColor;
msScrollbarTrackColor?: Property.MsScrollbarTrackColor;
msTextAutospace?: Property.MsTextAutospace;
msTextCombineHorizontal?: Property.TextCombineUpright;
msTextOverflow?: Property.TextOverflow;
msTouchAction?: Property.TouchAction;
msTouchSelect?: Property.MsTouchSelect;
msTransform?: Property.Transform;
msTransformOrigin?: Property.TransformOrigin<string | number>;
msTransitionDelay?: Property.TransitionDelay<string & {}>;
msTransitionDuration?: Property.TransitionDuration<string & {}>;
msTransitionProperty?: Property.TransitionProperty;
msTransitionTimingFunction?: Property.TransitionTimingFunction;
msUserSelect?: Property.MsUserSelect;
msWordBreak?: Property.WordBreak;
msWrapFlow?: Property.MsWrapFlow;
msWrapMargin?: Property.MsWrapMargin<string | number>;
msWrapThrough?: Property.MsWrapThrough;
msWritingMode?: Property.WritingMode;
WebkitAlignContent?: Property.AlignContent;
WebkitAlignItems?: Property.AlignItems;
WebkitAlignSelf?: Property.AlignSelf;
WebkitAnimationDelay?: Property.AnimationDelay<string & {}>;
WebkitAnimationDirection?: Property.AnimationDirection;
WebkitAnimationDuration?: Property.AnimationDuration<string & {}>;
WebkitAnimationFillMode?: Property.AnimationFillMode;
WebkitAnimationIterationCount?: Property.AnimationIterationCount;
WebkitAnimationName?: Property.AnimationName;
WebkitAnimationPlayState?: Property.AnimationPlayState;
WebkitAnimationTimingFunction?: Property.AnimationTimingFunction;
WebkitAppearance?: Property.WebkitAppearance;
WebkitBackdropFilter?: Property.BackdropFilter;
WebkitBackfaceVisibility?: Property.BackfaceVisibility;
WebkitBackgroundClip?: Property.BackgroundClip;
WebkitBackgroundOrigin?: Property.BackgroundOrigin;
WebkitBackgroundSize?: Property.BackgroundSize<string | number>;
WebkitBorderBeforeColor?: Property.WebkitBorderBeforeColor;
WebkitBorderBeforeStyle?: Property.WebkitBorderBeforeStyle;
WebkitBorderBeforeWidth?: Property.WebkitBorderBeforeWidth<string | number>;
WebkitBorderBottomLeftRadius?: Property.BorderBottomLeftRadius<string | number>;
WebkitBorderBottomRightRadius?: Property.BorderBottomRightRadius<string | number>;
WebkitBorderImageSlice?: Property.BorderImageSlice;
WebkitBorderTopLeftRadius?: Property.BorderTopLeftRadius<string | number>;
WebkitBorderTopRightRadius?: Property.BorderTopRightRadius<string | number>;
WebkitBoxDecorationBreak?: Property.BoxDecorationBreak;
WebkitBoxReflect?: Property.WebkitBoxReflect<string | number>;
WebkitBoxShadow?: Property.BoxShadow;
WebkitBoxSizing?: Property.BoxSizing;
WebkitClipPath?: Property.ClipPath;
WebkitColumnCount?: Property.ColumnCount;
WebkitColumnFill?: Property.ColumnFill;
WebkitColumnRuleColor?: Property.ColumnRuleColor;
WebkitColumnRuleStyle?: Property.ColumnRuleStyle;
WebkitColumnRuleWidth?: Property.ColumnRuleWidth<string | number>;
WebkitColumnSpan?: Property.ColumnSpan;
WebkitColumnWidth?: Property.ColumnWidth<string | number>;
WebkitFilter?: Property.Filter;
WebkitFlexBasis?: Property.FlexBasis<string | number>;
WebkitFlexDirection?: Property.FlexDirection;
WebkitFlexGrow?: Property.FlexGrow;
WebkitFlexShrink?: Property.FlexShrink;
WebkitFlexWrap?: Property.FlexWrap;
WebkitFontFeatureSettings?: Property.FontFeatureSettings;
WebkitFontKerning?: Property.FontKerning;
WebkitFontSmoothing?: Property.FontSmooth<string | number>;
WebkitFontVariantLigatures?: Property.FontVariantLigatures;
WebkitHyphenateCharacter?: Property.HyphenateCharacter;
WebkitHyphens?: Property.Hyphens;
WebkitInitialLetter?: Property.InitialLetter;
WebkitJustifyContent?: Property.JustifyContent;
WebkitLineBreak?: Property.LineBreak;
WebkitLineClamp?: Property.WebkitLineClamp;
WebkitMarginEnd?: Property.MarginInlineEnd<string | number>;
WebkitMarginStart?: Property.MarginInlineStart<string | number>;
WebkitMaskAttachment?: Property.WebkitMaskAttachment;
WebkitMaskBoxImageOutset?: Property.MaskBorderOutset<string | number>;
WebkitMaskBoxImageRepeat?: Property.MaskBorderRepeat;
WebkitMaskBoxImageSlice?: Property.MaskBorderSlice;
WebkitMaskBoxImageSource?: Property.MaskBorderSource;
WebkitMaskBoxImageWidth?: Property.MaskBorderWidth<string | number>;
WebkitMaskClip?: Property.WebkitMaskClip;
WebkitMaskComposite?: Property.WebkitMaskComposite;
WebkitMaskImage?: Property.WebkitMaskImage;
WebkitMaskOrigin?: Property.WebkitMaskOrigin;
WebkitMaskPosition?: Property.WebkitMaskPosition<string | number>;
WebkitMaskPositionX?: Property.WebkitMaskPositionX<string | number>;
WebkitMaskPositionY?: Property.WebkitMaskPositionY<string | number>;
WebkitMaskRepeat?: Property.WebkitMaskRepeat;
WebkitMaskRepeatX?: Property.WebkitMaskRepeatX;
WebkitMaskRepeatY?: Property.WebkitMaskRepeatY;
WebkitMaskSize?: Property.WebkitMaskSize<string | number>;
WebkitMaxInlineSize?: Property.MaxInlineSize<string | number>;
WebkitOrder?: Property.Order;
WebkitOverflowScrolling?: Property.WebkitOverflowScrolling;
WebkitPaddingEnd?: Property.PaddingInlineEnd<string | number>;
WebkitPaddingStart?: Property.PaddingInlineStart<string | number>;
WebkitPerspective?: Property.Perspective<string | number>;
WebkitPerspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
WebkitPrintColorAdjust?: Property.PrintColorAdjust;
WebkitRubyPosition?: Property.RubyPosition;
WebkitScrollSnapType?: Property.ScrollSnapType;
WebkitShapeMargin?: Property.ShapeMargin<string | number>;
WebkitTapHighlightColor?: Property.WebkitTapHighlightColor;
WebkitTextCombine?: Property.TextCombineUpright;
WebkitTextDecorationColor?: Property.TextDecorationColor;
WebkitTextDecorationLine?: Property.TextDecorationLine;
WebkitTextDecorationSkip?: Property.TextDecorationSkip;
WebkitTextDecorationStyle?: Property.TextDecorationStyle;
WebkitTextEmphasisColor?: Property.TextEmphasisColor;
WebkitTextEmphasisPosition?: Property.TextEmphasisPosition;
WebkitTextEmphasisStyle?: Property.TextEmphasisStyle;
WebkitTextFillColor?: Property.WebkitTextFillColor;
WebkitTextOrientation?: Property.TextOrientation;
WebkitTextSizeAdjust?: Property.TextSizeAdjust;
WebkitTextStrokeColor?: Property.WebkitTextStrokeColor;
WebkitTextStrokeWidth?: Property.WebkitTextStrokeWidth<string | number>;
WebkitTextUnderlinePosition?: Property.TextUnderlinePosition;
WebkitTouchCallout?: Property.WebkitTouchCallout;
WebkitTransform?: Property.Transform;
WebkitTransformOrigin?: Property.TransformOrigin<string | number>;
WebkitTransformStyle?: Property.TransformStyle;
WebkitTransitionDelay?: Property.TransitionDelay<string & {}>;
WebkitTransitionDuration?: Property.TransitionDuration<string & {}>;
WebkitTransitionProperty?: Property.TransitionProperty;
WebkitTransitionTimingFunction?: Property.TransitionTimingFunction;
WebkitUserModify?: Property.WebkitUserModify;
WebkitUserSelect?: Property.UserSelect;
WebkitWritingMode?: Property.WritingMode;
MozAnimation?: Property.Animation<string & {}>;
MozBorderImage?: Property.BorderImage;
MozColumnRule?: Property.ColumnRule<string | number>;
MozColumns?: Property.Columns<string | number>;
MozOutlineRadius?: Property.MozOutlineRadius<string | number>;
msContentZoomLimit?: Property.MsContentZoomLimit;
msContentZoomSnap?: Property.MsContentZoomSnap;
msFlex?: Property.Flex<string | number>;
msScrollLimit?: Property.MsScrollLimit;
msScrollSnapX?: Property.MsScrollSnapX;
msScrollSnapY?: Property.MsScrollSnapY;
msTransition?: Property.Transition<string & {}>;
WebkitAnimation?: Property.Animation<string & {}>;
WebkitBorderBefore?: Property.WebkitBorderBefore<string | number>;
WebkitBorderImage?: Property.BorderImage;
WebkitBorderRadius?: Property.BorderRadius<string | number>;
WebkitColumnRule?: Property.ColumnRule<string | number>;
WebkitColumns?: Property.Columns<string | number>;
WebkitFlex?: Property.Flex<string | number>;
WebkitFlexFlow?: Property.FlexFlow;
WebkitMask?: Property.WebkitMask<string | number>;
WebkitMaskBoxImage?: Property.MaskBorder;
WebkitTextEmphasis?: Property.TextEmphasis;
WebkitTextStroke?: Property.WebkitTextStroke<string | number>;
WebkitTransition?: Property.Transition<string & {}>;
azimuth?: Property.Azimuth;
boxAlign?: Property.BoxAlign;
boxDirection?: Property.BoxDirection;
boxFlex?: Property.BoxFlex;
boxFlexGroup?: Property.BoxFlexGroup;
boxLines?: Property.BoxLines;
boxOrdinalGroup?: Property.BoxOrdinalGroup;
boxOrient?: Property.BoxOrient;
boxPack?: Property.BoxPack;
clip?: Property.Clip;
gridColumnGap?: Property.GridColumnGap<string | number>;
gridGap?: Property.GridGap<string | number>;
gridRowGap?: Property.GridRowGap<string | number>;
imeMode?: Property.ImeMode;
offsetBlock?: Property.InsetBlock<string | number>;
offsetBlockEnd?: Property.InsetBlockEnd<string | number>;
offsetBlockStart?: Property.InsetBlockStart<string | number>;
offsetInline?: Property.InsetInline<string | number>;
offsetInlineEnd?: Property.InsetInlineEnd<string | number>;
offsetInlineStart?: Property.InsetInlineStart<string | number>;
scrollSnapCoordinate?: Property.ScrollSnapCoordinate<string | number>;
scrollSnapDestination?: Property.ScrollSnapDestination<string | number>;
scrollSnapPointsX?: Property.ScrollSnapPointsX;
scrollSnapPointsY?: Property.ScrollSnapPointsY;
scrollSnapTypeX?: Property.ScrollSnapTypeX;
scrollSnapTypeY?: Property.ScrollSnapTypeY;
KhtmlBoxAlign?: Property.BoxAlign;
KhtmlBoxDirection?: Property.BoxDirection;
KhtmlBoxFlex?: Property.BoxFlex;
KhtmlBoxFlexGroup?: Property.BoxFlexGroup;
KhtmlBoxLines?: Property.BoxLines;
KhtmlBoxOrdinalGroup?: Property.BoxOrdinalGroup;
KhtmlBoxOrient?: Property.BoxOrient;
KhtmlBoxPack?: Property.BoxPack;
KhtmlLineBreak?: Property.LineBreak;
KhtmlOpacity?: Property.Opacity;
KhtmlUserSelect?: Property.UserSelect;
MozBackfaceVisibility?: Property.BackfaceVisibility;
MozBackgroundClip?: Property.BackgroundClip;
MozBackgroundInlinePolicy?: Property.BoxDecorationBreak;
MozBackgroundOrigin?: Property.BackgroundOrigin;
MozBackgroundSize?: Property.BackgroundSize<string | number>;
MozBorderRadius?: Property.BorderRadius<string | number>;
MozBorderRadiusBottomleft?: Property.BorderBottomLeftRadius<string | number>;
MozBorderRadiusBottomright?: Property.BorderBottomRightRadius<string | number>;
MozBorderRadiusTopleft?: Property.BorderTopLeftRadius<string | number>;
MozBorderRadiusTopright?: Property.BorderTopRightRadius<string | number>;
MozBoxAlign?: Property.BoxAlign;
MozBoxDirection?: Property.BoxDirection;
MozBoxFlex?: Property.BoxFlex;
MozBoxOrdinalGroup?: Property.BoxOrdinalGroup;
MozBoxOrient?: Property.BoxOrient;
MozBoxPack?: Property.BoxPack;
MozBoxShadow?: Property.BoxShadow;
MozFloatEdge?: Property.MozFloatEdge;
MozForceBrokenImageIcon?: Property.MozForceBrokenImageIcon;
MozOpacity?: Property.Opacity;
MozOutline?: Property.Outline<string | number>;
MozOutlineColor?: Property.OutlineColor;
MozOutlineStyle?: Property.OutlineStyle;
MozOutlineWidth?: Property.OutlineWidth<string | number>;
MozPerspective?: Property.Perspective<string | number>;
MozPerspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
MozTextAlignLast?: Property.TextAlignLast;
MozTextDecorationColor?: Property.TextDecorationColor;
MozTextDecorationLine?: Property.TextDecorationLine;
MozTextDecorationStyle?: Property.TextDecorationStyle;
MozTransform?: Property.Transform;
MozTransformOrigin?: Property.TransformOrigin<string | number>;
MozTransformStyle?: Property.TransformStyle;
MozTransition?: Property.Transition<string & {}>;
MozTransitionDelay?: Property.TransitionDelay<string & {}>;
MozTransitionDuration?: Property.TransitionDuration<string & {}>;
MozTransitionProperty?: Property.TransitionProperty;
MozTransitionTimingFunction?: Property.TransitionTimingFunction;
MozUserInput?: Property.MozUserInput;
msImeMode?: Property.ImeMode;
OAnimation?: Property.Animation<string & {}>;
OAnimationDelay?: Property.AnimationDelay<string & {}>;
OAnimationDirection?: Property.AnimationDirection;
OAnimationDuration?: Property.AnimationDuration<string & {}>;
OAnimationFillMode?: Property.AnimationFillMode;
OAnimationIterationCount?: Property.AnimationIterationCount;
OAnimationName?: Property.AnimationName;
OAnimationPlayState?: Property.AnimationPlayState;
OAnimationTimingFunction?: Property.AnimationTimingFunction;
OBackgroundSize?: Property.BackgroundSize<string | number>;
OBorderImage?: Property.BorderImage;
OObjectFit?: Property.ObjectFit;
OObjectPosition?: Property.ObjectPosition<string | number>;
OTabSize?: Property.TabSize<string | number>;
OTextOverflow?: Property.TextOverflow;
OTransform?: Property.Transform;
OTransformOrigin?: Property.TransformOrigin<string | number>;
OTransition?: Property.Transition<string & {}>;
OTransitionDelay?: Property.TransitionDelay<string & {}>;
OTransitionDuration?: Property.TransitionDuration<string & {}>;
OTransitionProperty?: Property.TransitionProperty;
OTransitionTimingFunction?: Property.TransitionTimingFunction;
WebkitBoxAlign?: Property.BoxAlign;
WebkitBoxDirection?: Property.BoxDirection;
WebkitBoxFlex?: Property.BoxFlex;
WebkitBoxFlexGroup?: Property.BoxFlexGroup;
WebkitBoxLines?: Property.BoxLines;
WebkitBoxOrdinalGroup?: Property.BoxOrdinalGroup;
WebkitBoxOrient?: Property.BoxOrient;
WebkitBoxPack?: Property.BoxPack;
alignmentBaseline?: Property.AlignmentBaseline;
baselineShift?: Property.BaselineShift<string | number>;
clipRule?: Property.ClipRule;
colorInterpolation?: Property.ColorInterpolation;
colorRendering?: Property.ColorRendering;
dominantBaseline?: Property.DominantBaseline;
fill?: Property.Fill;
fillOpacity?: Property.FillOpacity;
fillRule?: Property.FillRule;
floodColor?: Property.FloodColor;
floodOpacity?: Property.FloodOpacity;
glyphOrientationVertical?: Property.GlyphOrientationVertical;
lightingColor?: Property.LightingColor;
marker?: Property.Marker;
markerEnd?: Property.MarkerEnd;
markerMid?: Property.MarkerMid;
markerStart?: Property.MarkerStart;
shapeRendering?: Property.ShapeRendering;
stopColor?: Property.StopColor;
stopOpacity?: Property.StopOpacity;
stroke?: Property.Stroke;
strokeDasharray?: Property.StrokeDasharray<string | number>;
strokeDashoffset?: Property.StrokeDashoffset<string | number>;
strokeLinecap?: Property.StrokeLinecap;
strokeLinejoin?: Property.StrokeLinejoin;
strokeMiterlimit?: Property.StrokeMiterlimit;
strokeOpacity?: Property.StrokeOpacity;
strokeWidth?: Property.StrokeWidth<string | number>;
textAnchor?: Property.TextAnchor;
vectorEffect?: Property.VectorEffect;
"accent-color"?: Property.AccentColor;
"align-content"?: Property.AlignContent;
"align-items"?: Property.AlignItems;
"align-self"?: Property.AlignSelf;
"align-tracks"?: Property.AlignTracks;
"animation-composition"?: Property.AnimationComposition;
"animation-delay"?: Property.AnimationDelay<string & {}>;
"animation-direction"?: Property.AnimationDirection;
"animation-duration"?: Property.AnimationDuration<string & {}>;
"animation-fill-mode"?: Property.AnimationFillMode;
"animation-iteration-count"?: Property.AnimationIterationCount;
"animation-name"?: Property.AnimationName;
"animation-play-state"?: Property.AnimationPlayState;
"animation-range-end"?: Property.AnimationRangeEnd<string | number>;
"animation-range-start"?: Property.AnimationRangeStart<string | number>;
"animation-timeline"?: Property.AnimationTimeline;
"animation-timing-function"?: Property.AnimationTimingFunction;
"aspect-ratio"?: Property.AspectRatio;
"backdrop-filter"?: Property.BackdropFilter;
"backface-visibility"?: Property.BackfaceVisibility;
"background-attachment"?: Property.BackgroundAttachment;
"background-blend-mode"?: Property.BackgroundBlendMode;
"background-clip"?: Property.BackgroundClip;
"background-color"?: Property.BackgroundColor;
"background-image"?: Property.BackgroundImage;
"background-origin"?: Property.BackgroundOrigin;
"background-position-x"?: Property.BackgroundPositionX<string | number>;
"background-position-y"?: Property.BackgroundPositionY<string | number>;
"background-repeat"?: Property.BackgroundRepeat;
"background-size"?: Property.BackgroundSize<string | number>;
"block-overflow"?: Property.BlockOverflow;
"block-size"?: Property.BlockSize<string | number>;
"border-block-color"?: Property.BorderBlockColor;
"border-block-end-color"?: Property.BorderBlockEndColor;
"border-block-end-style"?: Property.BorderBlockEndStyle;
"border-block-end-width"?: Property.BorderBlockEndWidth<string | number>;
"border-block-start-color"?: Property.BorderBlockStartColor;
"border-block-start-style"?: Property.BorderBlockStartStyle;
"border-block-start-width"?: Property.BorderBlockStartWidth<string | number>;
"border-block-style"?: Property.BorderBlockStyle;
"border-block-width"?: Property.BorderBlockWidth<string | number>;
"border-bottom-color"?: Property.BorderBottomColor;
"border-bottom-left-radius"?: Property.BorderBottomLeftRadius<string | number>;
"border-bottom-right-radius"?: Property.BorderBottomRightRadius<string | number>;
"border-bottom-style"?: Property.BorderBottomStyle;
"border-bottom-width"?: Property.BorderBottomWidth<string | number>;
"border-collapse"?: Property.BorderCollapse;
"border-end-end-radius"?: Property.BorderEndEndRadius<string | number>;
"border-end-start-radius"?: Property.BorderEndStartRadius<string | number>;
"border-image-outset"?: Property.BorderImageOutset<string | number>;
"border-image-repeat"?: Property.BorderImageRepeat;
"border-image-slice"?: Property.BorderImageSlice;
"border-image-source"?: Property.BorderImageSource;
"border-image-width"?: Property.BorderImageWidth<string | number>;
"border-inline-color"?: Property.BorderInlineColor;
"border-inline-end-color"?: Property.BorderInlineEndColor;
"border-inline-end-style"?: Property.BorderInlineEndStyle;
"border-inline-end-width"?: Property.BorderInlineEndWidth<string | number>;
"border-inline-start-color"?: Property.BorderInlineStartColor;
"border-inline-start-style"?: Property.BorderInlineStartStyle;
"border-inline-start-width"?: Property.BorderInlineStartWidth<string | number>;
"border-inline-style"?: Property.BorderInlineStyle;
"border-inline-width"?: Property.BorderInlineWidth<string | number>;
"border-left-color"?: Property.BorderLeftColor;
"border-left-style"?: Property.BorderLeftStyle;
"border-left-width"?: Property.BorderLeftWidth<string | number>;
"border-right-color"?: Property.BorderRightColor;
"border-right-style"?: Property.BorderRightStyle;
"border-right-width"?: Property.BorderRightWidth<string | number>;
"border-spacing"?: Property.BorderSpacing<string | number>;
"border-start-end-radius"?: Property.BorderStartEndRadius<string | number>;
"border-start-start-radius"?: Property.BorderStartStartRadius<string | number>;
"border-top-color"?: Property.BorderTopColor;
"border-top-left-radius"?: Property.BorderTopLeftRadius<string | number>;
"border-top-right-radius"?: Property.BorderTopRightRadius<string | number>;
"border-top-style"?: Property.BorderTopStyle;
"border-top-width"?: Property.BorderTopWidth<string | number>;
"box-decoration-break"?: Property.BoxDecorationBreak;
"box-shadow"?: Property.BoxShadow;
"box-sizing"?: Property.BoxSizing;
"break-after"?: Property.BreakAfter;
"break-before"?: Property.BreakBefore;
"break-inside"?: Property.BreakInside;
"caption-side"?: Property.CaptionSide;
"caret-color"?: Property.CaretColor;
"caret-shape"?: Property.CaretShape;
"clip-path"?: Property.ClipPath;
"color-adjust"?: Property.PrintColorAdjust;
"color-scheme"?: Property.ColorScheme;
"column-count"?: Property.ColumnCount;
"column-fill"?: Property.ColumnFill;
"column-gap"?: Property.ColumnGap<string | number>;
"column-rule-color"?: Property.ColumnRuleColor;
"column-rule-style"?: Property.ColumnRuleStyle;
"column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"column-span"?: Property.ColumnSpan;
"column-width"?: Property.ColumnWidth<string | number>;
"contain-intrinsic-block-size"?: Property.ContainIntrinsicBlockSize<string | number>;
"contain-intrinsic-height"?: Property.ContainIntrinsicHeight<string | number>;
"contain-intrinsic-inline-size"?: Property.ContainIntrinsicInlineSize<string | number>;
"contain-intrinsic-width"?: Property.ContainIntrinsicWidth<string | number>;
"container-name"?: Property.ContainerName;
"container-type"?: Property.ContainerType;
"content-visibility"?: Property.ContentVisibility;
"counter-increment"?: Property.CounterIncrement;
"counter-reset"?: Property.CounterReset;
"counter-set"?: Property.CounterSet;
"empty-cells"?: Property.EmptyCells;
"flex-basis"?: Property.FlexBasis<string | number>;
"flex-direction"?: Property.FlexDirection;
"flex-grow"?: Property.FlexGrow;
"flex-shrink"?: Property.FlexShrink;
"flex-wrap"?: Property.FlexWrap;
"font-family"?: Property.FontFamily;
"font-feature-settings"?: Property.FontFeatureSettings;
"font-kerning"?: Property.FontKerning;
"font-language-override"?: Property.FontLanguageOverride;
"font-optical-sizing"?: Property.FontOpticalSizing;
"font-palette"?: Property.FontPalette;
"font-size"?: Property.FontSize<string | number>;
"font-size-adjust"?: Property.FontSizeAdjust;
"font-smooth"?: Property.FontSmooth<string | number>;
"font-stretch"?: Property.FontStretch;
"font-style"?: Property.FontStyle;
"font-synthesis"?: Property.FontSynthesis;
"font-synthesis-position"?: Property.FontSynthesisPosition;
"font-synthesis-small-caps"?: Property.FontSynthesisSmallCaps;
"font-synthesis-style"?: Property.FontSynthesisStyle;
"font-synthesis-weight"?: Property.FontSynthesisWeight;
"font-variant"?: Property.FontVariant;
"font-variant-alternates"?: Property.FontVariantAlternates;
"font-variant-caps"?: Property.FontVariantCaps;
"font-variant-east-asian"?: Property.FontVariantEastAsian;
"font-variant-emoji"?: Property.FontVariantEmoji;
"font-variant-ligatures"?: Property.FontVariantLigatures;
"font-variant-numeric"?: Property.FontVariantNumeric;
"font-variant-position"?: Property.FontVariantPosition;
"font-variation-settings"?: Property.FontVariationSettings;
"font-weight"?: Property.FontWeight;
"forced-color-adjust"?: Property.ForcedColorAdjust;
"grid-auto-columns"?: Property.GridAutoColumns<string | number>;
"grid-auto-flow"?: Property.GridAutoFlow;
"grid-auto-rows"?: Property.GridAutoRows<string | number>;
"grid-column-end"?: Property.GridColumnEnd;
"grid-column-start"?: Property.GridColumnStart;
"grid-row-end"?: Property.GridRowEnd;
"grid-row-start"?: Property.GridRowStart;
"grid-template-areas"?: Property.GridTemplateAreas;
"grid-template-columns"?: Property.GridTemplateColumns<string | number>;
"grid-template-rows"?: Property.GridTemplateRows<string | number>;
"hanging-punctuation"?: Property.HangingPunctuation;
"hyphenate-character"?: Property.HyphenateCharacter;
"hyphenate-limit-chars"?: Property.HyphenateLimitChars;
"image-orientation"?: Property.ImageOrientation;
"image-rendering"?: Property.ImageRendering;
"image-resolution"?: Property.ImageResolution;
"initial-letter"?: Property.InitialLetter;
"inline-size"?: Property.InlineSize<string | number>;
"input-security"?: Property.InputSecurity;
"inset-block-end"?: Property.InsetBlockEnd<string | number>;
"inset-block-start"?: Property.InsetBlockStart<string | number>;
"inset-inline-end"?: Property.InsetInlineEnd<string | number>;
"inset-inline-start"?: Property.InsetInlineStart<string | number>;
"justify-content"?: Property.JustifyContent;
"justify-items"?: Property.JustifyItems;
"justify-self"?: Property.JustifySelf;
"justify-tracks"?: Property.JustifyTracks;
"letter-spacing"?: Property.LetterSpacing<string | number>;
"line-break"?: Property.LineBreak;
"line-height"?: Property.LineHeight<string | number>;
"line-height-step"?: Property.LineHeightStep<string | number>;
"list-style-image"?: Property.ListStyleImage;
"list-style-position"?: Property.ListStylePosition;
"list-style-type"?: Property.ListStyleType;
"margin-block-end"?: Property.MarginBlockEnd<string | number>;
"margin-block-start"?: Property.MarginBlockStart<string | number>;
"margin-bottom"?: Property.MarginBottom<string | number>;
"margin-inline-end"?: Property.MarginInlineEnd<string | number>;
"margin-inline-start"?: Property.MarginInlineStart<string | number>;
"margin-left"?: Property.MarginLeft<string | number>;
"margin-right"?: Property.MarginRight<string | number>;
"margin-top"?: Property.MarginTop<string | number>;
"margin-trim"?: Property.MarginTrim;
"mask-border-mode"?: Property.MaskBorderMode;
"mask-border-outset"?: Property.MaskBorderOutset<string | number>;
"mask-border-repeat"?: Property.MaskBorderRepeat;
"mask-border-slice"?: Property.MaskBorderSlice;
"mask-border-source"?: Property.MaskBorderSource;
"mask-border-width"?: Property.MaskBorderWidth<string | number>;
"mask-clip"?: Property.MaskClip;
"mask-composite"?: Property.MaskComposite;
"mask-image"?: Property.MaskImage;
"mask-mode"?: Property.MaskMode;
"mask-origin"?: Property.MaskOrigin;
"mask-position"?: Property.MaskPosition<string | number>;
"mask-repeat"?: Property.MaskRepeat;
"mask-size"?: Property.MaskSize<string | number>;
"mask-type"?: Property.MaskType;
"masonry-auto-flow"?: Property.MasonryAutoFlow;
"math-depth"?: Property.MathDepth;
"math-shift"?: Property.MathShift;
"math-style"?: Property.MathStyle;
"max-block-size"?: Property.MaxBlockSize<string | number>;
"max-height"?: Property.MaxHeight<string | number>;
"max-inline-size"?: Property.MaxInlineSize<string | number>;
"max-lines"?: Property.MaxLines;
"max-width"?: Property.MaxWidth<string | number>;
"min-block-size"?: Property.MinBlockSize<string | number>;
"min-height"?: Property.MinHeight<string | number>;
"min-inline-size"?: Property.MinInlineSize<string | number>;
"min-width"?: Property.MinWidth<string | number>;
"mix-blend-mode"?: Property.MixBlendMode;
"motion-distance"?: Property.OffsetDistance<string | number>;
"motion-path"?: Property.OffsetPath;
"motion-rotation"?: Property.OffsetRotate;
"object-fit"?: Property.ObjectFit;
"object-position"?: Property.ObjectPosition<string | number>;
"offset-anchor"?: Property.OffsetAnchor<string | number>;
"offset-distance"?: Property.OffsetDistance<string | number>;
"offset-path"?: Property.OffsetPath;
"offset-position"?: Property.OffsetPosition<string | number>;
"offset-rotate"?: Property.OffsetRotate;
"offset-rotation"?: Property.OffsetRotate;
"outline-color"?: Property.OutlineColor;
"outline-offset"?: Property.OutlineOffset<string | number>;
"outline-style"?: Property.OutlineStyle;
"outline-width"?: Property.OutlineWidth<string | number>;
"overflow-anchor"?: Property.OverflowAnchor;
"overflow-block"?: Property.OverflowBlock;
"overflow-clip-box"?: Property.OverflowClipBox;
"overflow-clip-margin"?: Property.OverflowClipMargin<string | number>;
"overflow-inline"?: Property.OverflowInline;
"overflow-wrap"?: Property.OverflowWrap;
"overflow-x"?: Property.OverflowX;
"overflow-y"?: Property.OverflowY;
"overscroll-behavior-block"?: Property.OverscrollBehaviorBlock;
"overscroll-behavior-inline"?: Property.OverscrollBehaviorInline;
"overscroll-behavior-x"?: Property.OverscrollBehaviorX;
"overscroll-behavior-y"?: Property.OverscrollBehaviorY;
"padding-block-end"?: Property.PaddingBlockEnd<string | number>;
"padding-block-start"?: Property.PaddingBlockStart<string | number>;
"padding-bottom"?: Property.PaddingBottom<string | number>;
"padding-inline-end"?: Property.PaddingInlineEnd<string | number>;
"padding-inline-start"?: Property.PaddingInlineStart<string | number>;
"padding-left"?: Property.PaddingLeft<string | number>;
"padding-right"?: Property.PaddingRight<string | number>;
"padding-top"?: Property.PaddingTop<string | number>;
"page-break-after"?: Property.PageBreakAfter;
"page-break-before"?: Property.PageBreakBefore;
"page-break-inside"?: Property.PageBreakInside;
"paint-order"?: Property.PaintOrder;
"perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"pointer-events"?: Property.PointerEvents;
"print-color-adjust"?: Property.PrintColorAdjust;
"row-gap"?: Property.RowGap<string | number>;
"ruby-align"?: Property.RubyAlign;
"ruby-merge"?: Property.RubyMerge;
"ruby-position"?: Property.RubyPosition;
"scroll-behavior"?: Property.ScrollBehavior;
"scroll-margin-block-end"?: Property.ScrollMarginBlockEnd<string | number>;
"scroll-margin-block-start"?: Property.ScrollMarginBlockStart<string | number>;
"scroll-margin-bottom"?: Property.ScrollMarginBottom<string | number>;
"scroll-margin-inline-end"?: Property.ScrollMarginInlineEnd<string | number>;
"scroll-margin-inline-start"?: Property.ScrollMarginInlineStart<string | number>;
"scroll-margin-left"?: Property.ScrollMarginLeft<string | number>;
"scroll-margin-right"?: Property.ScrollMarginRight<string | number>;
"scroll-margin-top"?: Property.ScrollMarginTop<string | number>;
"scroll-padding-block-end"?: Property.ScrollPaddingBlockEnd<string | number>;
"scroll-padding-block-start"?: Property.ScrollPaddingBlockStart<string | number>;
"scroll-padding-bottom"?: Property.ScrollPaddingBottom<string | number>;
"scroll-padding-inline-end"?: Property.ScrollPaddingInlineEnd<string | number>;
"scroll-padding-inline-start"?: Property.ScrollPaddingInlineStart<string | number>;
"scroll-padding-left"?: Property.ScrollPaddingLeft<string | number>;
"scroll-padding-right"?: Property.ScrollPaddingRight<string | number>;
"scroll-padding-top"?: Property.ScrollPaddingTop<string | number>;
"scroll-snap-align"?: Property.ScrollSnapAlign;
"scroll-snap-margin-bottom"?: Property.ScrollMarginBottom<string | number>;
"scroll-snap-margin-left"?: Property.ScrollMarginLeft<string | number>;
"scroll-snap-margin-right"?: Property.ScrollMarginRight<string | number>;
"scroll-snap-margin-top"?: Property.ScrollMarginTop<string | number>;
"scroll-snap-stop"?: Property.ScrollSnapStop;
"scroll-snap-type"?: Property.ScrollSnapType;
"scroll-timeline-axis"?: Property.ScrollTimelineAxis;
"scroll-timeline-name"?: Property.ScrollTimelineName;
"scrollbar-color"?: Property.ScrollbarColor;
"scrollbar-gutter"?: Property.ScrollbarGutter;
"scrollbar-width"?: Property.ScrollbarWidth;
"shape-image-threshold"?: Property.ShapeImageThreshold;
"shape-margin"?: Property.ShapeMargin<string | number>;
"shape-outside"?: Property.ShapeOutside;
"tab-size"?: Property.TabSize<string | number>;
"table-layout"?: Property.TableLayout;
"text-align"?: Property.TextAlign;
"text-align-last"?: Property.TextAlignLast;
"text-combine-upright"?: Property.TextCombineUpright;
"text-decoration-color"?: Property.TextDecorationColor;
"text-decoration-line"?: Property.TextDecorationLine;
"text-decoration-skip"?: Property.TextDecorationSkip;
"text-decoration-skip-ink"?: Property.TextDecorationSkipInk;
"text-decoration-style"?: Property.TextDecorationStyle;
"text-decoration-thickness"?: Property.TextDecorationThickness<string | number>;
"text-emphasis-color"?: Property.TextEmphasisColor;
"text-emphasis-position"?: Property.TextEmphasisPosition;
"text-emphasis-style"?: Property.TextEmphasisStyle;
"text-indent"?: Property.TextIndent<string | number>;
"text-justify"?: Property.TextJustify;
"text-orientation"?: Property.TextOrientation;
"text-overflow"?: Property.TextOverflow;
"text-rendering"?: Property.TextRendering;
"text-shadow"?: Property.TextShadow;
"text-size-adjust"?: Property.TextSizeAdjust;
"text-transform"?: Property.TextTransform;
"text-underline-offset"?: Property.TextUnderlineOffset<string | number>;
"text-underline-position"?: Property.TextUnderlinePosition;
"text-wrap"?: Property.TextWrap;
"timeline-scope"?: Property.TimelineScope;
"touch-action"?: Property.TouchAction;
"transform-box"?: Property.TransformBox;
"transform-origin"?: Property.TransformOrigin<string | number>;
"transform-style"?: Property.TransformStyle;
"transition-behavior"?: Property.TransitionBehavior;
"transition-delay"?: Property.TransitionDelay<string & {}>;
"transition-duration"?: Property.TransitionDuration<string & {}>;
"transition-property"?: Property.TransitionProperty;
"transition-timing-function"?: Property.TransitionTimingFunction;
"unicode-bidi"?: Property.UnicodeBidi;
"user-select"?: Property.UserSelect;
"vertical-align"?: Property.VerticalAlign<string | number>;
"view-timeline-axis"?: Property.ViewTimelineAxis;
"view-timeline-inset"?: Property.ViewTimelineInset<string | number>;
"view-timeline-name"?: Property.ViewTimelineName;
"view-transition-name"?: Property.ViewTransitionName;
"white-space"?: Property.WhiteSpace;
"white-space-collapse"?: Property.WhiteSpaceCollapse;
"white-space-trim"?: Property.WhiteSpaceTrim;
"will-change"?: Property.WillChange;
"word-break"?: Property.WordBreak;
"word-spacing"?: Property.WordSpacing<string | number>;
"word-wrap"?: Property.WordWrap;
"writing-mode"?: Property.WritingMode;
"z-index"?: Property.ZIndex;
"animation-range"?: Property.AnimationRange<string | number>;
"background-position"?: Property.BackgroundPosition<string | number>;
"border-block"?: Property.BorderBlock<string | number>;
"border-block-end"?: Property.BorderBlockEnd<string | number>;
"border-block-start"?: Property.BorderBlockStart<string | number>;
"border-bottom"?: Property.BorderBottom<string | number>;
"border-color"?: Property.BorderColor;
"border-image"?: Property.BorderImage;
"border-inline"?: Property.BorderInline<string | number>;
"border-inline-end"?: Property.BorderInlineEnd<string | number>;
"border-inline-start"?: Property.BorderInlineStart<string | number>;
"border-left"?: Property.BorderLeft<string | number>;
"border-radius"?: Property.BorderRadius<string | number>;
"border-right"?: Property.BorderRight<string | number>;
"border-style"?: Property.BorderStyle;
"border-top"?: Property.BorderTop<string | number>;
"border-width"?: Property.BorderWidth<string | number>;
"column-rule"?: Property.ColumnRule<string | number>;
"contain-intrinsic-size"?: Property.ContainIntrinsicSize<string | number>;
"flex-flow"?: Property.FlexFlow;
"grid-area"?: Property.GridArea;
"grid-column"?: Property.GridColumn;
"grid-row"?: Property.GridRow;
"grid-template"?: Property.GridTemplate;
"inset-block"?: Property.InsetBlock<string | number>;
"inset-inline"?: Property.InsetInline<string | number>;
"line-clamp"?: Property.LineClamp;
"list-style"?: Property.ListStyle;
"margin-block"?: Property.MarginBlock<string | number>;
"margin-inline"?: Property.MarginInline<string | number>;
"mask-border"?: Property.MaskBorder;
"overscroll-behavior"?: Property.OverscrollBehavior;
"padding-block"?: Property.PaddingBlock<string | number>;
"padding-inline"?: Property.PaddingInline<string | number>;
"place-content"?: Property.PlaceContent;
"place-items"?: Property.PlaceItems;
"place-self"?: Property.PlaceSelf;
"scroll-margin"?: Property.ScrollMargin<string | number>;
"scroll-margin-block"?: Property.ScrollMarginBlock<string | number>;
"scroll-margin-inline"?: Property.ScrollMarginInline<string | number>;
"scroll-padding"?: Property.ScrollPadding<string | number>;
"scroll-padding-block"?: Property.ScrollPaddingBlock<string | number>;
"scroll-padding-inline"?: Property.ScrollPaddingInline<string | number>;
"scroll-snap-margin"?: Property.ScrollMargin<string | number>;
"scroll-timeline"?: Property.ScrollTimeline;
"text-decoration"?: Property.TextDecoration<string | number>;
"text-emphasis"?: Property.TextEmphasis;
"view-timeline"?: Property.ViewTimeline;
"-moz-animation-delay"?: Property.AnimationDelay<string & {}>;
"-moz-animation-direction"?: Property.AnimationDirection;
"-moz-animation-duration"?: Property.AnimationDuration<string & {}>;
"-moz-animation-fill-mode"?: Property.AnimationFillMode;
"-moz-animation-iteration-count"?: Property.AnimationIterationCount;
"-moz-animation-name"?: Property.AnimationName;
"-moz-animation-play-state"?: Property.AnimationPlayState;
"-moz-animation-timing-function"?: Property.AnimationTimingFunction;
"-moz-appearance"?: Property.MozAppearance;
"-moz-binding"?: Property.MozBinding;
"-moz-border-bottom-colors"?: Property.MozBorderBottomColors;
"-moz-border-end-color"?: Property.BorderInlineEndColor;
"-moz-border-end-style"?: Property.BorderInlineEndStyle;
"-moz-border-end-width"?: Property.BorderInlineEndWidth<string | number>;
"-moz-border-left-colors"?: Property.MozBorderLeftColors;
"-moz-border-right-colors"?: Property.MozBorderRightColors;
"-moz-border-start-color"?: Property.BorderInlineStartColor;
"-moz-border-start-style"?: Property.BorderInlineStartStyle;
"-moz-border-top-colors"?: Property.MozBorderTopColors;
"-moz-box-sizing"?: Property.BoxSizing;
"-moz-column-count"?: Property.ColumnCount;
"-moz-column-fill"?: Property.ColumnFill;
"-moz-column-rule-color"?: Property.ColumnRuleColor;
"-moz-column-rule-style"?: Property.ColumnRuleStyle;
"-moz-column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"-moz-column-width"?: Property.ColumnWidth<string | number>;
"-moz-context-properties"?: Property.MozContextProperties;
"-moz-font-feature-settings"?: Property.FontFeatureSettings;
"-moz-font-language-override"?: Property.FontLanguageOverride;
"-moz-hyphens"?: Property.Hyphens;
"-moz-image-region"?: Property.MozImageRegion;
"-moz-margin-end"?: Property.MarginInlineEnd<string | number>;
"-moz-margin-start"?: Property.MarginInlineStart<string | number>;
"-moz-orient"?: Property.MozOrient;
"-moz-osx-font-smoothing"?: Property.FontSmooth<string | number>;
"-moz-outline-radius-bottomleft"?: Property.MozOutlineRadiusBottomleft<string | number>;
"-moz-outline-radius-bottomright"?: Property.MozOutlineRadiusBottomright<string | number>;
"-moz-outline-radius-topleft"?: Property.MozOutlineRadiusTopleft<string | number>;
"-moz-outline-radius-topright"?: Property.MozOutlineRadiusTopright<string | number>;
"-moz-padding-end"?: Property.PaddingInlineEnd<string | number>;
"-moz-padding-start"?: Property.PaddingInlineStart<string | number>;
"-moz-stack-sizing"?: Property.MozStackSizing;
"-moz-tab-size"?: Property.TabSize<string | number>;
"-moz-text-blink"?: Property.MozTextBlink;
"-moz-text-size-adjust"?: Property.TextSizeAdjust;
"-moz-user-focus"?: Property.MozUserFocus;
"-moz-user-modify"?: Property.MozUserModify;
"-moz-user-select"?: Property.UserSelect;
"-moz-window-dragging"?: Property.MozWindowDragging;
"-moz-window-shadow"?: Property.MozWindowShadow;
"-ms-accelerator"?: Property.MsAccelerator;
"-ms-block-progression"?: Property.MsBlockProgression;
"-ms-content-zoom-chaining"?: Property.MsContentZoomChaining;
"-ms-content-zoom-limit-max"?: Property.MsContentZoomLimitMax;
"-ms-content-zoom-limit-min"?: Property.MsContentZoomLimitMin;
"-ms-content-zoom-snap-points"?: Property.MsContentZoomSnapPoints;
"-ms-content-zoom-snap-type"?: Property.MsContentZoomSnapType;
"-ms-content-zooming"?: Property.MsContentZooming;
"-ms-filter"?: Property.MsFilter;
"-ms-flex-direction"?: Property.FlexDirection;
"-ms-flex-positive"?: Property.FlexGrow;
"-ms-flow-from"?: Property.MsFlowFrom;
"-ms-flow-into"?: Property.MsFlowInto;
"-ms-grid-columns"?: Property.MsGridColumns<string | number>;
"-ms-grid-rows"?: Property.MsGridRows<string | number>;
"-ms-high-contrast-adjust"?: Property.MsHighContrastAdjust;
"-ms-hyphenate-limit-chars"?: Property.MsHyphenateLimitChars;
"-ms-hyphenate-limit-lines"?: Property.MsHyphenateLimitLines;
"-ms-hyphenate-limit-zone"?: Property.MsHyphenateLimitZone<string | number>;
"-ms-hyphens"?: Property.Hyphens;
"-ms-ime-align"?: Property.MsImeAlign;
"-ms-line-break"?: Property.LineBreak;
"-ms-order"?: Property.Order;
"-ms-overflow-style"?: Property.MsOverflowStyle;
"-ms-overflow-x"?: Property.OverflowX;
"-ms-overflow-y"?: Property.OverflowY;
"-ms-scroll-chaining"?: Property.MsScrollChaining;
"-ms-scroll-limit-x-max"?: Property.MsScrollLimitXMax<string | number>;
"-ms-scroll-limit-x-min"?: Property.MsScrollLimitXMin<string | number>;
"-ms-scroll-limit-y-max"?: Property.MsScrollLimitYMax<string | number>;
"-ms-scroll-limit-y-min"?: Property.MsScrollLimitYMin<string | number>;
"-ms-scroll-rails"?: Property.MsScrollRails;
"-ms-scroll-snap-points-x"?: Property.MsScrollSnapPointsX;
"-ms-scroll-snap-points-y"?: Property.MsScrollSnapPointsY;
"-ms-scroll-snap-type"?: Property.MsScrollSnapType;
"-ms-scroll-translation"?: Property.MsScrollTranslation;
"-ms-scrollbar-3dlight-color"?: Property.MsScrollbar3dlightColor;
"-ms-scrollbar-arrow-color"?: Property.MsScrollbarArrowColor;
"-ms-scrollbar-base-color"?: Property.MsScrollbarBaseColor;
"-ms-scrollbar-darkshadow-color"?: Property.MsScrollbarDarkshadowColor;
"-ms-scrollbar-face-color"?: Property.MsScrollbarFaceColor;
"-ms-scrollbar-highlight-color"?: Property.MsScrollbarHighlightColor;
"-ms-scrollbar-shadow-color"?: Property.MsScrollbarShadowColor;
"-ms-scrollbar-track-color"?: Property.MsScrollbarTrackColor;
"-ms-text-autospace"?: Property.MsTextAutospace;
"-ms-text-combine-horizontal"?: Property.TextCombineUpright;
"-ms-text-overflow"?: Property.TextOverflow;
"-ms-touch-action"?: Property.TouchAction;
"-ms-touch-select"?: Property.MsTouchSelect;
"-ms-transform"?: Property.Transform;
"-ms-transform-origin"?: Property.TransformOrigin<string | number>;
"-ms-transition-delay"?: Property.TransitionDelay<string & {}>;
"-ms-transition-duration"?: Property.TransitionDuration<string & {}>;
"-ms-transition-property"?: Property.TransitionProperty;
"-ms-transition-timing-function"?: Property.TransitionTimingFunction;
"-ms-user-select"?: Property.MsUserSelect;
"-ms-word-break"?: Property.WordBreak;
"-ms-wrap-flow"?: Property.MsWrapFlow;
"-ms-wrap-margin"?: Property.MsWrapMargin<string | number>;
"-ms-wrap-through"?: Property.MsWrapThrough;
"-ms-writing-mode"?: Property.WritingMode;
"-webkit-align-content"?: Property.AlignContent;
"-webkit-align-items"?: Property.AlignItems;
"-webkit-align-self"?: Property.AlignSelf;
"-webkit-animation-delay"?: Property.AnimationDelay<string & {}>;
"-webkit-animation-direction"?: Property.AnimationDirection;
"-webkit-animation-duration"?: Property.AnimationDuration<string & {}>;
"-webkit-animation-fill-mode"?: Property.AnimationFillMode;
"-webkit-animation-iteration-count"?: Property.AnimationIterationCount;
"-webkit-animation-name"?: Property.AnimationName;
"-webkit-animation-play-state"?: Property.AnimationPlayState;
"-webkit-animation-timing-function"?: Property.AnimationTimingFunction;
"-webkit-appearance"?: Property.WebkitAppearance;
"-webkit-backdrop-filter"?: Property.BackdropFilter;
"-webkit-backface-visibility"?: Property.BackfaceVisibility;
"-webkit-background-clip"?: Property.BackgroundClip;
"-webkit-background-origin"?: Property.BackgroundOrigin;
"-webkit-background-size"?: Property.BackgroundSize<string | number>;
"-webkit-border-before-color"?: Property.WebkitBorderBeforeColor;
"-webkit-border-before-style"?: Property.WebkitBorderBeforeStyle;
"-webkit-border-before-width"?: Property.WebkitBorderBeforeWidth<string | number>;
"-webkit-border-bottom-left-radius"?: Property.BorderBottomLeftRadius<string | number>;
"-webkit-border-bottom-right-radius"?: Property.BorderBottomRightRadius<string | number>;
"-webkit-border-image-slice"?: Property.BorderImageSlice;
"-webkit-border-top-left-radius"?: Property.BorderTopLeftRadius<string | number>;
"-webkit-border-top-right-radius"?: Property.BorderTopRightRadius<string | number>;
"-webkit-box-decoration-break"?: Property.BoxDecorationBreak;
"-webkit-box-reflect"?: Property.WebkitBoxReflect<string | number>;
"-webkit-box-shadow"?: Property.BoxShadow;
"-webkit-box-sizing"?: Property.BoxSizing;
"-webkit-clip-path"?: Property.ClipPath;
"-webkit-column-count"?: Property.ColumnCount;
"-webkit-column-fill"?: Property.ColumnFill;
"-webkit-column-rule-color"?: Property.ColumnRuleColor;
"-webkit-column-rule-style"?: Property.ColumnRuleStyle;
"-webkit-column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"-webkit-column-span"?: Property.ColumnSpan;
"-webkit-column-width"?: Property.ColumnWidth<string | number>;
"-webkit-filter"?: Property.Filter;
"-webkit-flex-basis"?: Property.FlexBasis<string | number>;
"-webkit-flex-direction"?: Property.FlexDirection;
"-webkit-flex-grow"?: Property.FlexGrow;
"-webkit-flex-shrink"?: Property.FlexShrink;
"-webkit-flex-wrap"?: Property.FlexWrap;
"-webkit-font-feature-settings"?: Property.FontFeatureSettings;
"-webkit-font-kerning"?: Property.FontKerning;
"-webkit-font-smoothing"?: Property.FontSmooth<string | number>;
"-webkit-font-variant-ligatures"?: Property.FontVariantLigatures;
"-webkit-hyphenate-character"?: Property.HyphenateCharacter;
"-webkit-hyphens"?: Property.Hyphens;
"-webkit-initial-letter"?: Property.InitialLetter;
"-webkit-justify-content"?: Property.JustifyContent;
"-webkit-line-break"?: Property.LineBreak;
"-webkit-line-clamp"?: Property.WebkitLineClamp;
"-webkit-margin-end"?: Property.MarginInlineEnd<string | number>;
"-webkit-margin-start"?: Property.MarginInlineStart<string | number>;
"-webkit-mask-attachment"?: Property.WebkitMaskAttachment;
"-webkit-mask-box-image-outset"?: Property.MaskBorderOutset<string | number>;
"-webkit-mask-box-image-repeat"?: Property.MaskBorderRepeat;
"-webkit-mask-box-image-slice"?: Property.MaskBorderSlice;
"-webkit-mask-box-image-source"?: Property.MaskBorderSource;
"-webkit-mask-box-image-width"?: Property.MaskBorderWidth<string | number>;
"-webkit-mask-clip"?: Property.WebkitMaskClip;
"-webkit-mask-composite"?: Property.WebkitMaskComposite;
"-webkit-mask-image"?: Property.WebkitMaskImage;
"-webkit-mask-origin"?: Property.WebkitMaskOrigin;
"-webkit-mask-position"?: Property.WebkitMaskPosition<string | number>;
"-webkit-mask-position-x"?: Property.WebkitMaskPositionX<string | number>;
"-webkit-mask-position-y"?: Property.WebkitMaskPositionY<string | number>;
"-webkit-mask-repeat"?: Property.WebkitMaskRepeat;
"-webkit-mask-repeat-x"?: Property.WebkitMaskRepeatX;
"-webkit-mask-repeat-y"?: Property.WebkitMaskRepeatY;
"-webkit-mask-size"?: Property.WebkitMaskSize<string | number>;
"-webkit-max-inline-size"?: Property.MaxInlineSize<string | number>;
"-webkit-order"?: Property.Order;
"-webkit-overflow-scrolling"?: Property.WebkitOverflowScrolling;
"-webkit-padding-end"?: Property.PaddingInlineEnd<string | number>;
"-webkit-padding-start"?: Property.PaddingInlineStart<string | number>;
"-webkit-perspective"?: Property.Perspective<string | number>;
"-webkit-perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"-webkit-print-color-adjust"?: Property.PrintColorAdjust;
"-webkit-ruby-position"?: Property.RubyPosition;
"-webkit-scroll-snap-type"?: Property.ScrollSnapType;
"-webkit-shape-margin"?: Property.ShapeMargin<string | number>;
"-webkit-tap-highlight-color"?: Property.WebkitTapHighlightColor;
"-webkit-text-combine"?: Property.TextCombineUpright;
"-webkit-text-decoration-color"?: Property.TextDecorationColor;
"-webkit-text-decoration-line"?: Property.TextDecorationLine;
"-webkit-text-decoration-skip"?: Property.TextDecorationSkip;
"-webkit-text-decoration-style"?: Property.TextDecorationStyle;
"-webkit-text-emphasis-color"?: Property.TextEmphasisColor;
"-webkit-text-emphasis-position"?: Property.TextEmphasisPosition;
"-webkit-text-emphasis-style"?: Property.TextEmphasisStyle;
"-webkit-text-fill-color"?: Property.WebkitTextFillColor;
"-webkit-text-orientation"?: Property.TextOrientation;
"-webkit-text-size-adjust"?: Property.TextSizeAdjust;
"-webkit-text-stroke-color"?: Property.WebkitTextStrokeColor;
"-webkit-text-stroke-width"?: Property.WebkitTextStrokeWidth<string | number>;
"-webkit-text-underline-position"?: Property.TextUnderlinePosition;
"-webkit-touch-callout"?: Property.WebkitTouchCallout;
"-webkit-transform"?: Property.Transform;
"-webkit-transform-origin"?: Property.TransformOrigin<string | number>;
"-webkit-transform-style"?: Property.TransformStyle;
"-webkit-transition-delay"?: Property.TransitionDelay<string & {}>;
"-webkit-transition-duration"?: Property.TransitionDuration<string & {}>;
"-webkit-transition-property"?: Property.TransitionProperty;
"-webkit-transition-timing-function"?: Property.TransitionTimingFunction;
"-webkit-user-modify"?: Property.WebkitUserModify;
"-webkit-user-select"?: Property.UserSelect;
"-webkit-writing-mode"?: Property.WritingMode;
"-moz-animation"?: Property.Animation<string & {}>;
"-moz-border-image"?: Property.BorderImage;
"-moz-column-rule"?: Property.ColumnRule<string | number>;
"-moz-columns"?: Property.Columns<string | number>;
"-moz-outline-radius"?: Property.MozOutlineRadius<string | number>;
"-ms-content-zoom-limit"?: Property.MsContentZoomLimit;
"-ms-content-zoom-snap"?: Property.MsContentZoomSnap;
"-ms-flex"?: Property.Flex<string | number>;
"-ms-scroll-limit"?: Property.MsScrollLimit;
"-ms-scroll-snap-x"?: Property.MsScrollSnapX;
"-ms-scroll-snap-y"?: Property.MsScrollSnapY;
"-ms-transition"?: Property.Transition<string & {}>;
"-webkit-animation"?: Property.Animation<string & {}>;
"-webkit-border-before"?: Property.WebkitBorderBefore<string | number>;
"-webkit-border-image"?: Property.BorderImage;
"-webkit-border-radius"?: Property.BorderRadius<string | number>;
"-webkit-column-rule"?: Property.ColumnRule<string | number>;
"-webkit-columns"?: Property.Columns<string | number>;
"-webkit-flex"?: Property.Flex<string | number>;
"-webkit-flex-flow"?: Property.FlexFlow;
"-webkit-mask"?: Property.WebkitMask<string | number>;
"-webkit-mask-box-image"?: Property.MaskBorder;
"-webkit-text-emphasis"?: Property.TextEmphasis;
"-webkit-text-stroke"?: Property.WebkitTextStroke<string | number>;
"-webkit-transition"?: Property.Transition<string & {}>;
"box-align"?: Property.BoxAlign;
"box-direction"?: Property.BoxDirection;
"box-flex"?: Property.BoxFlex;
"box-flex-group"?: Property.BoxFlexGroup;
"box-lines"?: Property.BoxLines;
"box-ordinal-group"?: Property.BoxOrdinalGroup;
"box-orient"?: Property.BoxOrient;
"box-pack"?: Property.BoxPack;
"grid-column-gap"?: Property.GridColumnGap<string | number>;
"grid-gap"?: Property.GridGap<string | number>;
"grid-row-gap"?: Property.GridRowGap<string | number>;
"ime-mode"?: Property.ImeMode;
"offset-block"?: Property.InsetBlock<string | number>;
"offset-block-end"?: Property.InsetBlockEnd<string | number>;
"offset-block-start"?: Property.InsetBlockStart<string | number>;
"offset-inline"?: Property.InsetInline<string | number>;
"offset-inline-end"?: Property.InsetInlineEnd<string | number>;
"offset-inline-start"?: Property.InsetInlineStart<string | number>;
"scroll-snap-coordinate"?: Property.ScrollSnapCoordinate<string | number>;
"scroll-snap-destination"?: Property.ScrollSnapDestination<string | number>;
"scroll-snap-points-x"?: Property.ScrollSnapPointsX;
"scroll-snap-points-y"?: Property.ScrollSnapPointsY;
"scroll-snap-type-x"?: Property.ScrollSnapTypeX;
"scroll-snap-type-y"?: Property.ScrollSnapTypeY;
"-khtml-box-align"?: Property.BoxAlign;
"-khtml-box-direction"?: Property.BoxDirection;
"-khtml-box-flex"?: Property.BoxFlex;
"-khtml-box-flex-group"?: Property.BoxFlexGroup;
"-khtml-box-lines"?: Property.BoxLines;
"-khtml-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-khtml-box-orient"?: Property.BoxOrient;
"-khtml-box-pack"?: Property.BoxPack;
"-khtml-line-break"?: Property.LineBreak;
"-khtml-opacity"?: Property.Opacity;
"-khtml-user-select"?: Property.UserSelect;
"-moz-backface-visibility"?: Property.BackfaceVisibility;
"-moz-background-clip"?: Property.BackgroundClip;
"-moz-background-inline-policy"?: Property.BoxDecorationBreak;
"-moz-background-origin"?: Property.BackgroundOrigin;
"-moz-background-size"?: Property.BackgroundSize<string | number>;
"-moz-border-radius"?: Property.BorderRadius<string | number>;
"-moz-border-radius-bottomleft"?: Property.BorderBottomLeftRadius<string | number>;
"-moz-border-radius-bottomright"?: Property.BorderBottomRightRadius<string | number>;
"-moz-border-radius-topleft"?: Property.BorderTopLeftRadius<string | number>;
"-moz-border-radius-topright"?: Property.BorderTopRightRadius<string | number>;
"-moz-box-align"?: Property.BoxAlign;
"-moz-box-direction"?: Property.BoxDirection;
"-moz-box-flex"?: Property.BoxFlex;
"-moz-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-moz-box-orient"?: Property.BoxOrient;
"-moz-box-pack"?: Property.BoxPack;
"-moz-box-shadow"?: Property.BoxShadow;
"-moz-float-edge"?: Property.MozFloatEdge;
"-moz-force-broken-image-icon"?: Property.MozForceBrokenImageIcon;
"-moz-opacity"?: Property.Opacity;
"-moz-outline"?: Property.Outline<string | number>;
"-moz-outline-color"?: Property.OutlineColor;
"-moz-outline-style"?: Property.OutlineStyle;
"-moz-outline-width"?: Property.OutlineWidth<string | number>;
"-moz-perspective"?: Property.Perspective<string | number>;
"-moz-perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"-moz-text-align-last"?: Property.TextAlignLast;
"-moz-text-decoration-color"?: Property.TextDecorationColor;
"-moz-text-decoration-line"?: Property.TextDecorationLine;
"-moz-text-decoration-style"?: Property.TextDecorationStyle;
"-moz-transform"?: Property.Transform;
"-moz-transform-origin"?: Property.TransformOrigin<string | number>;
"-moz-transform-style"?: Property.TransformStyle;
"-moz-transition"?: Property.Transition<string & {}>;
"-moz-transition-delay"?: Property.TransitionDelay<string & {}>;
"-moz-transition-duration"?: Property.TransitionDuration<string & {}>;
"-moz-transition-property"?: Property.TransitionProperty;
"-moz-transition-timing-function"?: Property.TransitionTimingFunction;
"-moz-user-input"?: Property.MozUserInput;
"-ms-ime-mode"?: Property.ImeMode;
"-o-animation"?: Property.Animation<string & {}>;
"-o-animation-delay"?: Property.AnimationDelay<string & {}>;
"-o-animation-direction"?: Property.AnimationDirection;
"-o-animation-duration"?: Property.AnimationDuration<string & {}>;
"-o-animation-fill-mode"?: Property.AnimationFillMode;
"-o-animation-iteration-count"?: Property.AnimationIterationCount;
"-o-animation-name"?: Property.AnimationName;
"-o-animation-play-state"?: Property.AnimationPlayState;
"-o-animation-timing-function"?: Property.AnimationTimingFunction;
"-o-background-size"?: Property.BackgroundSize<string | number>;
"-o-border-image"?: Property.BorderImage;
"-o-object-fit"?: Property.ObjectFit;
"-o-object-position"?: Property.ObjectPosition<string | number>;
"-o-tab-size"?: Property.TabSize<string | number>;
"-o-text-overflow"?: Property.TextOverflow;
"-o-transform"?: Property.Transform;
"-o-transform-origin"?: Property.TransformOrigin<string | number>;
"-o-transition"?: Property.Transition<string & {}>;
"-o-transition-delay"?: Property.TransitionDelay<string & {}>;
"-o-transition-duration"?: Property.TransitionDuration<string & {}>;
"-o-transition-property"?: Property.TransitionProperty;
"-o-transition-timing-function"?: Property.TransitionTimingFunction;
"-webkit-box-align"?: Property.BoxAlign;
"-webkit-box-direction"?: Property.BoxDirection;
"-webkit-box-flex"?: Property.BoxFlex;
"-webkit-box-flex-group"?: Property.BoxFlexGroup;
"-webkit-box-lines"?: Property.BoxLines;
"-webkit-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-webkit-box-orient"?: Property.BoxOrient;
"-webkit-box-pack"?: Property.BoxPack;
"alignment-baseline"?: Property.AlignmentBaseline;
"baseline-shift"?: Property.BaselineShift<string | number>;
"clip-rule"?: Property.ClipRule;
"color-interpolation"?: Property.ColorInterpolation;
"color-rendering"?: Property.ColorRendering;
"dominant-baseline"?: Property.DominantBaseline;
"fill-opacity"?: Property.FillOpacity;
"fill-rule"?: Property.FillRule;
"flood-color"?: Property.FloodColor;
"flood-opacity"?: Property.FloodOpacity;
"glyph-orientation-vertical"?: Property.GlyphOrientationVertical;
"lighting-color"?: Property.LightingColor;
"marker-end"?: Property.MarkerEnd;
"marker-mid"?: Property.MarkerMid;
"marker-start"?: Property.MarkerStart;
"shape-rendering"?: Property.ShapeRendering;
"stop-color"?: Property.StopColor;
"stop-opacity"?: Property.StopOpacity;
"stroke-dasharray"?: Property.StrokeDasharray<string | number>;
"stroke-dashoffset"?: Property.StrokeDashoffset<string | number>;
"stroke-linecap"?: Property.StrokeLinecap;
"stroke-linejoin"?: Property.StrokeLinejoin;
"stroke-miterlimit"?: Property.StrokeMiterlimit;
"stroke-opacity"?: Property.StrokeOpacity;
"stroke-width"?: Property.StrokeWidth<string | number>;
"text-anchor"?: Property.TextAnchor;
"vector-effect"?: Property.VectorEffect;
}, Partial<CSSProperties> | {
[x: `--${string}`]: string | number;
accentColor?: Property.AccentColor;
alignContent?: Property.AlignContent;
alignItems?: Property.AlignItems;
alignSelf?: Property.AlignSelf;
alignTracks?: Property.AlignTracks;
animationComposition?: Property.AnimationComposition;
animationDelay?: Property.AnimationDelay<string & {}>;
animationDirection?: Property.AnimationDirection;
animationDuration?: Property.AnimationDuration<string & {}>;
animationFillMode?: Property.AnimationFillMode;
animationIterationCount?: Property.AnimationIterationCount;
animationName?: Property.AnimationName;
animationPlayState?: Property.AnimationPlayState;
animationRangeEnd?: Property.AnimationRangeEnd<string | number>;
animationRangeStart?: Property.AnimationRangeStart<string | number>;
animationTimeline?: Property.AnimationTimeline;
animationTimingFunction?: Property.AnimationTimingFunction;
appearance?: Property.Appearance;
aspectRatio?: Property.AspectRatio;
backdropFilter?: Property.BackdropFilter;
backfaceVisibility?: Property.BackfaceVisibility;
backgroundAttachment?: Property.BackgroundAttachment;
backgroundBlendMode?: Property.BackgroundBlendMode;
backgroundClip?: Property.BackgroundClip;
backgroundColor?: Property.BackgroundColor;
backgroundImage?: Property.BackgroundImage;
backgroundOrigin?: Property.BackgroundOrigin;
backgroundPositionX?: Property.BackgroundPositionX<string | number>;
backgroundPositionY?: Property.BackgroundPositionY<string | number>;
backgroundRepeat?: Property.BackgroundRepeat;
backgroundSize?: Property.BackgroundSize<string | number>;
blockOverflow?: Property.BlockOverflow;
blockSize?: Property.BlockSize<string | number>;
borderBlockColor?: Property.BorderBlockColor;
borderBlockEndColor?: Property.BorderBlockEndColor;
borderBlockEndStyle?: Property.BorderBlockEndStyle;
borderBlockEndWidth?: Property.BorderBlockEndWidth<string | number>;
borderBlockStartColor?: Property.BorderBlockStartColor;
borderBlockStartStyle?: Property.BorderBlockStartStyle;
borderBlockStartWidth?: Property.BorderBlockStartWidth<string | number>;
borderBlockStyle?: Property.BorderBlockStyle;
borderBlockWidth?: Property.BorderBlockWidth<string | number>;
borderBottomColor?: Property.BorderBottomColor;
borderBottomLeftRadius?: Property.BorderBottomLeftRadius<string | number>;
borderBottomRightRadius?: Property.BorderBottomRightRadius<string | number>;
borderBottomStyle?: Property.BorderBottomStyle;
borderBottomWidth?: Property.BorderBottomWidth<string | number>;
borderCollapse?: Property.BorderCollapse;
borderEndEndRadius?: Property.BorderEndEndRadius<string | number>;
borderEndStartRadius?: Property.BorderEndStartRadius<string | number>;
borderImageOutset?: Property.BorderImageOutset<string | number>;
borderImageRepeat?: Property.BorderImageRepeat;
borderImageSlice?: Property.BorderImageSlice;
borderImageSource?: Property.BorderImageSource;
borderImageWidth?: Property.BorderImageWidth<string | number>;
borderInlineColor?: Property.BorderInlineColor;
borderInlineEndColor?: Property.BorderInlineEndColor;
borderInlineEndStyle?: Property.BorderInlineEndStyle;
borderInlineEndWidth?: Property.BorderInlineEndWidth<string | number>;
borderInlineStartColor?: Property.BorderInlineStartColor;
borderInlineStartStyle?: Property.BorderInlineStartStyle;
borderInlineStartWidth?: Property.BorderInlineStartWidth<string | number>;
borderInlineStyle?: Property.BorderInlineStyle;
borderInlineWidth?: Property.BorderInlineWidth<string | number>;
borderLeftColor?: Property.BorderLeftColor;
borderLeftStyle?: Property.BorderLeftStyle;
borderLeftWidth?: Property.BorderLeftWidth<string | number>;
borderRightColor?: Property.BorderRightColor;
borderRightStyle?: Property.BorderRightStyle;
borderRightWidth?: Property.BorderRightWidth<string | number>;
borderSpacing?: Property.BorderSpacing<string | number>;
borderStartEndRadius?: Property.BorderStartEndRadius<string | number>;
borderStartStartRadius?: Property.BorderStartStartRadius<string | number>;
borderTopColor?: Property.BorderTopColor;
borderTopLeftRadius?: Property.BorderTopLeftRadius<string | number>;
borderTopRightRadius?: Property.BorderTopRightRadius<string | number>;
borderTopStyle?: Property.BorderTopStyle;
borderTopWidth?: Property.BorderTopWidth<string | number>;
bottom?: Property.Bottom<string | number>;
boxDecorationBreak?: Property.BoxDecorationBreak;
boxShadow?: Property.BoxShadow;
boxSizing?: Property.BoxSizing;
breakAfter?: Property.BreakAfter;
breakBefore?: Property.BreakBefore;
breakInside?: Property.BreakInside;
captionSide?: Property.CaptionSide;
caretColor?: Property.CaretColor;
caretShape?: Property.CaretShape;
clear?: Property.Clear;
clipPath?: Property.ClipPath;
color?: Property.Color;
colorAdjust?: Property.PrintColorAdjust;
colorScheme?: Property.ColorScheme;
columnCount?: Property.ColumnCount;
columnFill?: Property.ColumnFill;
columnGap?: Property.ColumnGap<string | number>;
columnRuleColor?: Property.ColumnRuleColor;
columnRuleStyle?: Property.ColumnRuleStyle;
columnRuleWidth?: Property.ColumnRuleWidth<string | number>;
columnSpan?: Property.ColumnSpan;
columnWidth?: Property.ColumnWidth<string | number>;
contain?: Property.Contain;
containIntrinsicBlockSize?: Property.ContainIntrinsicBlockSize<string | number>;
containIntrinsicHeight?: Property.ContainIntrinsicHeight<string | number>;
containIntrinsicInlineSize?: Property.ContainIntrinsicInlineSize<string | number>;
containIntrinsicWidth?: Property.ContainIntrinsicWidth<string | number>;
containerName?: Property.ContainerName;
containerType?: Property.ContainerType;
content?: Property.Content;
contentVisibility?: Property.ContentVisibility;
counterIncrement?: Property.CounterIncrement;
counterReset?: Property.CounterReset;
counterSet?: Property.CounterSet;
cursor?: Property.Cursor;
direction?: Property.Direction;
display?: Property.Display;
emptyCells?: Property.EmptyCells;
filter?: Property.Filter;
flexBasis?: Property.FlexBasis<string | number>;
flexDirection?: Property.FlexDirection;
flexGrow?: Property.FlexGrow;
flexShrink?: Property.FlexShrink;
flexWrap?: Property.FlexWrap;
float?: Property.Float;
fontFamily?: Property.FontFamily;
fontFeatureSettings?: Property.FontFeatureSettings;
fontKerning?: Property.FontKerning;
fontLanguageOverride?: Property.FontLanguageOverride;
fontOpticalSizing?: Property.FontOpticalSizing;
fontPalette?: Property.FontPalette;
fontSize?: Property.FontSize<string | number>;
fontSizeAdjust?: Property.FontSizeAdjust;
fontSmooth?: Property.FontSmooth<string | number>;
fontStretch?: Property.FontStretch;
fontStyle?: Property.FontStyle;
fontSynthesis?: Property.FontSynthesis;
fontSynthesisPosition?: Property.FontSynthesisPosition;
fontSynthesisSmallCaps?: Property.FontSynthesisSmallCaps;
fontSynthesisStyle?: Property.FontSynthesisStyle;
fontSynthesisWeight?: Property.FontSynthesisWeight;
fontVariant?: Property.FontVariant;
fontVariantAlternates?: Property.FontVariantAlternates;
fontVariantCaps?: Property.FontVariantCaps;
fontVariantEastAsian?: Property.FontVariantEastAsian;
fontVariantEmoji?: Property.FontVariantEmoji;
fontVariantLigatures?: Property.FontVariantLigatures;
fontVariantNumeric?: Property.FontVariantNumeric;
fontVariantPosition?: Property.FontVariantPosition;
fontVariationSettings?: Property.FontVariationSettings;
fontWeight?: Property.FontWeight;
forcedColorAdjust?: Property.ForcedColorAdjust;
gridAutoColumns?: Property.GridAutoColumns<string | number>;
gridAutoFlow?: Property.GridAutoFlow;
gridAutoRows?: Property.GridAutoRows<string | number>;
gridColumnEnd?: Property.GridColumnEnd;
gridColumnStart?: Property.GridColumnStart;
gridRowEnd?: Property.GridRowEnd;
gridRowStart?: Property.GridRowStart;
gridTemplateAreas?: Property.GridTemplateAreas;
gridTemplateColumns?: Property.GridTemplateColumns<string | number>;
gridTemplateRows?: Property.GridTemplateRows<string | number>;
hangingPunctuation?: Property.HangingPunctuation;
height?: Property.Height<string | number>;
hyphenateCharacter?: Property.HyphenateCharacter;
hyphenateLimitChars?: Property.HyphenateLimitChars;
hyphens?: Property.Hyphens;
imageOrientation?: Property.ImageOrientation;
imageRendering?: Property.ImageRendering;
imageResolution?: Property.ImageResolution;
initialLetter?: Property.InitialLetter;
inlineSize?: Property.InlineSize<string | number>;
inputSecurity?: Property.InputSecurity;
insetBlockEnd?: Property.InsetBlockEnd<string | number>;
insetBlockStart?: Property.InsetBlockStart<string | number>;
insetInlineEnd?: Property.InsetInlineEnd<string | number>;
insetInlineStart?: Property.InsetInlineStart<string | number>;
isolation?: Property.Isolation;
justifyContent?: Property.JustifyContent;
justifyItems?: Property.JustifyItems;
justifySelf?: Property.JustifySelf;
justifyTracks?: Property.JustifyTracks;
left?: Property.Left<string | number>;
letterSpacing?: Property.LetterSpacing<string | number>;
lineBreak?: Property.LineBreak;
lineHeight?: Property.LineHeight<string | number>;
lineHeightStep?: Property.LineHeightStep<string | number>;
listStyleImage?: Property.ListStyleImage;
listStylePosition?: Property.ListStylePosition;
listStyleType?: Property.ListStyleType;
marginBlockEnd?: Property.MarginBlockEnd<string | number>;
marginBlockStart?: Property.MarginBlockStart<string | number>;
marginBottom?: Property.MarginBottom<string | number>;
marginInlineEnd?: Property.MarginInlineEnd<string | number>;
marginInlineStart?: Property.MarginInlineStart<string | number>;
marginLeft?: Property.MarginLeft<string | number>;
marginRight?: Property.MarginRight<string | number>;
marginTop?: Property.MarginTop<string | number>;
marginTrim?: Property.MarginTrim;
maskBorderMode?: Property.MaskBorderMode;
maskBorderOutset?: Property.MaskBorderOutset<string | number>;
maskBorderRepeat?: Property.MaskBorderRepeat;
maskBorderSlice?: Property.MaskBorderSlice;
maskBorderSource?: Property.MaskBorderSource;
maskBorderWidth?: Property.MaskBorderWidth<string | number>;
maskClip?: Property.MaskClip;
maskComposite?: Property.MaskComposite;
maskImage?: Property.MaskImage;
maskMode?: Property.MaskMode;
maskOrigin?: Property.MaskOrigin;
maskPosition?: Property.MaskPosition<string | number>;
maskRepeat?: Property.MaskRepeat;
maskSize?: Property.MaskSize<string | number>;
maskType?: Property.MaskType;
masonryAutoFlow?: Property.MasonryAutoFlow;
mathDepth?: Property.MathDepth;
mathShift?: Property.MathShift;
mathStyle?: Property.MathStyle;
maxBlockSize?: Property.MaxBlockSize<string | number>;
maxHeight?: Property.MaxHeight<string | number>;
maxInlineSize?: Property.MaxInlineSize<string | number>;
maxLines?: Property.MaxLines;
maxWidth?: Property.MaxWidth<string | number>;
minBlockSize?: Property.MinBlockSize<string | number>;
minHeight?: Property.MinHeight<string | number>;
minInlineSize?: Property.MinInlineSize<string | number>;
minWidth?: Property.MinWidth<string | number>;
mixBlendMode?: Property.MixBlendMode;
motionDistance?: Property.OffsetDistance<string | number>;
motionPath?: Property.OffsetPath;
motionRotation?: Property.OffsetRotate;
objectFit?: Property.ObjectFit;
objectPosition?: Property.ObjectPosition<string | number>;
offsetAnchor?: Property.OffsetAnchor<string | number>;
offsetDistance?: Property.OffsetDistance<string | number>;
offsetPath?: Property.OffsetPath;
offsetPosition?: Property.OffsetPosition<string | number>;
offsetRotate?: Property.OffsetRotate;
offsetRotation?: Property.OffsetRotate;
opacity?: Property.Opacity;
order?: Property.Order;
orphans?: Property.Orphans;
outlineColor?: Property.OutlineColor;
outlineOffset?: Property.OutlineOffset<string | number>;
outlineStyle?: Property.OutlineStyle;
outlineWidth?: Property.OutlineWidth<string | number>;
overflowAnchor?: Property.OverflowAnchor;
overflowBlock?: Property.OverflowBlock;
overflowClipBox?: Property.OverflowClipBox;
overflowClipMargin?: Property.OverflowClipMargin<string | number>;
overflowInline?: Property.OverflowInline;
overflowWrap?: Property.OverflowWrap;
overflowX?: Property.OverflowX;
overflowY?: Property.OverflowY;
overlay?: Property.Overlay;
overscrollBehaviorBlock?: Property.OverscrollBehaviorBlock;
overscrollBehaviorInline?: Property.OverscrollBehaviorInline;
overscrollBehaviorX?: Property.OverscrollBehaviorX;
overscrollBehaviorY?: Property.OverscrollBehaviorY;
paddingBlockEnd?: Property.PaddingBlockEnd<string | number>;
paddingBlockStart?: Property.PaddingBlockStart<string | number>;
paddingBottom?: Property.PaddingBottom<string | number>;
paddingInlineEnd?: Property.PaddingInlineEnd<string | number>;
paddingInlineStart?: Property.PaddingInlineStart<string | number>;
paddingLeft?: Property.PaddingLeft<string | number>;
paddingRight?: Property.PaddingRight<string | number>;
paddingTop?: Property.PaddingTop<string | number>;
page?: Property.Page;
pageBreakAfter?: Property.PageBreakAfter;
pageBreakBefore?: Property.PageBreakBefore;
pageBreakInside?: Property.PageBreakInside;
paintOrder?: Property.PaintOrder;
perspective?: Property.Perspective<string | number>;
perspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
pointerEvents?: Property.PointerEvents;
position?: Property.Position;
printColorAdjust?: Property.PrintColorAdjust;
quotes?: Property.Quotes;
resize?: Property.Resize;
right?: Property.Right<string | number>;
rotate?: Property.Rotate;
rowGap?: Property.RowGap<string | number>;
rubyAlign?: Property.RubyAlign;
rubyMerge?: Property.RubyMerge;
rubyPosition?: Property.RubyPosition;
scale?: Property.Scale;
scrollBehavior?: Property.ScrollBehavior;
scrollMarginBlockEnd?: Property.ScrollMarginBlockEnd<string | number>;
scrollMarginBlockStart?: Property.ScrollMarginBlockStart<string | number>;
scrollMarginBottom?: Property.ScrollMarginBottom<string | number>;
scrollMarginInlineEnd?: Property.ScrollMarginInlineEnd<string | number>;
scrollMarginInlineStart?: Property.ScrollMarginInlineStart<string | number>;
scrollMarginLeft?: Property.ScrollMarginLeft<string | number>;
scrollMarginRight?: Property.ScrollMarginRight<string | number>;
scrollMarginTop?: Property.ScrollMarginTop<string | number>;
scrollPaddingBlockEnd?: Property.ScrollPaddingBlockEnd<string | number>;
scrollPaddingBlockStart?: Property.ScrollPaddingBlockStart<string | number>;
scrollPaddingBottom?: Property.ScrollPaddingBottom<string | number>;
scrollPaddingInlineEnd?: Property.ScrollPaddingInlineEnd<string | number>;
scrollPaddingInlineStart?: Property.ScrollPaddingInlineStart<string | number>;
scrollPaddingLeft?: Property.ScrollPaddingLeft<string | number>;
scrollPaddingRight?: Property.ScrollPaddingRight<string | number>;
scrollPaddingTop?: Property.ScrollPaddingTop<string | number>;
scrollSnapAlign?: Property.ScrollSnapAlign;
scrollSnapMarginBottom?: Property.ScrollMarginBottom<string | number>;
scrollSnapMarginLeft?: Property.ScrollMarginLeft<string | number>;
scrollSnapMarginRight?: Property.ScrollMarginRight<string | number>;
scrollSnapMarginTop?: Property.ScrollMarginTop<string | number>;
scrollSnapStop?: Property.ScrollSnapStop;
scrollSnapType?: Property.ScrollSnapType;
scrollTimelineAxis?: Property.ScrollTimelineAxis;
scrollTimelineName?: Property.ScrollTimelineName;
scrollbarColor?: Property.ScrollbarColor;
scrollbarGutter?: Property.ScrollbarGutter;
scrollbarWidth?: Property.ScrollbarWidth;
shapeImageThreshold?: Property.ShapeImageThreshold;
shapeMargin?: Property.ShapeMargin<string | number>;
shapeOutside?: Property.ShapeOutside;
tabSize?: Property.TabSize<string | number>;
tableLayout?: Property.TableLayout;
textAlign?: Property.TextAlign;
textAlignLast?: Property.TextAlignLast;
textCombineUpright?: Property.TextCombineUpright;
textDecorationColor?: Property.TextDecorationColor;
textDecorationLine?: Property.TextDecorationLine;
textDecorationSkip?: Property.TextDecorationSkip;
textDecorationSkipInk?: Property.TextDecorationSkipInk;
textDecorationStyle?: Property.TextDecorationStyle;
textDecorationThickness?: Property.TextDecorationThickness<string | number>;
textEmphasisColor?: Property.TextEmphasisColor;
textEmphasisPosition?: Property.TextEmphasisPosition;
textEmphasisStyle?: Property.TextEmphasisStyle;
textIndent?: Property.TextIndent<string | number>;
textJustify?: Property.TextJustify;
textOrientation?: Property.TextOrientation;
textOverflow?: Property.TextOverflow;
textRendering?: Property.TextRendering;
textShadow?: Property.TextShadow;
textSizeAdjust?: Property.TextSizeAdjust;
textTransform?: Property.TextTransform;
textUnderlineOffset?: Property.TextUnderlineOffset<string | number>;
textUnderlinePosition?: Property.TextUnderlinePosition;
textWrap?: Property.TextWrap;
timelineScope?: Property.TimelineScope;
top?: Property.Top<string | number>;
touchAction?: Property.TouchAction;
transform?: Property.Transform;
transformBox?: Property.TransformBox;
transformOrigin?: Property.TransformOrigin<string | number>;
transformStyle?: Property.TransformStyle;
transitionBehavior?: Property.TransitionBehavior;
transitionDelay?: Property.TransitionDelay<string & {}>;
transitionDuration?: Property.TransitionDuration<string & {}>;
transitionProperty?: Property.TransitionProperty;
transitionTimingFunction?: Property.TransitionTimingFunction;
translate?: Property.Translate<string | number>;
unicodeBidi?: Property.UnicodeBidi;
userSelect?: Property.UserSelect;
verticalAlign?: Property.VerticalAlign<string | number>;
viewTimelineAxis?: Property.ViewTimelineAxis;
viewTimelineInset?: Property.ViewTimelineInset<string | number>;
viewTimelineName?: Property.ViewTimelineName;
viewTransitionName?: Property.ViewTransitionName;
visibility?: Property.Visibility;
whiteSpace?: Property.WhiteSpace;
whiteSpaceCollapse?: Property.WhiteSpaceCollapse;
whiteSpaceTrim?: Property.WhiteSpaceTrim;
widows?: Property.Widows;
width?: Property.Width<string | number>;
willChange?: Property.WillChange;
wordBreak?: Property.WordBreak;
wordSpacing?: Property.WordSpacing<string | number>;
wordWrap?: Property.WordWrap;
writingMode?: Property.WritingMode;
zIndex?: Property.ZIndex;
zoom?: Property.Zoom;
all?: Globals;
animation?: Property.Animation<string & {}>;
animationRange?: Property.AnimationRange<string | number>;
background?: Property.Background<string | number>;
backgroundPosition?: Property.BackgroundPosition<string | number>;
border?: Property.Border<string | number>;
borderBlock?: Property.BorderBlock<string | number>;
borderBlockEnd?: Property.BorderBlockEnd<string | number>;
borderBlockStart?: Property.BorderBlockStart<string | number>;
borderBottom?: Property.BorderBottom<string | number>;
borderColor?: Property.BorderColor;
borderImage?: Property.BorderImage;
borderInline?: Property.BorderInline<string | number>;
borderInlineEnd?: Property.BorderInlineEnd<string | number>;
borderInlineStart?: Property.BorderInlineStart<string | number>;
borderLeft?: Property.BorderLeft<string | number>;
borderRadius?: Property.BorderRadius<string | number>;
borderRight?: Property.BorderRight<string | number>;
borderStyle?: Property.BorderStyle;
borderTop?: Property.BorderTop<string | number>;
borderWidth?: Property.BorderWidth<string | number>;
caret?: Property.Caret;
columnRule?: Property.ColumnRule<string | number>;
columns?: Property.Columns<string | number>;
containIntrinsicSize?: Property.ContainIntrinsicSize<string | number>;
container?: Property.Container;
flex?: Property.Flex<string | number>;
flexFlow?: Property.FlexFlow;
font?: Property.Font;
gap?: Property.Gap<string | number>;
grid?: Property.Grid;
gridArea?: Property.GridArea;
gridColumn?: Property.GridColumn;
gridRow?: Property.GridRow;
gridTemplate?: Property.GridTemplate;
inset?: Property.Inset<string | number>;
insetBlock?: Property.InsetBlock<string | number>;
insetInline?: Property.InsetInline<string | number>;
lineClamp?: Property.LineClamp;
listStyle?: Property.ListStyle;
margin?: Property.Margin<string | number>;
marginBlock?: Property.MarginBlock<string | number>;
marginInline?: Property.MarginInline<string | number>;
mask?: Property.Mask<string | number>;
maskBorder?: Property.MaskBorder;
motion?: Property.Offset<string | number>;
offset?: Property.Offset<string | number>;
outline?: Property.Outline<string | number>;
overflow?: Property.Overflow;
overscrollBehavior?: Property.OverscrollBehavior;
padding?: Property.Padding<string | number>;
paddingBlock?: Property.PaddingBlock<string | number>;
paddingInline?: Property.PaddingInline<string | number>;
placeContent?: Property.PlaceContent;
placeItems?: Property.PlaceItems;
placeSelf?: Property.PlaceSelf;
scrollMargin?: Property.ScrollMargin<string | number>;
scrollMarginBlock?: Property.ScrollMarginBlock<string | number>;
scrollMarginInline?: Property.ScrollMarginInline<string | number>;
scrollPadding?: Property.ScrollPadding<string | number>;
scrollPaddingBlock?: Property.ScrollPaddingBlock<string | number>;
scrollPaddingInline?: Property.ScrollPaddingInline<string | number>;
scrollSnapMargin?: Property.ScrollMargin<string | number>;
scrollTimeline?: Property.ScrollTimeline;
textDecoration?: Property.TextDecoration<string | number>;
textEmphasis?: Property.TextEmphasis;
transition?: Property.Transition<string & {}>;
viewTimeline?: Property.ViewTimeline;
MozAnimationDelay?: Property.AnimationDelay<string & {}>;
MozAnimationDirection?: Property.AnimationDirection;
MozAnimationDuration?: Property.AnimationDuration<string & {}>;
MozAnimationFillMode?: Property.AnimationFillMode;
MozAnimationIterationCount?: Property.AnimationIterationCount;
MozAnimationName?: Property.AnimationName;
MozAnimationPlayState?: Property.AnimationPlayState;
MozAnimationTimingFunction?: Property.AnimationTimingFunction;
MozAppearance?: Property.MozAppearance;
MozBinding?: Property.MozBinding;
MozBorderBottomColors?: Property.MozBorderBottomColors;
MozBorderEndColor?: Property.BorderInlineEndColor;
MozBorderEndStyle?: Property.BorderInlineEndStyle;
MozBorderEndWidth?: Property.BorderInlineEndWidth<string | number>;
MozBorderLeftColors?: Property.MozBorderLeftColors;
MozBorderRightColors?: Property.MozBorderRightColors;
MozBorderStartColor?: Property.BorderInlineStartColor;
MozBorderStartStyle?: Property.BorderInlineStartStyle;
MozBorderTopColors?: Property.MozBorderTopColors;
MozBoxSizing?: Property.BoxSizing;
MozColumnCount?: Property.ColumnCount;
MozColumnFill?: Property.ColumnFill;
MozColumnRuleColor?: Property.ColumnRuleColor;
MozColumnRuleStyle?: Property.ColumnRuleStyle;
MozColumnRuleWidth?: Property.ColumnRuleWidth<string | number>;
MozColumnWidth?: Property.ColumnWidth<string | number>;
MozContextProperties?: Property.MozContextProperties;
MozFontFeatureSettings?: Property.FontFeatureSettings;
MozFontLanguageOverride?: Property.FontLanguageOverride;
MozHyphens?: Property.Hyphens;
MozImageRegion?: Property.MozImageRegion;
MozMarginEnd?: Property.MarginInlineEnd<string | number>;
MozMarginStart?: Property.MarginInlineStart<string | number>;
MozOrient?: Property.MozOrient;
MozOsxFontSmoothing?: Property.FontSmooth<string | number>;
MozOutlineRadiusBottomleft?: Property.MozOutlineRadiusBottomleft<string | number>;
MozOutlineRadiusBottomright?: Property.MozOutlineRadiusBottomright<string | number>;
MozOutlineRadiusTopleft?: Property.MozOutlineRadiusTopleft<string | number>;
MozOutlineRadiusTopright?: Property.MozOutlineRadiusTopright<string | number>;
MozPaddingEnd?: Property.PaddingInlineEnd<string | number>;
MozPaddingStart?: Property.PaddingInlineStart<string | number>;
MozStackSizing?: Property.MozStackSizing;
MozTabSize?: Property.TabSize<string | number>;
MozTextBlink?: Property.MozTextBlink;
MozTextSizeAdjust?: Property.TextSizeAdjust;
MozUserFocus?: Property.MozUserFocus;
MozUserModify?: Property.MozUserModify;
MozUserSelect?: Property.UserSelect;
MozWindowDragging?: Property.MozWindowDragging;
MozWindowShadow?: Property.MozWindowShadow;
msAccelerator?: Property.MsAccelerator;
msBlockProgression?: Property.MsBlockProgression;
msContentZoomChaining?: Property.MsContentZoomChaining;
msContentZoomLimitMax?: Property.MsContentZoomLimitMax;
msContentZoomLimitMin?: Property.MsContentZoomLimitMin;
msContentZoomSnapPoints?: Property.MsContentZoomSnapPoints;
msContentZoomSnapType?: Property.MsContentZoomSnapType;
msContentZooming?: Property.MsContentZooming;
msFilter?: Property.MsFilter;
msFlexDirection?: Property.FlexDirection;
msFlexPositive?: Property.FlexGrow;
msFlowFrom?: Property.MsFlowFrom;
msFlowInto?: Property.MsFlowInto;
msGridColumns?: Property.MsGridColumns<string | number>;
msGridRows?: Property.MsGridRows<string | number>;
msHighContrastAdjust?: Property.MsHighContrastAdjust;
msHyphenateLimitChars?: Property.MsHyphenateLimitChars;
msHyphenateLimitLines?: Property.MsHyphenateLimitLines;
msHyphenateLimitZone?: Property.MsHyphenateLimitZone<string | number>;
msHyphens?: Property.Hyphens;
msImeAlign?: Property.MsImeAlign;
msLineBreak?: Property.LineBreak;
msOrder?: Property.Order;
msOverflowStyle?: Property.MsOverflowStyle;
msOverflowX?: Property.OverflowX;
msOverflowY?: Property.OverflowY;
msScrollChaining?: Property.MsScrollChaining;
msScrollLimitXMax?: Property.MsScrollLimitXMax<string | number>;
msScrollLimitXMin?: Property.MsScrollLimitXMin<string | number>;
msScrollLimitYMax?: Property.MsScrollLimitYMax<string | number>;
msScrollLimitYMin?: Property.MsScrollLimitYMin<string | number>;
msScrollRails?: Property.MsScrollRails;
msScrollSnapPointsX?: Property.MsScrollSnapPointsX;
msScrollSnapPointsY?: Property.MsScrollSnapPointsY;
msScrollSnapType?: Property.MsScrollSnapType;
msScrollTranslation?: Property.MsScrollTranslation;
msScrollbar3dlightColor?: Property.MsScrollbar3dlightColor;
msScrollbarArrowColor?: Property.MsScrollbarArrowColor;
msScrollbarBaseColor?: Property.MsScrollbarBaseColor;
msScrollbarDarkshadowColor?: Property.MsScrollbarDarkshadowColor;
msScrollbarFaceColor?: Property.MsScrollbarFaceColor;
msScrollbarHighlightColor?: Property.MsScrollbarHighlightColor;
msScrollbarShadowColor?: Property.MsScrollbarShadowColor;
msScrollbarTrackColor?: Property.MsScrollbarTrackColor;
msTextAutospace?: Property.MsTextAutospace;
msTextCombineHorizontal?: Property.TextCombineUpright;
msTextOverflow?: Property.TextOverflow;
msTouchAction?: Property.TouchAction;
msTouchSelect?: Property.MsTouchSelect;
msTransform?: Property.Transform;
msTransformOrigin?: Property.TransformOrigin<string | number>;
msTransitionDelay?: Property.TransitionDelay<string & {}>;
msTransitionDuration?: Property.TransitionDuration<string & {}>;
msTransitionProperty?: Property.TransitionProperty;
msTransitionTimingFunction?: Property.TransitionTimingFunction;
msUserSelect?: Property.MsUserSelect;
msWordBreak?: Property.WordBreak;
msWrapFlow?: Property.MsWrapFlow;
msWrapMargin?: Property.MsWrapMargin<string | number>;
msWrapThrough?: Property.MsWrapThrough;
msWritingMode?: Property.WritingMode;
WebkitAlignContent?: Property.AlignContent;
WebkitAlignItems?: Property.AlignItems;
WebkitAlignSelf?: Property.AlignSelf;
WebkitAnimationDelay?: Property.AnimationDelay<string & {}>;
WebkitAnimationDirection?: Property.AnimationDirection;
WebkitAnimationDuration?: Property.AnimationDuration<string & {}>;
WebkitAnimationFillMode?: Property.AnimationFillMode;
WebkitAnimationIterationCount?: Property.AnimationIterationCount;
WebkitAnimationName?: Property.AnimationName;
WebkitAnimationPlayState?: Property.AnimationPlayState;
WebkitAnimationTimingFunction?: Property.AnimationTimingFunction;
WebkitAppearance?: Property.WebkitAppearance;
WebkitBackdropFilter?: Property.BackdropFilter;
WebkitBackfaceVisibility?: Property.BackfaceVisibility;
WebkitBackgroundClip?: Property.BackgroundClip;
WebkitBackgroundOrigin?: Property.BackgroundOrigin;
WebkitBackgroundSize?: Property.BackgroundSize<string | number>;
WebkitBorderBeforeColor?: Property.WebkitBorderBeforeColor;
WebkitBorderBeforeStyle?: Property.WebkitBorderBeforeStyle;
WebkitBorderBeforeWidth?: Property.WebkitBorderBeforeWidth<string | number>;
WebkitBorderBottomLeftRadius?: Property.BorderBottomLeftRadius<string | number>;
WebkitBorderBottomRightRadius?: Property.BorderBottomRightRadius<string | number>;
WebkitBorderImageSlice?: Property.BorderImageSlice;
WebkitBorderTopLeftRadius?: Property.BorderTopLeftRadius<string | number>;
WebkitBorderTopRightRadius?: Property.BorderTopRightRadius<string | number>;
WebkitBoxDecorationBreak?: Property.BoxDecorationBreak;
WebkitBoxReflect?: Property.WebkitBoxReflect<string | number>;
WebkitBoxShadow?: Property.BoxShadow;
WebkitBoxSizing?: Property.BoxSizing;
WebkitClipPath?: Property.ClipPath;
WebkitColumnCount?: Property.ColumnCount;
WebkitColumnFill?: Property.ColumnFill;
WebkitColumnRuleColor?: Property.ColumnRuleColor;
WebkitColumnRuleStyle?: Property.ColumnRuleStyle;
WebkitColumnRuleWidth?: Property.ColumnRuleWidth<string | number>;
WebkitColumnSpan?: Property.ColumnSpan;
WebkitColumnWidth?: Property.ColumnWidth<string | number>;
WebkitFilter?: Property.Filter;
WebkitFlexBasis?: Property.FlexBasis<string | number>;
WebkitFlexDirection?: Property.FlexDirection;
WebkitFlexGrow?: Property.FlexGrow;
WebkitFlexShrink?: Property.FlexShrink;
WebkitFlexWrap?: Property.FlexWrap;
WebkitFontFeatureSettings?: Property.FontFeatureSettings;
WebkitFontKerning?: Property.FontKerning;
WebkitFontSmoothing?: Property.FontSmooth<string | number>;
WebkitFontVariantLigatures?: Property.FontVariantLigatures;
WebkitHyphenateCharacter?: Property.HyphenateCharacter;
WebkitHyphens?: Property.Hyphens;
WebkitInitialLetter?: Property.InitialLetter;
WebkitJustifyContent?: Property.JustifyContent;
WebkitLineBreak?: Property.LineBreak;
WebkitLineClamp?: Property.WebkitLineClamp;
WebkitMarginEnd?: Property.MarginInlineEnd<string | number>;
WebkitMarginStart?: Property.MarginInlineStart<string | number>;
WebkitMaskAttachment?: Property.WebkitMaskAttachment;
WebkitMaskBoxImageOutset?: Property.MaskBorderOutset<string | number>;
WebkitMaskBoxImageRepeat?: Property.MaskBorderRepeat;
WebkitMaskBoxImageSlice?: Property.MaskBorderSlice;
WebkitMaskBoxImageSource?: Property.MaskBorderSource;
WebkitMaskBoxImageWidth?: Property.MaskBorderWidth<string | number>;
WebkitMaskClip?: Property.WebkitMaskClip;
WebkitMaskComposite?: Property.WebkitMaskComposite;
WebkitMaskImage?: Property.WebkitMaskImage;
WebkitMaskOrigin?: Property.WebkitMaskOrigin;
WebkitMaskPosition?: Property.WebkitMaskPosition<string | number>;
WebkitMaskPositionX?: Property.WebkitMaskPositionX<string | number>;
WebkitMaskPositionY?: Property.WebkitMaskPositionY<string | number>;
WebkitMaskRepeat?: Property.WebkitMaskRepeat;
WebkitMaskRepeatX?: Property.WebkitMaskRepeatX;
WebkitMaskRepeatY?: Property.WebkitMaskRepeatY;
WebkitMaskSize?: Property.WebkitMaskSize<string | number>;
WebkitMaxInlineSize?: Property.MaxInlineSize<string | number>;
WebkitOrder?: Property.Order;
WebkitOverflowScrolling?: Property.WebkitOverflowScrolling;
WebkitPaddingEnd?: Property.PaddingInlineEnd<string | number>;
WebkitPaddingStart?: Property.PaddingInlineStart<string | number>;
WebkitPerspective?: Property.Perspective<string | number>;
WebkitPerspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
WebkitPrintColorAdjust?: Property.PrintColorAdjust;
WebkitRubyPosition?: Property.RubyPosition;
WebkitScrollSnapType?: Property.ScrollSnapType;
WebkitShapeMargin?: Property.ShapeMargin<string | number>;
WebkitTapHighlightColor?: Property.WebkitTapHighlightColor;
WebkitTextCombine?: Property.TextCombineUpright;
WebkitTextDecorationColor?: Property.TextDecorationColor;
WebkitTextDecorationLine?: Property.TextDecorationLine;
WebkitTextDecorationSkip?: Property.TextDecorationSkip;
WebkitTextDecorationStyle?: Property.TextDecorationStyle;
WebkitTextEmphasisColor?: Property.TextEmphasisColor;
WebkitTextEmphasisPosition?: Property.TextEmphasisPosition;
WebkitTextEmphasisStyle?: Property.TextEmphasisStyle;
WebkitTextFillColor?: Property.WebkitTextFillColor;
WebkitTextOrientation?: Property.TextOrientation;
WebkitTextSizeAdjust?: Property.TextSizeAdjust;
WebkitTextStrokeColor?: Property.WebkitTextStrokeColor;
WebkitTextStrokeWidth?: Property.WebkitTextStrokeWidth<string | number>;
WebkitTextUnderlinePosition?: Property.TextUnderlinePosition;
WebkitTouchCallout?: Property.WebkitTouchCallout;
WebkitTransform?: Property.Transform;
WebkitTransformOrigin?: Property.TransformOrigin<string | number>;
WebkitTransformStyle?: Property.TransformStyle;
WebkitTransitionDelay?: Property.TransitionDelay<string & {}>;
WebkitTransitionDuration?: Property.TransitionDuration<string & {}>;
WebkitTransitionProperty?: Property.TransitionProperty;
WebkitTransitionTimingFunction?: Property.TransitionTimingFunction;
WebkitUserModify?: Property.WebkitUserModify;
WebkitUserSelect?: Property.UserSelect;
WebkitWritingMode?: Property.WritingMode;
MozAnimation?: Property.Animation<string & {}>;
MozBorderImage?: Property.BorderImage;
MozColumnRule?: Property.ColumnRule<string | number>;
MozColumns?: Property.Columns<string | number>;
MozOutlineRadius?: Property.MozOutlineRadius<string | number>;
msContentZoomLimit?: Property.MsContentZoomLimit;
msContentZoomSnap?: Property.MsContentZoomSnap;
msFlex?: Property.Flex<string | number>;
msScrollLimit?: Property.MsScrollLimit;
msScrollSnapX?: Property.MsScrollSnapX;
msScrollSnapY?: Property.MsScrollSnapY;
msTransition?: Property.Transition<string & {}>;
WebkitAnimation?: Property.Animation<string & {}>;
WebkitBorderBefore?: Property.WebkitBorderBefore<string | number>;
WebkitBorderImage?: Property.BorderImage;
WebkitBorderRadius?: Property.BorderRadius<string | number>;
WebkitColumnRule?: Property.ColumnRule<string | number>;
WebkitColumns?: Property.Columns<string | number>;
WebkitFlex?: Property.Flex<string | number>;
WebkitFlexFlow?: Property.FlexFlow;
WebkitMask?: Property.WebkitMask<string | number>;
WebkitMaskBoxImage?: Property.MaskBorder;
WebkitTextEmphasis?: Property.TextEmphasis;
WebkitTextStroke?: Property.WebkitTextStroke<string | number>;
WebkitTransition?: Property.Transition<string & {}>;
azimuth?: Property.Azimuth;
boxAlign?: Property.BoxAlign;
boxDirection?: Property.BoxDirection;
boxFlex?: Property.BoxFlex;
boxFlexGroup?: Property.BoxFlexGroup;
boxLines?: Property.BoxLines;
boxOrdinalGroup?: Property.BoxOrdinalGroup;
boxOrient?: Property.BoxOrient;
boxPack?: Property.BoxPack;
clip?: Property.Clip;
gridColumnGap?: Property.GridColumnGap<string | number>;
gridGap?: Property.GridGap<string | number>;
gridRowGap?: Property.GridRowGap<string | number>;
imeMode?: Property.ImeMode;
offsetBlock?: Property.InsetBlock<string | number>;
offsetBlockEnd?: Property.InsetBlockEnd<string | number>;
offsetBlockStart?: Property.InsetBlockStart<string | number>;
offsetInline?: Property.InsetInline<string | number>;
offsetInlineEnd?: Property.InsetInlineEnd<string | number>;
offsetInlineStart?: Property.InsetInlineStart<string | number>;
scrollSnapCoordinate?: Property.ScrollSnapCoordinate<string | number>;
scrollSnapDestination?: Property.ScrollSnapDestination<string | number>;
scrollSnapPointsX?: Property.ScrollSnapPointsX;
scrollSnapPointsY?: Property.ScrollSnapPointsY;
scrollSnapTypeX?: Property.ScrollSnapTypeX;
scrollSnapTypeY?: Property.ScrollSnapTypeY;
KhtmlBoxAlign?: Property.BoxAlign;
KhtmlBoxDirection?: Property.BoxDirection;
KhtmlBoxFlex?: Property.BoxFlex;
KhtmlBoxFlexGroup?: Property.BoxFlexGroup;
KhtmlBoxLines?: Property.BoxLines;
KhtmlBoxOrdinalGroup?: Property.BoxOrdinalGroup;
KhtmlBoxOrient?: Property.BoxOrient;
KhtmlBoxPack?: Property.BoxPack;
KhtmlLineBreak?: Property.LineBreak;
KhtmlOpacity?: Property.Opacity;
KhtmlUserSelect?: Property.UserSelect;
MozBackfaceVisibility?: Property.BackfaceVisibility;
MozBackgroundClip?: Property.BackgroundClip;
MozBackgroundInlinePolicy?: Property.BoxDecorationBreak;
MozBackgroundOrigin?: Property.BackgroundOrigin;
MozBackgroundSize?: Property.BackgroundSize<string | number>;
MozBorderRadius?: Property.BorderRadius<string | number>;
MozBorderRadiusBottomleft?: Property.BorderBottomLeftRadius<string | number>;
MozBorderRadiusBottomright?: Property.BorderBottomRightRadius<string | number>;
MozBorderRadiusTopleft?: Property.BorderTopLeftRadius<string | number>;
MozBorderRadiusTopright?: Property.BorderTopRightRadius<string | number>;
MozBoxAlign?: Property.BoxAlign;
MozBoxDirection?: Property.BoxDirection;
MozBoxFlex?: Property.BoxFlex;
MozBoxOrdinalGroup?: Property.BoxOrdinalGroup;
MozBoxOrient?: Property.BoxOrient;
MozBoxPack?: Property.BoxPack;
MozBoxShadow?: Property.BoxShadow;
MozFloatEdge?: Property.MozFloatEdge;
MozForceBrokenImageIcon?: Property.MozForceBrokenImageIcon;
MozOpacity?: Property.Opacity;
MozOutline?: Property.Outline<string | number>;
MozOutlineColor?: Property.OutlineColor;
MozOutlineStyle?: Property.OutlineStyle;
MozOutlineWidth?: Property.OutlineWidth<string | number>;
MozPerspective?: Property.Perspective<string | number>;
MozPerspectiveOrigin?: Property.PerspectiveOrigin<string | number>;
MozTextAlignLast?: Property.TextAlignLast;
MozTextDecorationColor?: Property.TextDecorationColor;
MozTextDecorationLine?: Property.TextDecorationLine;
MozTextDecorationStyle?: Property.TextDecorationStyle;
MozTransform?: Property.Transform;
MozTransformOrigin?: Property.TransformOrigin<string | number>;
MozTransformStyle?: Property.TransformStyle;
MozTransition?: Property.Transition<string & {}>;
MozTransitionDelay?: Property.TransitionDelay<string & {}>;
MozTransitionDuration?: Property.TransitionDuration<string & {}>;
MozTransitionProperty?: Property.TransitionProperty;
MozTransitionTimingFunction?: Property.TransitionTimingFunction;
MozUserInput?: Property.MozUserInput;
msImeMode?: Property.ImeMode;
OAnimation?: Property.Animation<string & {}>;
OAnimationDelay?: Property.AnimationDelay<string & {}>;
OAnimationDirection?: Property.AnimationDirection;
OAnimationDuration?: Property.AnimationDuration<string & {}>;
OAnimationFillMode?: Property.AnimationFillMode;
OAnimationIterationCount?: Property.AnimationIterationCount;
OAnimationName?: Property.AnimationName;
OAnimationPlayState?: Property.AnimationPlayState;
OAnimationTimingFunction?: Property.AnimationTimingFunction;
OBackgroundSize?: Property.BackgroundSize<string | number>;
OBorderImage?: Property.BorderImage;
OObjectFit?: Property.ObjectFit;
OObjectPosition?: Property.ObjectPosition<string | number>;
OTabSize?: Property.TabSize<string | number>;
OTextOverflow?: Property.TextOverflow;
OTransform?: Property.Transform;
OTransformOrigin?: Property.TransformOrigin<string | number>;
OTransition?: Property.Transition<string & {}>;
OTransitionDelay?: Property.TransitionDelay<string & {}>;
OTransitionDuration?: Property.TransitionDuration<string & {}>;
OTransitionProperty?: Property.TransitionProperty;
OTransitionTimingFunction?: Property.TransitionTimingFunction;
WebkitBoxAlign?: Property.BoxAlign;
WebkitBoxDirection?: Property.BoxDirection;
WebkitBoxFlex?: Property.BoxFlex;
WebkitBoxFlexGroup?: Property.BoxFlexGroup;
WebkitBoxLines?: Property.BoxLines;
WebkitBoxOrdinalGroup?: Property.BoxOrdinalGroup;
WebkitBoxOrient?: Property.BoxOrient;
WebkitBoxPack?: Property.BoxPack;
alignmentBaseline?: Property.AlignmentBaseline;
baselineShift?: Property.BaselineShift<string | number>;
clipRule?: Property.ClipRule;
colorInterpolation?: Property.ColorInterpolation;
colorRendering?: Property.ColorRendering;
dominantBaseline?: Property.DominantBaseline;
fill?: Property.Fill;
fillOpacity?: Property.FillOpacity;
fillRule?: Property.FillRule;
floodColor?: Property.FloodColor;
floodOpacity?: Property.FloodOpacity;
glyphOrientationVertical?: Property.GlyphOrientationVertical;
lightingColor?: Property.LightingColor;
marker?: Property.Marker;
markerEnd?: Property.MarkerEnd;
markerMid?: Property.MarkerMid;
markerStart?: Property.MarkerStart;
shapeRendering?: Property.ShapeRendering;
stopColor?: Property.StopColor;
stopOpacity?: Property.StopOpacity;
stroke?: Property.Stroke;
strokeDasharray?: Property.StrokeDasharray<string | number>;
strokeDashoffset?: Property.StrokeDashoffset<string | number>;
strokeLinecap?: Property.StrokeLinecap;
strokeLinejoin?: Property.StrokeLinejoin;
strokeMiterlimit?: Property.StrokeMiterlimit;
strokeOpacity?: Property.StrokeOpacity;
strokeWidth?: Property.StrokeWidth<string | number>;
textAnchor?: Property.TextAnchor;
vectorEffect?: Property.VectorEffect;
"accent-color"?: Property.AccentColor;
"align-content"?: Property.AlignContent;
"align-items"?: Property.AlignItems;
"align-self"?: Property.AlignSelf;
"align-tracks"?: Property.AlignTracks;
"animation-composition"?: Property.AnimationComposition;
"animation-delay"?: Property.AnimationDelay<string & {}>;
"animation-direction"?: Property.AnimationDirection;
"animation-duration"?: Property.AnimationDuration<string & {}>;
"animation-fill-mode"?: Property.AnimationFillMode;
"animation-iteration-count"?: Property.AnimationIterationCount;
"animation-name"?: Property.AnimationName;
"animation-play-state"?: Property.AnimationPlayState;
"animation-range-end"?: Property.AnimationRangeEnd<string | number>;
"animation-range-start"?: Property.AnimationRangeStart<string | number>;
"animation-timeline"?: Property.AnimationTimeline;
"animation-timing-function"?: Property.AnimationTimingFunction;
"aspect-ratio"?: Property.AspectRatio;
"backdrop-filter"?: Property.BackdropFilter;
"backface-visibility"?: Property.BackfaceVisibility;
"background-attachment"?: Property.BackgroundAttachment;
"background-blend-mode"?: Property.BackgroundBlendMode;
"background-clip"?: Property.BackgroundClip;
"background-color"?: Property.BackgroundColor;
"background-image"?: Property.BackgroundImage;
"background-origin"?: Property.BackgroundOrigin;
"background-position-x"?: Property.BackgroundPositionX<string | number>;
"background-position-y"?: Property.BackgroundPositionY<string | number>;
"background-repeat"?: Property.BackgroundRepeat;
"background-size"?: Property.BackgroundSize<string | number>;
"block-overflow"?: Property.BlockOverflow;
"block-size"?: Property.BlockSize<string | number>;
"border-block-color"?: Property.BorderBlockColor;
"border-block-end-color"?: Property.BorderBlockEndColor;
"border-block-end-style"?: Property.BorderBlockEndStyle;
"border-block-end-width"?: Property.BorderBlockEndWidth<string | number>;
"border-block-start-color"?: Property.BorderBlockStartColor;
"border-block-start-style"?: Property.BorderBlockStartStyle;
"border-block-start-width"?: Property.BorderBlockStartWidth<string | number>;
"border-block-style"?: Property.BorderBlockStyle;
"border-block-width"?: Property.BorderBlockWidth<string | number>;
"border-bottom-color"?: Property.BorderBottomColor;
"border-bottom-left-radius"?: Property.BorderBottomLeftRadius<string | number>;
"border-bottom-right-radius"?: Property.BorderBottomRightRadius<string | number>;
"border-bottom-style"?: Property.BorderBottomStyle;
"border-bottom-width"?: Property.BorderBottomWidth<string | number>;
"border-collapse"?: Property.BorderCollapse;
"border-end-end-radius"?: Property.BorderEndEndRadius<string | number>;
"border-end-start-radius"?: Property.BorderEndStartRadius<string | number>;
"border-image-outset"?: Property.BorderImageOutset<string | number>;
"border-image-repeat"?: Property.BorderImageRepeat;
"border-image-slice"?: Property.BorderImageSlice;
"border-image-source"?: Property.BorderImageSource;
"border-image-width"?: Property.BorderImageWidth<string | number>;
"border-inline-color"?: Property.BorderInlineColor;
"border-inline-end-color"?: Property.BorderInlineEndColor;
"border-inline-end-style"?: Property.BorderInlineEndStyle;
"border-inline-end-width"?: Property.BorderInlineEndWidth<string | number>;
"border-inline-start-color"?: Property.BorderInlineStartColor;
"border-inline-start-style"?: Property.BorderInlineStartStyle;
"border-inline-start-width"?: Property.BorderInlineStartWidth<string | number>;
"border-inline-style"?: Property.BorderInlineStyle;
"border-inline-width"?: Property.BorderInlineWidth<string | number>;
"border-left-color"?: Property.BorderLeftColor;
"border-left-style"?: Property.BorderLeftStyle;
"border-left-width"?: Property.BorderLeftWidth<string | number>;
"border-right-color"?: Property.BorderRightColor;
"border-right-style"?: Property.BorderRightStyle;
"border-right-width"?: Property.BorderRightWidth<string | number>;
"border-spacing"?: Property.BorderSpacing<string | number>;
"border-start-end-radius"?: Property.BorderStartEndRadius<string | number>;
"border-start-start-radius"?: Property.BorderStartStartRadius<string | number>;
"border-top-color"?: Property.BorderTopColor;
"border-top-left-radius"?: Property.BorderTopLeftRadius<string | number>;
"border-top-right-radius"?: Property.BorderTopRightRadius<string | number>;
"border-top-style"?: Property.BorderTopStyle;
"border-top-width"?: Property.BorderTopWidth<string | number>;
"box-decoration-break"?: Property.BoxDecorationBreak;
"box-shadow"?: Property.BoxShadow;
"box-sizing"?: Property.BoxSizing;
"break-after"?: Property.BreakAfter;
"break-before"?: Property.BreakBefore;
"break-inside"?: Property.BreakInside;
"caption-side"?: Property.CaptionSide;
"caret-color"?: Property.CaretColor;
"caret-shape"?: Property.CaretShape;
"clip-path"?: Property.ClipPath;
"color-adjust"?: Property.PrintColorAdjust;
"color-scheme"?: Property.ColorScheme;
"column-count"?: Property.ColumnCount;
"column-fill"?: Property.ColumnFill;
"column-gap"?: Property.ColumnGap<string | number>;
"column-rule-color"?: Property.ColumnRuleColor;
"column-rule-style"?: Property.ColumnRuleStyle;
"column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"column-span"?: Property.ColumnSpan;
"column-width"?: Property.ColumnWidth<string | number>;
"contain-intrinsic-block-size"?: Property.ContainIntrinsicBlockSize<string | number>;
"contain-intrinsic-height"?: Property.ContainIntrinsicHeight<string | number>;
"contain-intrinsic-inline-size"?: Property.ContainIntrinsicInlineSize<string | number>;
"contain-intrinsic-width"?: Property.ContainIntrinsicWidth<string | number>;
"container-name"?: Property.ContainerName;
"container-type"?: Property.ContainerType;
"content-visibility"?: Property.ContentVisibility;
"counter-increment"?: Property.CounterIncrement;
"counter-reset"?: Property.CounterReset;
"counter-set"?: Property.CounterSet;
"empty-cells"?: Property.EmptyCells;
"flex-basis"?: Property.FlexBasis<string | number>;
"flex-direction"?: Property.FlexDirection;
"flex-grow"?: Property.FlexGrow;
"flex-shrink"?: Property.FlexShrink;
"flex-wrap"?: Property.FlexWrap;
"font-family"?: Property.FontFamily;
"font-feature-settings"?: Property.FontFeatureSettings;
"font-kerning"?: Property.FontKerning;
"font-language-override"?: Property.FontLanguageOverride;
"font-optical-sizing"?: Property.FontOpticalSizing;
"font-palette"?: Property.FontPalette;
"font-size"?: Property.FontSize<string | number>;
"font-size-adjust"?: Property.FontSizeAdjust;
"font-smooth"?: Property.FontSmooth<string | number>;
"font-stretch"?: Property.FontStretch;
"font-style"?: Property.FontStyle;
"font-synthesis"?: Property.FontSynthesis;
"font-synthesis-position"?: Property.FontSynthesisPosition;
"font-synthesis-small-caps"?: Property.FontSynthesisSmallCaps;
"font-synthesis-style"?: Property.FontSynthesisStyle;
"font-synthesis-weight"?: Property.FontSynthesisWeight;
"font-variant"?: Property.FontVariant;
"font-variant-alternates"?: Property.FontVariantAlternates;
"font-variant-caps"?: Property.FontVariantCaps;
"font-variant-east-asian"?: Property.FontVariantEastAsian;
"font-variant-emoji"?: Property.FontVariantEmoji;
"font-variant-ligatures"?: Property.FontVariantLigatures;
"font-variant-numeric"?: Property.FontVariantNumeric;
"font-variant-position"?: Property.FontVariantPosition;
"font-variation-settings"?: Property.FontVariationSettings;
"font-weight"?: Property.FontWeight;
"forced-color-adjust"?: Property.ForcedColorAdjust;
"grid-auto-columns"?: Property.GridAutoColumns<string | number>;
"grid-auto-flow"?: Property.GridAutoFlow;
"grid-auto-rows"?: Property.GridAutoRows<string | number>;
"grid-column-end"?: Property.GridColumnEnd;
"grid-column-start"?: Property.GridColumnStart;
"grid-row-end"?: Property.GridRowEnd;
"grid-row-start"?: Property.GridRowStart;
"grid-template-areas"?: Property.GridTemplateAreas;
"grid-template-columns"?: Property.GridTemplateColumns<string | number>;
"grid-template-rows"?: Property.GridTemplateRows<string | number>;
"hanging-punctuation"?: Property.HangingPunctuation;
"hyphenate-character"?: Property.HyphenateCharacter;
"hyphenate-limit-chars"?: Property.HyphenateLimitChars;
"image-orientation"?: Property.ImageOrientation;
"image-rendering"?: Property.ImageRendering;
"image-resolution"?: Property.ImageResolution;
"initial-letter"?: Property.InitialLetter;
"inline-size"?: Property.InlineSize<string | number>;
"input-security"?: Property.InputSecurity;
"inset-block-end"?: Property.InsetBlockEnd<string | number>;
"inset-block-start"?: Property.InsetBlockStart<string | number>;
"inset-inline-end"?: Property.InsetInlineEnd<string | number>;
"inset-inline-start"?: Property.InsetInlineStart<string | number>;
"justify-content"?: Property.JustifyContent;
"justify-items"?: Property.JustifyItems;
"justify-self"?: Property.JustifySelf;
"justify-tracks"?: Property.JustifyTracks;
"letter-spacing"?: Property.LetterSpacing<string | number>;
"line-break"?: Property.LineBreak;
"line-height"?: Property.LineHeight<string | number>;
"line-height-step"?: Property.LineHeightStep<string | number>;
"list-style-image"?: Property.ListStyleImage;
"list-style-position"?: Property.ListStylePosition;
"list-style-type"?: Property.ListStyleType;
"margin-block-end"?: Property.MarginBlockEnd<string | number>;
"margin-block-start"?: Property.MarginBlockStart<string | number>;
"margin-bottom"?: Property.MarginBottom<string | number>;
"margin-inline-end"?: Property.MarginInlineEnd<string | number>;
"margin-inline-start"?: Property.MarginInlineStart<string | number>;
"margin-left"?: Property.MarginLeft<string | number>;
"margin-right"?: Property.MarginRight<string | number>;
"margin-top"?: Property.MarginTop<string | number>;
"margin-trim"?: Property.MarginTrim;
"mask-border-mode"?: Property.MaskBorderMode;
"mask-border-outset"?: Property.MaskBorderOutset<string | number>;
"mask-border-repeat"?: Property.MaskBorderRepeat;
"mask-border-slice"?: Property.MaskBorderSlice;
"mask-border-source"?: Property.MaskBorderSource;
"mask-border-width"?: Property.MaskBorderWidth<string | number>;
"mask-clip"?: Property.MaskClip;
"mask-composite"?: Property.MaskComposite;
"mask-image"?: Property.MaskImage;
"mask-mode"?: Property.MaskMode;
"mask-origin"?: Property.MaskOrigin;
"mask-position"?: Property.MaskPosition<string | number>;
"mask-repeat"?: Property.MaskRepeat;
"mask-size"?: Property.MaskSize<string | number>;
"mask-type"?: Property.MaskType;
"masonry-auto-flow"?: Property.MasonryAutoFlow;
"math-depth"?: Property.MathDepth;
"math-shift"?: Property.MathShift;
"math-style"?: Property.MathStyle;
"max-block-size"?: Property.MaxBlockSize<string | number>;
"max-height"?: Property.MaxHeight<string | number>;
"max-inline-size"?: Property.MaxInlineSize<string | number>;
"max-lines"?: Property.MaxLines;
"max-width"?: Property.MaxWidth<string | number>;
"min-block-size"?: Property.MinBlockSize<string | number>;
"min-height"?: Property.MinHeight<string | number>;
"min-inline-size"?: Property.MinInlineSize<string | number>;
"min-width"?: Property.MinWidth<string | number>;
"mix-blend-mode"?: Property.MixBlendMode;
"motion-distance"?: Property.OffsetDistance<string | number>;
"motion-path"?: Property.OffsetPath;
"motion-rotation"?: Property.OffsetRotate;
"object-fit"?: Property.ObjectFit;
"object-position"?: Property.ObjectPosition<string | number>;
"offset-anchor"?: Property.OffsetAnchor<string | number>;
"offset-distance"?: Property.OffsetDistance<string | number>;
"offset-path"?: Property.OffsetPath;
"offset-position"?: Property.OffsetPosition<string | number>;
"offset-rotate"?: Property.OffsetRotate;
"offset-rotation"?: Property.OffsetRotate;
"outline-color"?: Property.OutlineColor;
"outline-offset"?: Property.OutlineOffset<string | number>;
"outline-style"?: Property.OutlineStyle;
"outline-width"?: Property.OutlineWidth<string | number>;
"overflow-anchor"?: Property.OverflowAnchor;
"overflow-block"?: Property.OverflowBlock;
"overflow-clip-box"?: Property.OverflowClipBox;
"overflow-clip-margin"?: Property.OverflowClipMargin<string | number>;
"overflow-inline"?: Property.OverflowInline;
"overflow-wrap"?: Property.OverflowWrap;
"overflow-x"?: Property.OverflowX;
"overflow-y"?: Property.OverflowY;
"overscroll-behavior-block"?: Property.OverscrollBehaviorBlock;
"overscroll-behavior-inline"?: Property.OverscrollBehaviorInline;
"overscroll-behavior-x"?: Property.OverscrollBehaviorX;
"overscroll-behavior-y"?: Property.OverscrollBehaviorY;
"padding-block-end"?: Property.PaddingBlockEnd<string | number>;
"padding-block-start"?: Property.PaddingBlockStart<string | number>;
"padding-bottom"?: Property.PaddingBottom<string | number>;
"padding-inline-end"?: Property.PaddingInlineEnd<string | number>;
"padding-inline-start"?: Property.PaddingInlineStart<string | number>;
"padding-left"?: Property.PaddingLeft<string | number>;
"padding-right"?: Property.PaddingRight<string | number>;
"padding-top"?: Property.PaddingTop<string | number>;
"page-break-after"?: Property.PageBreakAfter;
"page-break-before"?: Property.PageBreakBefore;
"page-break-inside"?: Property.PageBreakInside;
"paint-order"?: Property.PaintOrder;
"perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"pointer-events"?: Property.PointerEvents;
"print-color-adjust"?: Property.PrintColorAdjust;
"row-gap"?: Property.RowGap<string | number>;
"ruby-align"?: Property.RubyAlign;
"ruby-merge"?: Property.RubyMerge;
"ruby-position"?: Property.RubyPosition;
"scroll-behavior"?: Property.ScrollBehavior;
"scroll-margin-block-end"?: Property.ScrollMarginBlockEnd<string | number>;
"scroll-margin-block-start"?: Property.ScrollMarginBlockStart<string | number>;
"scroll-margin-bottom"?: Property.ScrollMarginBottom<string | number>;
"scroll-margin-inline-end"?: Property.ScrollMarginInlineEnd<string | number>;
"scroll-margin-inline-start"?: Property.ScrollMarginInlineStart<string | number>;
"scroll-margin-left"?: Property.ScrollMarginLeft<string | number>;
"scroll-margin-right"?: Property.ScrollMarginRight<string | number>;
"scroll-margin-top"?: Property.ScrollMarginTop<string | number>;
"scroll-padding-block-end"?: Property.ScrollPaddingBlockEnd<string | number>;
"scroll-padding-block-start"?: Property.ScrollPaddingBlockStart<string | number>;
"scroll-padding-bottom"?: Property.ScrollPaddingBottom<string | number>;
"scroll-padding-inline-end"?: Property.ScrollPaddingInlineEnd<string | number>;
"scroll-padding-inline-start"?: Property.ScrollPaddingInlineStart<string | number>;
"scroll-padding-left"?: Property.ScrollPaddingLeft<string | number>;
"scroll-padding-right"?: Property.ScrollPaddingRight<string | number>;
"scroll-padding-top"?: Property.ScrollPaddingTop<string | number>;
"scroll-snap-align"?: Property.ScrollSnapAlign;
"scroll-snap-margin-bottom"?: Property.ScrollMarginBottom<string | number>;
"scroll-snap-margin-left"?: Property.ScrollMarginLeft<string | number>;
"scroll-snap-margin-right"?: Property.ScrollMarginRight<string | number>;
"scroll-snap-margin-top"?: Property.ScrollMarginTop<string | number>;
"scroll-snap-stop"?: Property.ScrollSnapStop;
"scroll-snap-type"?: Property.ScrollSnapType;
"scroll-timeline-axis"?: Property.ScrollTimelineAxis;
"scroll-timeline-name"?: Property.ScrollTimelineName;
"scrollbar-color"?: Property.ScrollbarColor;
"scrollbar-gutter"?: Property.ScrollbarGutter;
"scrollbar-width"?: Property.ScrollbarWidth;
"shape-image-threshold"?: Property.ShapeImageThreshold;
"shape-margin"?: Property.ShapeMargin<string | number>;
"shape-outside"?: Property.ShapeOutside;
"tab-size"?: Property.TabSize<string | number>;
"table-layout"?: Property.TableLayout;
"text-align"?: Property.TextAlign;
"text-align-last"?: Property.TextAlignLast;
"text-combine-upright"?: Property.TextCombineUpright;
"text-decoration-color"?: Property.TextDecorationColor;
"text-decoration-line"?: Property.TextDecorationLine;
"text-decoration-skip"?: Property.TextDecorationSkip;
"text-decoration-skip-ink"?: Property.TextDecorationSkipInk;
"text-decoration-style"?: Property.TextDecorationStyle;
"text-decoration-thickness"?: Property.TextDecorationThickness<string | number>;
"text-emphasis-color"?: Property.TextEmphasisColor;
"text-emphasis-position"?: Property.TextEmphasisPosition;
"text-emphasis-style"?: Property.TextEmphasisStyle;
"text-indent"?: Property.TextIndent<string | number>;
"text-justify"?: Property.TextJustify;
"text-orientation"?: Property.TextOrientation;
"text-overflow"?: Property.TextOverflow;
"text-rendering"?: Property.TextRendering;
"text-shadow"?: Property.TextShadow;
"text-size-adjust"?: Property.TextSizeAdjust;
"text-transform"?: Property.TextTransform;
"text-underline-offset"?: Property.TextUnderlineOffset<string | number>;
"text-underline-position"?: Property.TextUnderlinePosition;
"text-wrap"?: Property.TextWrap;
"timeline-scope"?: Property.TimelineScope;
"touch-action"?: Property.TouchAction;
"transform-box"?: Property.TransformBox;
"transform-origin"?: Property.TransformOrigin<string | number>;
"transform-style"?: Property.TransformStyle;
"transition-behavior"?: Property.TransitionBehavior;
"transition-delay"?: Property.TransitionDelay<string & {}>;
"transition-duration"?: Property.TransitionDuration<string & {}>;
"transition-property"?: Property.TransitionProperty;
"transition-timing-function"?: Property.TransitionTimingFunction;
"unicode-bidi"?: Property.UnicodeBidi;
"user-select"?: Property.UserSelect;
"vertical-align"?: Property.VerticalAlign<string | number>;
"view-timeline-axis"?: Property.ViewTimelineAxis;
"view-timeline-inset"?: Property.ViewTimelineInset<string | number>;
"view-timeline-name"?: Property.ViewTimelineName;
"view-transition-name"?: Property.ViewTransitionName;
"white-space"?: Property.WhiteSpace;
"white-space-collapse"?: Property.WhiteSpaceCollapse;
"white-space-trim"?: Property.WhiteSpaceTrim;
"will-change"?: Property.WillChange;
"word-break"?: Property.WordBreak;
"word-spacing"?: Property.WordSpacing<string | number>;
"word-wrap"?: Property.WordWrap;
"writing-mode"?: Property.WritingMode;
"z-index"?: Property.ZIndex;
"animation-range"?: Property.AnimationRange<string | number>;
"background-position"?: Property.BackgroundPosition<string | number>;
"border-block"?: Property.BorderBlock<string | number>;
"border-block-end"?: Property.BorderBlockEnd<string | number>;
"border-block-start"?: Property.BorderBlockStart<string | number>;
"border-bottom"?: Property.BorderBottom<string | number>;
"border-color"?: Property.BorderColor;
"border-image"?: Property.BorderImage;
"border-inline"?: Property.BorderInline<string | number>;
"border-inline-end"?: Property.BorderInlineEnd<string | number>;
"border-inline-start"?: Property.BorderInlineStart<string | number>;
"border-left"?: Property.BorderLeft<string | number>;
"border-radius"?: Property.BorderRadius<string | number>;
"border-right"?: Property.BorderRight<string | number>;
"border-style"?: Property.BorderStyle;
"border-top"?: Property.BorderTop<string | number>;
"border-width"?: Property.BorderWidth<string | number>;
"column-rule"?: Property.ColumnRule<string | number>;
"contain-intrinsic-size"?: Property.ContainIntrinsicSize<string | number>;
"flex-flow"?: Property.FlexFlow;
"grid-area"?: Property.GridArea;
"grid-column"?: Property.GridColumn;
"grid-row"?: Property.GridRow;
"grid-template"?: Property.GridTemplate;
"inset-block"?: Property.InsetBlock<string | number>;
"inset-inline"?: Property.InsetInline<string | number>;
"line-clamp"?: Property.LineClamp;
"list-style"?: Property.ListStyle;
"margin-block"?: Property.MarginBlock<string | number>;
"margin-inline"?: Property.MarginInline<string | number>;
"mask-border"?: Property.MaskBorder;
"overscroll-behavior"?: Property.OverscrollBehavior;
"padding-block"?: Property.PaddingBlock<string | number>;
"padding-inline"?: Property.PaddingInline<string | number>;
"place-content"?: Property.PlaceContent;
"place-items"?: Property.PlaceItems;
"place-self"?: Property.PlaceSelf;
"scroll-margin"?: Property.ScrollMargin<string | number>;
"scroll-margin-block"?: Property.ScrollMarginBlock<string | number>;
"scroll-margin-inline"?: Property.ScrollMarginInline<string | number>;
"scroll-padding"?: Property.ScrollPadding<string | number>;
"scroll-padding-block"?: Property.ScrollPaddingBlock<string | number>;
"scroll-padding-inline"?: Property.ScrollPaddingInline<string | number>;
"scroll-snap-margin"?: Property.ScrollMargin<string | number>;
"scroll-timeline"?: Property.ScrollTimeline;
"text-decoration"?: Property.TextDecoration<string | number>;
"text-emphasis"?: Property.TextEmphasis;
"view-timeline"?: Property.ViewTimeline;
"-moz-animation-delay"?: Property.AnimationDelay<string & {}>;
"-moz-animation-direction"?: Property.AnimationDirection;
"-moz-animation-duration"?: Property.AnimationDuration<string & {}>;
"-moz-animation-fill-mode"?: Property.AnimationFillMode;
"-moz-animation-iteration-count"?: Property.AnimationIterationCount;
"-moz-animation-name"?: Property.AnimationName;
"-moz-animation-play-state"?: Property.AnimationPlayState;
"-moz-animation-timing-function"?: Property.AnimationTimingFunction;
"-moz-appearance"?: Property.MozAppearance;
"-moz-binding"?: Property.MozBinding;
"-moz-border-bottom-colors"?: Property.MozBorderBottomColors;
"-moz-border-end-color"?: Property.BorderInlineEndColor;
"-moz-border-end-style"?: Property.BorderInlineEndStyle;
"-moz-border-end-width"?: Property.BorderInlineEndWidth<string | number>;
"-moz-border-left-colors"?: Property.MozBorderLeftColors;
"-moz-border-right-colors"?: Property.MozBorderRightColors;
"-moz-border-start-color"?: Property.BorderInlineStartColor;
"-moz-border-start-style"?: Property.BorderInlineStartStyle;
"-moz-border-top-colors"?: Property.MozBorderTopColors;
"-moz-box-sizing"?: Property.BoxSizing;
"-moz-column-count"?: Property.ColumnCount;
"-moz-column-fill"?: Property.ColumnFill;
"-moz-column-rule-color"?: Property.ColumnRuleColor;
"-moz-column-rule-style"?: Property.ColumnRuleStyle;
"-moz-column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"-moz-column-width"?: Property.ColumnWidth<string | number>;
"-moz-context-properties"?: Property.MozContextProperties;
"-moz-font-feature-settings"?: Property.FontFeatureSettings;
"-moz-font-language-override"?: Property.FontLanguageOverride;
"-moz-hyphens"?: Property.Hyphens;
"-moz-image-region"?: Property.MozImageRegion;
"-moz-margin-end"?: Property.MarginInlineEnd<string | number>;
"-moz-margin-start"?: Property.MarginInlineStart<string | number>;
"-moz-orient"?: Property.MozOrient;
"-moz-osx-font-smoothing"?: Property.FontSmooth<string | number>;
"-moz-outline-radius-bottomleft"?: Property.MozOutlineRadiusBottomleft<string | number>;
"-moz-outline-radius-bottomright"?: Property.MozOutlineRadiusBottomright<string | number>;
"-moz-outline-radius-topleft"?: Property.MozOutlineRadiusTopleft<string | number>;
"-moz-outline-radius-topright"?: Property.MozOutlineRadiusTopright<string | number>;
"-moz-padding-end"?: Property.PaddingInlineEnd<string | number>;
"-moz-padding-start"?: Property.PaddingInlineStart<string | number>;
"-moz-stack-sizing"?: Property.MozStackSizing;
"-moz-tab-size"?: Property.TabSize<string | number>;
"-moz-text-blink"?: Property.MozTextBlink;
"-moz-text-size-adjust"?: Property.TextSizeAdjust;
"-moz-user-focus"?: Property.MozUserFocus;
"-moz-user-modify"?: Property.MozUserModify;
"-moz-user-select"?: Property.UserSelect;
"-moz-window-dragging"?: Property.MozWindowDragging;
"-moz-window-shadow"?: Property.MozWindowShadow;
"-ms-accelerator"?: Property.MsAccelerator;
"-ms-block-progression"?: Property.MsBlockProgression;
"-ms-content-zoom-chaining"?: Property.MsContentZoomChaining;
"-ms-content-zoom-limit-max"?: Property.MsContentZoomLimitMax;
"-ms-content-zoom-limit-min"?: Property.MsContentZoomLimitMin;
"-ms-content-zoom-snap-points"?: Property.MsContentZoomSnapPoints;
"-ms-content-zoom-snap-type"?: Property.MsContentZoomSnapType;
"-ms-content-zooming"?: Property.MsContentZooming;
"-ms-filter"?: Property.MsFilter;
"-ms-flex-direction"?: Property.FlexDirection;
"-ms-flex-positive"?: Property.FlexGrow;
"-ms-flow-from"?: Property.MsFlowFrom;
"-ms-flow-into"?: Property.MsFlowInto;
"-ms-grid-columns"?: Property.MsGridColumns<string | number>;
"-ms-grid-rows"?: Property.MsGridRows<string | number>;
"-ms-high-contrast-adjust"?: Property.MsHighContrastAdjust;
"-ms-hyphenate-limit-chars"?: Property.MsHyphenateLimitChars;
"-ms-hyphenate-limit-lines"?: Property.MsHyphenateLimitLines;
"-ms-hyphenate-limit-zone"?: Property.MsHyphenateLimitZone<string | number>;
"-ms-hyphens"?: Property.Hyphens;
"-ms-ime-align"?: Property.MsImeAlign;
"-ms-line-break"?: Property.LineBreak;
"-ms-order"?: Property.Order;
"-ms-overflow-style"?: Property.MsOverflowStyle;
"-ms-overflow-x"?: Property.OverflowX;
"-ms-overflow-y"?: Property.OverflowY;
"-ms-scroll-chaining"?: Property.MsScrollChaining;
"-ms-scroll-limit-x-max"?: Property.MsScrollLimitXMax<string | number>;
"-ms-scroll-limit-x-min"?: Property.MsScrollLimitXMin<string | number>;
"-ms-scroll-limit-y-max"?: Property.MsScrollLimitYMax<string | number>;
"-ms-scroll-limit-y-min"?: Property.MsScrollLimitYMin<string | number>;
"-ms-scroll-rails"?: Property.MsScrollRails;
"-ms-scroll-snap-points-x"?: Property.MsScrollSnapPointsX;
"-ms-scroll-snap-points-y"?: Property.MsScrollSnapPointsY;
"-ms-scroll-snap-type"?: Property.MsScrollSnapType;
"-ms-scroll-translation"?: Property.MsScrollTranslation;
"-ms-scrollbar-3dlight-color"?: Property.MsScrollbar3dlightColor;
"-ms-scrollbar-arrow-color"?: Property.MsScrollbarArrowColor;
"-ms-scrollbar-base-color"?: Property.MsScrollbarBaseColor;
"-ms-scrollbar-darkshadow-color"?: Property.MsScrollbarDarkshadowColor;
"-ms-scrollbar-face-color"?: Property.MsScrollbarFaceColor;
"-ms-scrollbar-highlight-color"?: Property.MsScrollbarHighlightColor;
"-ms-scrollbar-shadow-color"?: Property.MsScrollbarShadowColor;
"-ms-scrollbar-track-color"?: Property.MsScrollbarTrackColor;
"-ms-text-autospace"?: Property.MsTextAutospace;
"-ms-text-combine-horizontal"?: Property.TextCombineUpright;
"-ms-text-overflow"?: Property.TextOverflow;
"-ms-touch-action"?: Property.TouchAction;
"-ms-touch-select"?: Property.MsTouchSelect;
"-ms-transform"?: Property.Transform;
"-ms-transform-origin"?: Property.TransformOrigin<string | number>;
"-ms-transition-delay"?: Property.TransitionDelay<string & {}>;
"-ms-transition-duration"?: Property.TransitionDuration<string & {}>;
"-ms-transition-property"?: Property.TransitionProperty;
"-ms-transition-timing-function"?: Property.TransitionTimingFunction;
"-ms-user-select"?: Property.MsUserSelect;
"-ms-word-break"?: Property.WordBreak;
"-ms-wrap-flow"?: Property.MsWrapFlow;
"-ms-wrap-margin"?: Property.MsWrapMargin<string | number>;
"-ms-wrap-through"?: Property.MsWrapThrough;
"-ms-writing-mode"?: Property.WritingMode;
"-webkit-align-content"?: Property.AlignContent;
"-webkit-align-items"?: Property.AlignItems;
"-webkit-align-self"?: Property.AlignSelf;
"-webkit-animation-delay"?: Property.AnimationDelay<string & {}>;
"-webkit-animation-direction"?: Property.AnimationDirection;
"-webkit-animation-duration"?: Property.AnimationDuration<string & {}>;
"-webkit-animation-fill-mode"?: Property.AnimationFillMode;
"-webkit-animation-iteration-count"?: Property.AnimationIterationCount;
"-webkit-animation-name"?: Property.AnimationName;
"-webkit-animation-play-state"?: Property.AnimationPlayState;
"-webkit-animation-timing-function"?: Property.AnimationTimingFunction;
"-webkit-appearance"?: Property.WebkitAppearance;
"-webkit-backdrop-filter"?: Property.BackdropFilter;
"-webkit-backface-visibility"?: Property.BackfaceVisibility;
"-webkit-background-clip"?: Property.BackgroundClip;
"-webkit-background-origin"?: Property.BackgroundOrigin;
"-webkit-background-size"?: Property.BackgroundSize<string | number>;
"-webkit-border-before-color"?: Property.WebkitBorderBeforeColor;
"-webkit-border-before-style"?: Property.WebkitBorderBeforeStyle;
"-webkit-border-before-width"?: Property.WebkitBorderBeforeWidth<string | number>;
"-webkit-border-bottom-left-radius"?: Property.BorderBottomLeftRadius<string | number>;
"-webkit-border-bottom-right-radius"?: Property.BorderBottomRightRadius<string | number>;
"-webkit-border-image-slice"?: Property.BorderImageSlice;
"-webkit-border-top-left-radius"?: Property.BorderTopLeftRadius<string | number>;
"-webkit-border-top-right-radius"?: Property.BorderTopRightRadius<string | number>;
"-webkit-box-decoration-break"?: Property.BoxDecorationBreak;
"-webkit-box-reflect"?: Property.WebkitBoxReflect<string | number>;
"-webkit-box-shadow"?: Property.BoxShadow;
"-webkit-box-sizing"?: Property.BoxSizing;
"-webkit-clip-path"?: Property.ClipPath;
"-webkit-column-count"?: Property.ColumnCount;
"-webkit-column-fill"?: Property.ColumnFill;
"-webkit-column-rule-color"?: Property.ColumnRuleColor;
"-webkit-column-rule-style"?: Property.ColumnRuleStyle;
"-webkit-column-rule-width"?: Property.ColumnRuleWidth<string | number>;
"-webkit-column-span"?: Property.ColumnSpan;
"-webkit-column-width"?: Property.ColumnWidth<string | number>;
"-webkit-filter"?: Property.Filter;
"-webkit-flex-basis"?: Property.FlexBasis<string | number>;
"-webkit-flex-direction"?: Property.FlexDirection;
"-webkit-flex-grow"?: Property.FlexGrow;
"-webkit-flex-shrink"?: Property.FlexShrink;
"-webkit-flex-wrap"?: Property.FlexWrap;
"-webkit-font-feature-settings"?: Property.FontFeatureSettings;
"-webkit-font-kerning"?: Property.FontKerning;
"-webkit-font-smoothing"?: Property.FontSmooth<string | number>;
"-webkit-font-variant-ligatures"?: Property.FontVariantLigatures;
"-webkit-hyphenate-character"?: Property.HyphenateCharacter;
"-webkit-hyphens"?: Property.Hyphens;
"-webkit-initial-letter"?: Property.InitialLetter;
"-webkit-justify-content"?: Property.JustifyContent;
"-webkit-line-break"?: Property.LineBreak;
"-webkit-line-clamp"?: Property.WebkitLineClamp;
"-webkit-margin-end"?: Property.MarginInlineEnd<string | number>;
"-webkit-margin-start"?: Property.MarginInlineStart<string | number>;
"-webkit-mask-attachment"?: Property.WebkitMaskAttachment;
"-webkit-mask-box-image-outset"?: Property.MaskBorderOutset<string | number>;
"-webkit-mask-box-image-repeat"?: Property.MaskBorderRepeat;
"-webkit-mask-box-image-slice"?: Property.MaskBorderSlice;
"-webkit-mask-box-image-source"?: Property.MaskBorderSource;
"-webkit-mask-box-image-width"?: Property.MaskBorderWidth<string | number>;
"-webkit-mask-clip"?: Property.WebkitMaskClip;
"-webkit-mask-composite"?: Property.WebkitMaskComposite;
"-webkit-mask-image"?: Property.WebkitMaskImage;
"-webkit-mask-origin"?: Property.WebkitMaskOrigin;
"-webkit-mask-position"?: Property.WebkitMaskPosition<string | number>;
"-webkit-mask-position-x"?: Property.WebkitMaskPositionX<string | number>;
"-webkit-mask-position-y"?: Property.WebkitMaskPositionY<string | number>;
"-webkit-mask-repeat"?: Property.WebkitMaskRepeat;
"-webkit-mask-repeat-x"?: Property.WebkitMaskRepeatX;
"-webkit-mask-repeat-y"?: Property.WebkitMaskRepeatY;
"-webkit-mask-size"?: Property.WebkitMaskSize<string | number>;
"-webkit-max-inline-size"?: Property.MaxInlineSize<string | number>;
"-webkit-order"?: Property.Order;
"-webkit-overflow-scrolling"?: Property.WebkitOverflowScrolling;
"-webkit-padding-end"?: Property.PaddingInlineEnd<string | number>;
"-webkit-padding-start"?: Property.PaddingInlineStart<string | number>;
"-webkit-perspective"?: Property.Perspective<string | number>;
"-webkit-perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"-webkit-print-color-adjust"?: Property.PrintColorAdjust;
"-webkit-ruby-position"?: Property.RubyPosition;
"-webkit-scroll-snap-type"?: Property.ScrollSnapType;
"-webkit-shape-margin"?: Property.ShapeMargin<string | number>;
"-webkit-tap-highlight-color"?: Property.WebkitTapHighlightColor;
"-webkit-text-combine"?: Property.TextCombineUpright;
"-webkit-text-decoration-color"?: Property.TextDecorationColor;
"-webkit-text-decoration-line"?: Property.TextDecorationLine;
"-webkit-text-decoration-skip"?: Property.TextDecorationSkip;
"-webkit-text-decoration-style"?: Property.TextDecorationStyle;
"-webkit-text-emphasis-color"?: Property.TextEmphasisColor;
"-webkit-text-emphasis-position"?: Property.TextEmphasisPosition;
"-webkit-text-emphasis-style"?: Property.TextEmphasisStyle;
"-webkit-text-fill-color"?: Property.WebkitTextFillColor;
"-webkit-text-orientation"?: Property.TextOrientation;
"-webkit-text-size-adjust"?: Property.TextSizeAdjust;
"-webkit-text-stroke-color"?: Property.WebkitTextStrokeColor;
"-webkit-text-stroke-width"?: Property.WebkitTextStrokeWidth<string | number>;
"-webkit-text-underline-position"?: Property.TextUnderlinePosition;
"-webkit-touch-callout"?: Property.WebkitTouchCallout;
"-webkit-transform"?: Property.Transform;
"-webkit-transform-origin"?: Property.TransformOrigin<string | number>;
"-webkit-transform-style"?: Property.TransformStyle;
"-webkit-transition-delay"?: Property.TransitionDelay<string & {}>;
"-webkit-transition-duration"?: Property.TransitionDuration<string & {}>;
"-webkit-transition-property"?: Property.TransitionProperty;
"-webkit-transition-timing-function"?: Property.TransitionTimingFunction;
"-webkit-user-modify"?: Property.WebkitUserModify;
"-webkit-user-select"?: Property.UserSelect;
"-webkit-writing-mode"?: Property.WritingMode;
"-moz-animation"?: Property.Animation<string & {}>;
"-moz-border-image"?: Property.BorderImage;
"-moz-column-rule"?: Property.ColumnRule<string | number>;
"-moz-columns"?: Property.Columns<string | number>;
"-moz-outline-radius"?: Property.MozOutlineRadius<string | number>;
"-ms-content-zoom-limit"?: Property.MsContentZoomLimit;
"-ms-content-zoom-snap"?: Property.MsContentZoomSnap;
"-ms-flex"?: Property.Flex<string | number>;
"-ms-scroll-limit"?: Property.MsScrollLimit;
"-ms-scroll-snap-x"?: Property.MsScrollSnapX;
"-ms-scroll-snap-y"?: Property.MsScrollSnapY;
"-ms-transition"?: Property.Transition<string & {}>;
"-webkit-animation"?: Property.Animation<string & {}>;
"-webkit-border-before"?: Property.WebkitBorderBefore<string | number>;
"-webkit-border-image"?: Property.BorderImage;
"-webkit-border-radius"?: Property.BorderRadius<string | number>;
"-webkit-column-rule"?: Property.ColumnRule<string | number>;
"-webkit-columns"?: Property.Columns<string | number>;
"-webkit-flex"?: Property.Flex<string | number>;
"-webkit-flex-flow"?: Property.FlexFlow;
"-webkit-mask"?: Property.WebkitMask<string | number>;
"-webkit-mask-box-image"?: Property.MaskBorder;
"-webkit-text-emphasis"?: Property.TextEmphasis;
"-webkit-text-stroke"?: Property.WebkitTextStroke<string | number>;
"-webkit-transition"?: Property.Transition<string & {}>;
"box-align"?: Property.BoxAlign;
"box-direction"?: Property.BoxDirection;
"box-flex"?: Property.BoxFlex;
"box-flex-group"?: Property.BoxFlexGroup;
"box-lines"?: Property.BoxLines;
"box-ordinal-group"?: Property.BoxOrdinalGroup;
"box-orient"?: Property.BoxOrient;
"box-pack"?: Property.BoxPack;
"grid-column-gap"?: Property.GridColumnGap<string | number>;
"grid-gap"?: Property.GridGap<string | number>;
"grid-row-gap"?: Property.GridRowGap<string | number>;
"ime-mode"?: Property.ImeMode;
"offset-block"?: Property.InsetBlock<string | number>;
"offset-block-end"?: Property.InsetBlockEnd<string | number>;
"offset-block-start"?: Property.InsetBlockStart<string | number>;
"offset-inline"?: Property.InsetInline<string | number>;
"offset-inline-end"?: Property.InsetInlineEnd<string | number>;
"offset-inline-start"?: Property.InsetInlineStart<string | number>;
"scroll-snap-coordinate"?: Property.ScrollSnapCoordinate<string | number>;
"scroll-snap-destination"?: Property.ScrollSnapDestination<string | number>;
"scroll-snap-points-x"?: Property.ScrollSnapPointsX;
"scroll-snap-points-y"?: Property.ScrollSnapPointsY;
"scroll-snap-type-x"?: Property.ScrollSnapTypeX;
"scroll-snap-type-y"?: Property.ScrollSnapTypeY;
"-khtml-box-align"?: Property.BoxAlign;
"-khtml-box-direction"?: Property.BoxDirection;
"-khtml-box-flex"?: Property.BoxFlex;
"-khtml-box-flex-group"?: Property.BoxFlexGroup;
"-khtml-box-lines"?: Property.BoxLines;
"-khtml-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-khtml-box-orient"?: Property.BoxOrient;
"-khtml-box-pack"?: Property.BoxPack;
"-khtml-line-break"?: Property.LineBreak;
"-khtml-opacity"?: Property.Opacity;
"-khtml-user-select"?: Property.UserSelect;
"-moz-backface-visibility"?: Property.BackfaceVisibility;
"-moz-background-clip"?: Property.BackgroundClip;
"-moz-background-inline-policy"?: Property.BoxDecorationBreak;
"-moz-background-origin"?: Property.BackgroundOrigin;
"-moz-background-size"?: Property.BackgroundSize<string | number>;
"-moz-border-radius"?: Property.BorderRadius<string | number>;
"-moz-border-radius-bottomleft"?: Property.BorderBottomLeftRadius<string | number>;
"-moz-border-radius-bottomright"?: Property.BorderBottomRightRadius<string | number>;
"-moz-border-radius-topleft"?: Property.BorderTopLeftRadius<string | number>;
"-moz-border-radius-topright"?: Property.BorderTopRightRadius<string | number>;
"-moz-box-align"?: Property.BoxAlign;
"-moz-box-direction"?: Property.BoxDirection;
"-moz-box-flex"?: Property.BoxFlex;
"-moz-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-moz-box-orient"?: Property.BoxOrient;
"-moz-box-pack"?: Property.BoxPack;
"-moz-box-shadow"?: Property.BoxShadow;
"-moz-float-edge"?: Property.MozFloatEdge;
"-moz-force-broken-image-icon"?: Property.MozForceBrokenImageIcon;
"-moz-opacity"?: Property.Opacity;
"-moz-outline"?: Property.Outline<string | number>;
"-moz-outline-color"?: Property.OutlineColor;
"-moz-outline-style"?: Property.OutlineStyle;
"-moz-outline-width"?: Property.OutlineWidth<string | number>;
"-moz-perspective"?: Property.Perspective<string | number>;
"-moz-perspective-origin"?: Property.PerspectiveOrigin<string | number>;
"-moz-text-align-last"?: Property.TextAlignLast;
"-moz-text-decoration-color"?: Property.TextDecorationColor;
"-moz-text-decoration-line"?: Property.TextDecorationLine;
"-moz-text-decoration-style"?: Property.TextDecorationStyle;
"-moz-transform"?: Property.Transform;
"-moz-transform-origin"?: Property.TransformOrigin<string | number>;
"-moz-transform-style"?: Property.TransformStyle;
"-moz-transition"?: Property.Transition<string & {}>;
"-moz-transition-delay"?: Property.TransitionDelay<string & {}>;
"-moz-transition-duration"?: Property.TransitionDuration<string & {}>;
"-moz-transition-property"?: Property.TransitionProperty;
"-moz-transition-timing-function"?: Property.TransitionTimingFunction;
"-moz-user-input"?: Property.MozUserInput;
"-ms-ime-mode"?: Property.ImeMode;
"-o-animation"?: Property.Animation<string & {}>;
"-o-animation-delay"?: Property.AnimationDelay<string & {}>;
"-o-animation-direction"?: Property.AnimationDirection;
"-o-animation-duration"?: Property.AnimationDuration<string & {}>;
"-o-animation-fill-mode"?: Property.AnimationFillMode;
"-o-animation-iteration-count"?: Property.AnimationIterationCount;
"-o-animation-name"?: Property.AnimationName;
"-o-animation-play-state"?: Property.AnimationPlayState;
"-o-animation-timing-function"?: Property.AnimationTimingFunction;
"-o-background-size"?: Property.BackgroundSize<string | number>;
"-o-border-image"?: Property.BorderImage;
"-o-object-fit"?: Property.ObjectFit;
"-o-object-position"?: Property.ObjectPosition<string | number>;
"-o-tab-size"?: Property.TabSize<string | number>;
"-o-text-overflow"?: Property.TextOverflow;
"-o-transform"?: Property.Transform;
"-o-transform-origin"?: Property.TransformOrigin<string | number>;
"-o-transition"?: Property.Transition<string & {}>;
"-o-transition-delay"?: Property.TransitionDelay<string & {}>;
"-o-transition-duration"?: Property.TransitionDuration<string & {}>;
"-o-transition-property"?: Property.TransitionProperty;
"-o-transition-timing-function"?: Property.TransitionTimingFunction;
"-webkit-box-align"?: Property.BoxAlign;
"-webkit-box-direction"?: Property.BoxDirection;
"-webkit-box-flex"?: Property.BoxFlex;
"-webkit-box-flex-group"?: Property.BoxFlexGroup;
"-webkit-box-lines"?: Property.BoxLines;
"-webkit-box-ordinal-group"?: Property.BoxOrdinalGroup;
"-webkit-box-orient"?: Property.BoxOrient;
"-webkit-box-pack"?: Property.BoxPack;
"alignment-baseline"?: Property.AlignmentBaseline;
"baseline-shift"?: Property.BaselineShift<string | number>;
"clip-rule"?: Property.ClipRule;
"color-interpolation"?: Property.ColorInterpolation;
"color-rendering"?: Property.ColorRendering;
"dominant-baseline"?: Property.DominantBaseline;
"fill-opacity"?: Property.FillOpacity;
"fill-rule"?: Property.FillRule;
"flood-color"?: Property.FloodColor;
"flood-opacity"?: Property.FloodOpacity;
"glyph-orientation-vertical"?: Property.GlyphOrientationVertical;
"lighting-color"?: Property.LightingColor;
"marker-end"?: Property.MarkerEnd;
"marker-mid"?: Property.MarkerMid;
"marker-start"?: Property.MarkerStart;
"shape-rendering"?: Property.ShapeRendering;
"stop-color"?: Property.StopColor;
"stop-opacity"?: Property.StopOpacity;
"stroke-dasharray"?: Property.StrokeDasharray<string | number>;
"stroke-dashoffset"?: Property.StrokeDashoffset<string | number>;
"stroke-linecap"?: Property.StrokeLinecap;
"stroke-linejoin"?: Property.StrokeLinejoin;
"stroke-miterlimit"?: Property.StrokeMiterlimit;
"stroke-opacity"?: Property.StrokeOpacity;
"stroke-width"?: Property.StrokeWidth<string | number>;
"text-anchor"?: Property.TextAnchor;
"vector-effect"?: Property.VectorEffect;
}>;
isShowSelector: Ref<boolean, boolean>;
isNeedSelect: ComputedRef<boolean>;
formatOptions: ComputedRef<string[]>;
onShow: () => void;
onFormatChange: (format: string) => void;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, "change"[], "change", PublicProps, Readonly<ExtractPropTypes<    {
value: {
type: StringConstructor;
default: string;
};
showAlpha: {
type: BooleanConstructor;
};
options: {
type: PropType<Boolean | Format[]>;
};
}>> & Readonly<{
onChange?: (...args: any[]) => any;
}>, {
value: string;
showAlpha: boolean;
}, {}, {}, {}, string, ComponentProvideOptions, true, {}, any>;
}, {}, string, ComponentProvideOptions, true, {}, any>;
}, {}, string, ComponentProvideOptions, true, {}, any>;
AddColorItem: DefineComponent<ExtractPropTypes<    {
size: {
type: NumberConstructor;
default: number;
};
selected: {
type: BooleanConstructor;
default: boolean;
};
}>, {
addColorItemStyle: ComputedRef<    {
width: string;
height: string;
lineHeight: string;
boxShadow: string;
}>;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<    {
size: {
type: NumberConstructor;
default: number;
};
selected: {
type: BooleanConstructor;
default: boolean;
};
}>> & Readonly<{}>, {
size: number;
selected: boolean;
}, {}, {}, {}, string, ComponentProvideOptions, true, {}, any>;
}, {}, string, ComponentProvideOptions, true, {}, any>;
export default _default;

export declare type Format = 'rgb' | 'hex' | 'hsl' | 'hsv';

export declare const FORMAT_MAP: {
    rgb: string;
    hex: string;
    hsl: string;
    hsv: string;
};

export declare const FORMAT_VALUE_MAP: {
    RGB: string;
    RGBA: string;
    HEX: string;
    HSL: string;
    HSLA: string;
    HSV: string;
    HSVA: string;
};

export declare type Theme = 'light' | 'dark';

export { }
